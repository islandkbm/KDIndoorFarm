{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\pages\\\\autocontrolpage.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport AutoControlconfig from \"../commonjs/autocontrolconfig\";\nimport IndoorFarmAPI from \"../indoorfarmapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Autocontrolpage = () => {\n  _s2();\n\n  const [mSensors, setUpdatesensor] = useState([]);\n  const [mAutolist, setUpdateauto] = useState([]);\n  const [mDevices, setUpdatedevice] = useState([]);\n  const [mSelecteditem, setupselected] = useState(null);\n  useEffect(() => {\n    IndoorFarmAPI.getautocontrols().then(mrsp => {\n      setUpdatesensor(mrsp.Sensors);\n      setUpdateauto(mrsp.AutoControls);\n      setUpdatedevice(mrsp.Outputs);\n    });\n  }, []);\n\n  function secToTime(dayseconds) {\n    if (dayseconds >= 24 * 3600) {\n      return \"23:59\";\n    }\n\n    let hour = Math.floor(dayseconds / 3600);\n    let min = Math.floor((dayseconds - hour * 3600) / 60);\n    if (hour < 10) hour = \"0\" + hour;\n    if (min < 10) min = \"0\" + min;\n    console.log(\"secToTime : \" + (hour + \":\" + min));\n    return hour + \":\" + min;\n  }\n\n  function timeTosec(timestr) {\n    const [hours, minutes] = timestr.value.split(':');\n    return Number(hours * 3600 + minutes * 60);\n  }\n\n  function Autocontroleditbox(mydata, msensorlist, mdevlist) {\n    console.log(\"Autocontroleditbox  misTimer: \" + misTimer);\n\n    if (mydata == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this);\n    } else {\n      var _s = $RefreshSig$();\n\n      let copycfg = AutoControlconfig.deepcopy(mydata.mConfig); //selectcontrol(copycfg.istimer);\n      //let starttime_sec =/3600)+\":\"+ ((mydata.mConfig.starttime/60)%60);\n      //let endtime_sec = (mydata.mConfig.endtime/3600)+\":\"+ ((mydata.mConfig.endtime/60)%60);\n\n      function setupSave(mcfg) {\n        console.log(\"setupSave uid: \" + mcfg.uniqid + \" name : \" + mcfg.name);\n        IndoorFarmAPI.setAutocontrolsetup(mcfg).then(ret => {\n          console.log(\"setAutocontrolsetup  uid: \" + ret);\n        });\n      }\n\n      function inputonchangeHandler(e) {\n        console.log(\"inputonchangeHandler : \" + e.target.name);\n\n        switch (e.target.name) {\n          case \"name\":\n            copycfg.name = e.target.value;\n            break;\n\n          case \"onvalue\":\n            copycfg.onvalue = Number(e.target.value);\n            break;\n\n          case \"offvalue\":\n            copycfg.offvalue = Number(e.target.value);\n            break;\n\n          case \"starttime\":\n            copycfg.starttime = timeTosec(e.target.value);\n            break;\n\n          case \"endtime\":\n            copycfg.endtime = timeTosec(e.target.value);\n            break;\n\n          case \"controlsel\":\n            if (e.target.checked === true && e.target.id === \"timer\") {\n              copycfg.istimer = true;\n            } else {\n              copycfg.istimer = false;\n            }\n\n            selectcontrol(copycfg.istimer);\n            break;\n        }\n\n        if (e.target.name === \"devcheck\") {\n          let isexist = false;\n\n          for (let i = 0; i < copycfg.devids.length; i++) {\n            if (copycfg.devids[i] === Number(e.target.id)) {\n              if (e.target.checked === false) {\n                copycfg.devids.splice(i, 1);\n                return;\n              } else {\n                isexist = true;\n                break;\n              }\n            }\n          } //새로추가\n\n\n          if (isexist === false) {\n            copycfg.devids.push(Number(e.target.id));\n          }\n        }\n      }\n\n      function sensorselectbox(mitem) {\n        return /*#__PURE__*/_jsxDEV(\"ui\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"sensorsel\",\n            defaultChecked: mitem.seleted,\n            id: mitem.uniqkey\n          }, mydata.mConfig.uniqid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), mitem.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this);\n      }\n\n      function devicecheckbox(mitem) {\n        return /*#__PURE__*/_jsxDEV(\"ui\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"devcheck\",\n            defaultChecked: mitem.seleted,\n            id: mitem.uniqkey\n          }, mydata.mConfig.uniqid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), mitem.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this);\n      }\n\n      let slist = [];\n\n      for (const ss of msensorlist) {\n        let seleted = false;\n\n        if (mydata.mConfig.sensorid === ss.UniqID) {\n          console.log(\"select sensorid : \" + ss.UniqID);\n          seleted = true;\n        }\n\n        const title = ss.Name + \"(노드:\" + ss.nodeID + \" , 채널 :\" + ss.channel + \")\";\n        const uniqkey = ss.UniqID;\n        slist.push({\n          title: title,\n          seleted: seleted,\n          uniqkey: uniqkey\n        });\n      }\n\n      let dlist = [];\n\n      for (const dev of mdevlist) {\n        let seleted = false;\n\n        for (const di of mydata.mConfig.devids) {\n          if (di === dev.UniqID) {\n            console.log(\"select dev id : \" + dev.UniqID);\n            seleted = true;\n            break;\n          }\n        }\n\n        const title = dev.Name + \"( 채널 :\" + dev.Channel + \")\";\n        const uniqkey = dev.UniqID;\n        dlist.push({\n          title: title,\n          seleted: seleted,\n          uniqkey: uniqkey\n        });\n      }\n\n      function Sensorcoditonbox(mycfg, sensorlist) {\n        _s();\n\n        const [misTimer, selectcontrol] = useState(mydata != null && mydata.mConfig.istimer);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sensorconditionbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sensorselectbox\",\n            onChange: inputonchangeHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uC13C\\uC11C\\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 14\n            }, this), sensorlist.map((localState, index) => sensorselectbox(localState))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uCF1C\\uC9D0\\uC870\\uAC74: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            defaultValue: mycfg.onvalue,\n            name: \"onvalue\",\n            onChange: inputonchangeHandler\n          }, \"onvalue\" + mycfg.uniqid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uAEBC\\uC9D0\\uC870\\uAC74: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            defaultValue: mycfg.offvalue,\n            name: \"offvalue\",\n            onChange: inputonchangeHandler\n          }, \"offvalue\" + mycfg.uniqid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this);\n      }\n\n      _s(Sensorcoditonbox, \"RiVhzOoQATnhuj6fKQQ6GvrltG8=\");\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"autosetupbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC774\\uB984: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: copycfg.name,\n          name: \"name\",\n          onChange: inputonchangeHandler\n        }, \"name\" + copycfg.uniqid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC2DC\\uC791\\uC2DC\\uAC04: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          defaultValue: secToTime(copycfg.starttime),\n          name: \"starttime\",\n          onChange: inputonchangeHandler\n        }, \"starttime\" + copycfg.uniqid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC885\\uB8CC\\uC2DC\\uAC04: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          defaultValue: secToTime(copycfg.endtime),\n          name: \"endtime\",\n          onChange: inputonchangeHandler\n        }, \"endtime\" + copycfg.uniqid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outportselectbox\",\n          onChange: inputonchangeHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uCD9C\\uB825\\uC7A5\\uCE58 \\uC120\\uD0DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), dlist.map((localState, index) => devicecheckbox(localState))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controlselectbox\",\n          onChange: inputonchangeHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"controlsel\",\n            defaultChecked: copycfg.istimer,\n            id: \"timer\"\n          }, \"timer\" + copycfg.uniqid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), \" \\uD0C0\\uC784\\uBA38 \\uC81C\\uC5B4\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"controlsel\",\n            defaultChecked: copycfg.istimer === false,\n            id: \"sensor\"\n          }, \"sensor\" + copycfg.uniqid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), \"\\uC13C\\uC11C\\uC81C\\uC5B4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), Sensorcoditonbox(copycfg, slist), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setupSave(copycfg),\n          id: \"editcheck\",\n          children: \" \\uC800\\uC7A5    \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setupselected(null),\n          id: \"editcheck\",\n          children: \"\\uCDE8\\uC18C    \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function autocontrolbox(mydata) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocontrolbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"ui\", {\n        children: \" ... ...............\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ui\", {\n        children: mydata.mConfig.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ui\", {\n        children: mydata.mConfig.enabled == true ? \"작동중\" : \"정지됨\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setupselected(mydata),\n        id: \"editcheck\",\n        children: \" \\uC218\\uC815 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Autocontrol Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controltop\",\n      children: [\"\\uC815\\uB82C :\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"pets\",\n        id: \"pet-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"\\uC2DC\\uAC04\\uC21C\\uC11C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"\\uC774\\uB984\\uC21C\\uC11C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+ \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocontroltable\",\n      children: [Autocontroleditbox(mSelecteditem, mSensors, mDevices), mAutolist.map((localState, index) => autocontrolbox(localState))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Autocontrolpage, \"20OoqUTIIBIiutOSzshmewZvWQU=\");\n\n_c = Autocontrolpage;\nexport default Autocontrolpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocontrolpage\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/autocontrolpage.js"],"names":["React","Component","useState","useEffect","AutoControlconfig","IndoorFarmAPI","Autocontrolpage","mSensors","setUpdatesensor","mAutolist","setUpdateauto","mDevices","setUpdatedevice","mSelecteditem","setupselected","getautocontrols","then","mrsp","Sensors","AutoControls","Outputs","secToTime","dayseconds","hour","Math","floor","min","console","log","timeTosec","timestr","hours","minutes","value","split","Number","Autocontroleditbox","mydata","msensorlist","mdevlist","misTimer","copycfg","deepcopy","mConfig","setupSave","mcfg","uniqid","name","setAutocontrolsetup","ret","inputonchangeHandler","e","target","onvalue","offvalue","starttime","endtime","checked","id","istimer","selectcontrol","isexist","i","devids","length","splice","push","sensorselectbox","mitem","seleted","uniqkey","title","devicecheckbox","slist","ss","sensorid","UniqID","Name","nodeID","channel","dlist","dev","di","Channel","Sensorcoditonbox","mycfg","sensorlist","map","localState","index","autocontrolbox","enabled"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport AutoControlconfig from \"../commonjs/autocontrolconfig\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\n\r\nconst Autocontrolpage = () => {\r\n  const [mSensors, setUpdatesensor] = useState([]);\r\n  const [mAutolist, setUpdateauto] = useState([]);\r\n  const [mDevices, setUpdatedevice] = useState([]);\r\n  const [mSelecteditem, setupselected] = useState(null);\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    IndoorFarmAPI.getautocontrols().then((mrsp) => {\r\n      setUpdatesensor(mrsp.Sensors);\r\n      setUpdateauto(mrsp.AutoControls);\r\n      setUpdatedevice(mrsp.Outputs);\r\n      \r\n    });\r\n  }, []);\r\n\r\n  function secToTime(dayseconds)\r\n  {\r\n    if(dayseconds >= (24*3600))\r\n    {\r\n     return \"23:59\";\r\n    }\r\n    let hour=Math.floor(dayseconds / 3600);\r\n    let min=Math.floor((dayseconds - (hour * 3600)) / 60);\r\n    if(hour <10) hour=\"0\"+hour;\r\n    if(min <10) min=\"0\"+min;\r\n    console.log(\"secToTime : \" + (hour+\":\"+min));\r\n    return  (hour+\":\"+min);\r\n  }\r\n\r\n  function timeTosec(timestr)\r\n  {\r\n    const [hours, minutes] = timestr.value.split(':');\r\n    return Number(hours*3600+minutes*60);\r\n  }\r\n  \r\n\r\n\r\n  function Autocontroleditbox(mydata, msensorlist, mdevlist) {\r\n\r\n    \r\n    console.log(\"Autocontroleditbox  misTimer: \" + misTimer);\r\n\r\n\r\n    if (mydata == null) {\r\n      return <div></div>;\r\n    } else {\r\n      let copycfg = AutoControlconfig.deepcopy(mydata.mConfig);\r\n      \r\n      //selectcontrol(copycfg.istimer);\r\n      \r\n      //let starttime_sec =/3600)+\":\"+ ((mydata.mConfig.starttime/60)%60);\r\n      //let endtime_sec = (mydata.mConfig.endtime/3600)+\":\"+ ((mydata.mConfig.endtime/60)%60);\r\n\r\n      function setupSave(mcfg) {\r\n        console.log(\"setupSave uid: \" + mcfg.uniqid + \" name : \" + mcfg.name);\r\n        IndoorFarmAPI.setAutocontrolsetup(mcfg).then((ret) => {\r\n          console.log(\"setAutocontrolsetup  uid: \" + ret);\r\n        });\r\n      }\r\n\r\n      function inputonchangeHandler(e) {\r\n        console.log(\"inputonchangeHandler : \" + e.target.name);\r\n\r\n        switch(e.target.name)\r\n        {\r\n          case \"name\": copycfg.name = e.target.value; break;\r\n\r\n          case \"onvalue\": copycfg.onvalue = Number(e.target.value);break;\r\n          case \"offvalue\": copycfg.offvalue = Number(e.target.value); break;\r\n\r\n          case \"starttime\": copycfg.starttime = timeTosec(e.target.value); break;\r\n          case \"endtime\": copycfg.endtime = timeTosec(e.target.value); break;\r\n\r\n          case \"controlsel\": \r\n          if (e.target.checked === true && e.target.id === \"timer\")\r\n          {\r\n            copycfg.istimer=true;\r\n          }\r\n          else{\r\n            copycfg.istimer=false;\r\n          }\r\n\r\n          selectcontrol(copycfg.istimer);\r\n\r\n          break;\r\n\r\n        }\r\n\r\n       \r\n\r\n        if (e.target.name === \"devcheck\") {\r\n          let isexist = false;\r\n          for (let i = 0; i < copycfg.devids.length; i++) {\r\n            if (copycfg.devids[i] === Number(e.target.id)) {\r\n              if (e.target.checked === false) {\r\n                copycfg.devids.splice(i, 1);\r\n                return;\r\n              } else {\r\n                isexist = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          //새로추가\r\n          if (isexist === false) {\r\n            copycfg.devids.push(Number(e.target.id));\r\n          }\r\n        }\r\n      }\r\n\r\n      function sensorselectbox(mitem) {\r\n        return (\r\n          <ui>\r\n            <input type=\"radio\" key={mydata.mConfig.uniqid} name=\"sensorsel\" defaultChecked={mitem.seleted} id={mitem.uniqkey} />\r\n            {mitem.title}\r\n          </ui>\r\n        );\r\n      }\r\n\r\n      function devicecheckbox(mitem) {\r\n        return (\r\n          <ui>\r\n\r\n            <input type=\"checkbox\" key={mydata.mConfig.uniqid} name=\"devcheck\" defaultChecked={mitem.seleted} id={mitem.uniqkey} />\r\n            {mitem.title}\r\n          </ui>\r\n        );\r\n      }\r\n\r\n     \r\n\r\n      let slist = [];\r\n      for (const ss of msensorlist) {\r\n        let seleted = false;\r\n        if (mydata.mConfig.sensorid === ss.UniqID) {\r\n          console.log(\"select sensorid : \" + ss.UniqID);\r\n          seleted = true;\r\n        }\r\n        const title = ss.Name + \"(노드:\" + ss.nodeID + \" , 채널 :\" + ss.channel + \")\";\r\n        const uniqkey = ss.UniqID;\r\n        slist.push({ title: title, seleted: seleted, uniqkey: uniqkey });\r\n      }\r\n\r\n      let dlist = [];\r\n      for (const dev of mdevlist) {\r\n        let seleted = false;\r\n\r\n        for (const di of mydata.mConfig.devids) {\r\n          if (di === dev.UniqID) {\r\n            console.log(\"select dev id : \" + dev.UniqID);\r\n            seleted = true;\r\n            break;\r\n          }\r\n        }\r\n        const title = dev.Name + \"( 채널 :\" + dev.Channel + \")\";\r\n        const uniqkey = dev.UniqID;\r\n\r\n        dlist.push({ title: title, seleted: seleted, uniqkey: uniqkey });\r\n      }\r\n\r\n      function Sensorcoditonbox(mycfg, sensorlist)\r\n      {\r\n\r\n        const [misTimer, selectcontrol] = useState(mydata!=null && mydata.mConfig.istimer);  \r\n\r\n\r\n        \r\n        return (\r\n          <div className=\"sensorconditionbox\">\r\n             <div className=\"sensorselectbox\" onChange={inputonchangeHandler}>\r\n             <h4>센서선택</h4>\r\n            {sensorlist.map((localState, index) => sensorselectbox(localState))}\r\n          </div>\r\n\r\n          <label>켜짐조건: </label>\r\n          <input type=\"number\" key={\"onvalue\" + mycfg.uniqid} defaultValue={mycfg.onvalue} name=\"onvalue\" onChange={inputonchangeHandler} />\r\n          <label>꺼짐조건: </label>\r\n          <input type=\"number\" key={\"offvalue\" + mycfg.uniqid} defaultValue={mycfg.offvalue} name=\"offvalue\" onChange={inputonchangeHandler} />\r\n          </div>\r\n        );\r\n      }\r\n\r\n\r\n\r\n\r\n      return (\r\n        <div className=\"autosetupbox\">\r\n          <ul>{}</ul>\r\n          <label>이름: </label>\r\n          <input type=\"text\" key={\"name\" + copycfg.uniqid} defaultValue={copycfg.name} name=\"name\" onChange={inputonchangeHandler} />\r\n\r\n          <label>시작시간: </label>\r\n          <input type=\"time\" key={\"starttime\" + copycfg.uniqid} defaultValue={secToTime(copycfg.starttime)} name=\"starttime\" onChange={inputonchangeHandler} />\r\n          <label>종료시간: </label>\r\n          <input type=\"time\" key={\"endtime\" + copycfg.uniqid} defaultValue={secToTime(copycfg.endtime)} name=\"endtime\" onChange={inputonchangeHandler} />\r\n          <p></p>\r\n\r\n\r\n\r\n          <div className=\"outportselectbox\" onChange={inputonchangeHandler}>\r\n          <h4>출력장치 선택</h4>\r\n            {dlist.map((localState, index) => devicecheckbox(localState))}\r\n          </div>\r\n          <p></p>\r\n          <div className=\"controlselectbox\" onChange={inputonchangeHandler}>\r\n            <input type=\"radio\" key={\"timer\"+copycfg.uniqid} name=\"controlsel\" defaultChecked={copycfg.istimer} id=\"timer\" /> 타임머 제어\r\n            <input type=\"radio\" key={\"sensor\"+copycfg.uniqid} name=\"controlsel\" defaultChecked={copycfg.istimer===false} id=\"sensor\" />센서제어\r\n          </div>\r\n\r\n\r\n\r\n            {  Sensorcoditonbox(copycfg,slist)}\r\n\r\n          <p></p>\r\n\r\n          <button onClick={() => setupSave(copycfg)} id=\"editcheck\"> 저장    </button>\r\n          <button onClick={() => setupselected(null)} id=\"editcheck\">취소    </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  function autocontrolbox(mydata) {\r\n    return (\r\n      <div className=\"autocontrolbox\">\r\n        <ui> ... ...............</ui>\r\n        <ui>{mydata.mConfig.name}</ui>\r\n        <span> </span>\r\n        <ui>{mydata.mConfig.enabled == true ? \"작동중\" : \"정지됨\"}</ui>\r\n        <button onClick={() => setupselected(mydata)} id=\"editcheck\"> 수정 </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Autocontrol Page</h4>\r\n      <div className=\"controltop\">\r\n        정렬 :\r\n        <select name=\"pets\" id=\"pet-select\">\r\n          <option value=\"1\">시간순서</option>\r\n          <option value=\"2\">이름순서</option>\r\n          <option value=\"3\">카테고리</option>\r\n        </select>\r\n        <button>+ 추가</button>\r\n      </div>\r\n      <div className=\"autocontroltable\">\r\n        {Autocontroleditbox(mSelecteditem, mSensors, mDevices)}\r\n        {mAutolist.map((localState, index) => autocontrolbox(localState))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Autocontrolpage;\r\n"]},"metadata":{},"sourceType":"module"}