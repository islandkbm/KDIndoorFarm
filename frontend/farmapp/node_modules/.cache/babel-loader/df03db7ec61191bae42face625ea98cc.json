{"ast":null,"code":"import reqMessage from \"./reqMessage\";\nimport Sensordevice from \"./commonjs/sensordevice\";\nimport Outputdevice from \"./commonjs/outputdevice\";\nimport AutoControl from \"./commonjs/autocontrol\";\nimport responseMessage from \"./commonjs/responseMessage\";\nconst API = \"/api/\";\nexport default class IndoorFarmAPI {\n  constructor() {\n    this.abc = \"123\";\n    this.def = \"456\";\n  }\n\n  static logout(mobj) {\n    console.log(\"IndoorFarmAPI \");\n    return \"logout\";\n  }\n\n  static async postData(url = \"\", data = {}) {\n    const response = await fetch(url, {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    });\n    return response; // parses JSON response into native JavaScript objects\n  }\n\n  static async getsensordatas() {\n    var mlist = [];\n\n    try {\n      const reqmsg = new reqMessage();\n      reqmsg.getSensors = true;\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\n      const resdata = await res.json();\n      resdata.Sensors.forEach(element => {\n        mlist.push(Sensordevice.Clonbyjsonobj(element));\n      });\n    } catch (error) {\n      console.log(\" getsensordata error : \" + error);\n    } finally {\n      console.log(\" getsensordata finally  : \" + mlist.length);\n      return mlist;\n    }\n  }\n\n  static async getautocontrols() {\n    let mrepmsg = new responseMessage();\n\n    try {\n      const reqmsg = new reqMessage(); //자동제어  센서목록, 출력목록 다 가져옴\n\n      reqmsg.getAutoControl = true;\n      reqmsg.getSensors = true;\n      reqmsg.getOutputport = true;\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\n      const resdata = await res.json();\n      resdata.AutoControls.forEach(element => {\n        mrepmsg.AutoControls.push(AutoControl.Clonbyjsonobj(element));\n      });\n      resdata.Sensors.forEach(element => {\n        mrepmsg.Sensors.push(Sensordevice.Clonbyjsonobj(element));\n      });\n      resdata.Outputs.forEach(element => {\n        mrepmsg.Outputs.push(Outputdevice.Clonbyjsonobj(element));\n      });\n    } catch (error) {\n      console.log(\" getautocontrols error : \" + error);\n    } finally {\n      console.log(\" getautocontrols finally  : \" + mrepmsg.AutoControls.length);\n      return mrepmsg;\n    }\n  }\n\n  static async getoutputstatus() {\n    var mlist = [];\n\n    try {\n      const reqmsg = new reqMessage();\n      reqmsg.getOutputport = true;\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\n      const resdata = await res.json();\n      resdata.Outputs.forEach(element => {\n        mlist.push(Outputdevice.Clonbyjsonobj(element));\n      });\n    } catch (error) {\n      console.log(\" getoutputstatus error : \" + error);\n    } finally {\n      console.log(\" getoutputstatus finally  : \" + mlist.length);\n      return mlist;\n    }\n  }\n\n  static async setmanualonoff(moutputport) {\n    var mlist = [];\n\n    try {\n      const reqmsg = new reqMessage();\n      reqmsg.setManualControl = true;\n      reqmsg.OutputManual.push(moutputport);\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\n      const resdata = await res.json();\n      console.log(\" setmanualonoff rsp : \" + resdata.IsOK);\n    } catch (error) {\n      console.log(\" setmanualonoff error : \" + error);\n    } finally {\n      console.log(\" setmanualonoff finally  : \" + mlist.length);\n      return mlist;\n    }\n  }\n\n  static async setAutocontrolsetup(mAutocfg) {\n    var isok = false;\n\n    try {\n      const reqmsg = new reqMessage();\n      reqmsg.setAutocontrol = true;\n      reqmsg.Autoconfigitem = mAutocfg;\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\n      const resdata = await res.json();\n      console.log(\" setAutocontrolsetup rsp : \" + resdata.IsOK);\n      isok = true;\n    } catch (error) {\n      console.log(\" setAutocontrolsetup error : \" + error);\n    } finally {\n      console.log(\" setAutocontrolsetup finally  : \" + isok);\n      return isok;\n    }\n  }\n\n}","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/indoorfarmapi.js"],"names":["reqMessage","Sensordevice","Outputdevice","AutoControl","responseMessage","API","IndoorFarmAPI","abc","def","logout","mobj","console","log","postData","url","data","response","fetch","method","mode","cache","headers","body","JSON","stringify","getsensordatas","mlist","reqmsg","getSensors","res","resdata","json","Sensors","forEach","element","push","Clonbyjsonobj","error","length","getautocontrols","mrepmsg","getAutoControl","getOutputport","AutoControls","Outputs","getoutputstatus","setmanualonoff","moutputport","setManualControl","OutputManual","IsOK","setAutocontrolsetup","mAutocfg","isok","setAutocontrol","Autoconfigitem"],"mappings":"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","sourcesContent":["\r\nimport reqMessage from \"./reqMessage\";\r\n\r\n\r\nimport Sensordevice from \"./commonjs/sensordevice\";\r\nimport Outputdevice from \"./commonjs/outputdevice\";\r\nimport AutoControl from \"./commonjs/autocontrol\";\r\nimport responseMessage from \"./commonjs/responseMessage\";\r\n\r\n\r\nconst API = \"/api/\";\r\n\r\nexport default class IndoorFarmAPI {\r\n  abc = \"123\";\r\n  def = \"456\";\r\n\r\n  static logout(mobj) {\r\n    console.log(\"IndoorFarmAPI \");\r\n    return \"logout\";\r\n  }\r\n\r\n  static async postData(url = \"\", data = {}) {\r\n    const response = await fetch(url, {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n\r\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n    });\r\n    return response; // parses JSON response into native JavaScript objects\r\n  }\r\n\r\n  static async getsensordatas() {\r\n    var mlist = [];\r\n\r\n    try {\r\n      const reqmsg = new reqMessage();\r\n      reqmsg.getSensors = true;\r\n\r\n      \r\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\r\n      const resdata = await res.json();\r\n      \r\n\r\n      resdata.Sensors.forEach((element) => {\r\n        mlist.push(Sensordevice.Clonbyjsonobj(element));\r\n      });\r\n    } catch (error) {\r\n      console.log(\" getsensordata error : \" + error);\r\n    } finally {\r\n      console.log(\" getsensordata finally  : \" + mlist.length);\r\n      return mlist;\r\n    }\r\n  }\r\n\r\n\r\n  static async getautocontrols() {\r\n    \r\n    let mrepmsg = new responseMessage();\r\n\r\n\r\n    try {\r\n      const reqmsg = new reqMessage();\r\n      //자동제어  센서목록, 출력목록 다 가져옴\r\n      reqmsg.getAutoControl = true;\r\n      reqmsg.getSensors = true;\r\n      reqmsg.getOutputport = true;\r\n\r\n      \r\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\r\n      const resdata = await res.json();\r\n      \r\n\r\n      resdata.AutoControls.forEach((element) => {\r\n        mrepmsg.AutoControls.push(AutoControl.Clonbyjsonobj(element));\r\n      });\r\n\r\n      resdata.Sensors.forEach((element) => {\r\n        mrepmsg.Sensors.push(Sensordevice.Clonbyjsonobj(element));\r\n      });\r\n\r\n\r\n      resdata.Outputs.forEach((element) => {\r\n        mrepmsg.Outputs.push(Outputdevice.Clonbyjsonobj(element));\r\n      });\r\n\r\n\r\n\r\n\r\n    } catch (error) {\r\n      console.log(\" getautocontrols error : \" + error);\r\n    } finally {\r\n      console.log(\" getautocontrols finally  : \" + mrepmsg.AutoControls.length);\r\n      return mrepmsg;\r\n    }\r\n  }\r\n  \r\n  static async getoutputstatus() {\r\n    var mlist = [];\r\n\r\n    try {\r\n      const reqmsg = new reqMessage();\r\n      reqmsg.getOutputport = true;\r\n\r\n      \r\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\r\n      const resdata = await res.json();\r\n      resdata.Outputs.forEach((element) => {\r\n        mlist.push(Outputdevice.Clonbyjsonobj(element));\r\n      });\r\n    } catch (error) {\r\n      console.log(\" getoutputstatus error : \" + error);\r\n    } finally {\r\n      console.log(\" getoutputstatus finally  : \" + mlist.length);\r\n      return mlist;\r\n    }\r\n  }\r\n\r\n\r\n  static async setmanualonoff(moutputport) {\r\n   \r\n    var mlist = [];\r\n\r\n    try {\r\n      const reqmsg = new reqMessage();\r\n      reqmsg.setManualControl = true;\r\n      reqmsg.OutputManual.push(moutputport);\r\n\r\n      \r\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\r\n      const resdata = await res.json();\r\n      console.log(\" setmanualonoff rsp : \" + resdata.IsOK);\r\n\r\n    } catch (error) {\r\n      console.log(\" setmanualonoff error : \" + error);\r\n    } finally {\r\n      console.log(\" setmanualonoff finally  : \" + mlist.length);\r\n      return mlist;\r\n    }\r\n\r\n  }\r\n  \r\n  \r\n  static async setAutocontrolsetup(mAutocfg) {\r\n   \r\n    var isok =false;\r\n\r\n    try {\r\n      const reqmsg = new reqMessage();\r\n      reqmsg.setAutocontrol = true;\r\n      reqmsg.Autoconfigitem = mAutocfg;\r\n      \r\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\r\n      const resdata = await res.json();\r\n      console.log(\" setAutocontrolsetup rsp : \" + resdata.IsOK);\r\n      isok=true;\r\n\r\n    } catch (error) {\r\n      console.log(\" setAutocontrolsetup error : \" + error);\r\n    } finally {\r\n      console.log(\" setAutocontrolsetup finally  : \" + isok);\r\n      return isok;\r\n    }\r\n\r\n  }\r\n  \r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}