{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport Loginpage from \"./pages/loginpage\";\nimport Mainpage from \"./pages/mainpage\";\nimport myGlobalvalues from \"./myGlobal\";\nimport IndoorFarmAPI from \"./indoorfarmapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst os = require(\"os\");\n\nfunction App(props) {\n  console.log(\"-------------------------react APP start---------------------\");\n  console.log(\"Hostname : \" + os.hostname() + \"OS Type : \" + os.type() + \"Platform : \" + os.platform());\n  console.log(\"redux valeu:\" + props.value);\n  let hostname = os.hostname();\n\n  if (hostname.indexOf(\"localhost\") != -1) {\n    ///로컬로 접속하면 관리자 계정임\n    myGlobalvalues.islocal = true;\n    myGlobalvalues.isuseradmin = true;\n  } else {\n    myGlobalvalues.islocal = false;\n    myGlobalvalues.isuseradmin = false;\n  }\n\n  myGlobalvalues.farmapi = new IndoorFarmAPI(myGlobalvalues.islocal);\n  console.log(myGlobalvalues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: props.value === 166 ? /*#__PURE__*/_jsxDEV(Loginpage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Mainpage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst mapStateToProps = function (state) {\n  return {\n    value: state.value\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/App.js"],"names":["React","useState","connect","Loginpage","Mainpage","myGlobalvalues","IndoorFarmAPI","os","require","App","props","console","log","hostname","type","platform","value","indexOf","islocal","isuseradmin","farmapi","mapStateToProps","state"],"mappings":";AAAA,OAAO,WAAP;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAIA,OAAOC,cAAP,MAA2B,YAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAIlBC,EAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBL,EAAE,CAACM,QAAH,EAAhB,GAAgC,YAAhC,GAA+CN,EAAE,CAACO,IAAH,EAA/C,GAA2D,aAA3D,GAA2EP,EAAE,CAACQ,QAAH,EAAvF;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBF,KAAK,CAACM,KAAnC;AAEA,MAAIH,QAAQ,GAAGN,EAAE,CAACM,QAAH,EAAf;;AACA,MAAIA,QAAQ,CAACI,OAAT,CAAiB,WAAjB,KAAiC,CAAC,CAAtC,EAAyC;AACvC;AACAZ,IAAAA,cAAc,CAACa,OAAf,GAAyB,IAAzB;AACAb,IAAAA,cAAc,CAACc,WAAf,GAA6B,IAA7B;AACD,GAJD,MAIO;AACLd,IAAAA,cAAc,CAACa,OAAf,GAAyB,KAAzB;AACAb,IAAAA,cAAc,CAACc,WAAf,GAA6B,KAA7B;AACD;;AAEDd,EAAAA,cAAc,CAACe,OAAf,GAAyB,IAAId,aAAJ,CAAkBD,cAAc,CAACa,OAAjC,CAAzB;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAYP,cAAZ;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGK,KAAK,CAACM,KAAN,KAAgB,GAAhB,gBAAuB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAvB,gBAAwC;AAAA,gBAAMZ,QAAQ;AAAd;AAAA;AAAA;AAAA;AAAA;AAD3C;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KA7BQK,G;;AA+BT,MAAMY,eAAe,GAAG,UAASC,KAAT,EAAgB;AACtC,SAAO;AACNN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADP,GAAP;AAID,CALD;;AAOA,eAAgBd,OAAO,CAACmB,eAAD,CAAP,CAAyBZ,GAAzB,CAAhB","sourcesContent":["import \"./App.css\";\n\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\n\nimport Loginpage from \"./pages/loginpage\";\nimport Mainpage from \"./pages/mainpage\";\n\n\n\nimport myGlobalvalues from \"./myGlobal\";\nimport IndoorFarmAPI from \"./indoorfarmapi\";\n\nconst os = require(\"os\");\n\n\nfunction App(props) {\n  \n\n\n  console.log(\"-------------------------react APP start---------------------\");\n  console.log(\"Hostname : \" + os.hostname() + \"OS Type : \" + os.type() + \"Platform : \" + os.platform());\n  console.log(\"redux valeu:\" + props.value);\n\n  let hostname = os.hostname();\n  if (hostname.indexOf(\"localhost\") != -1) {\n    ///로컬로 접속하면 관리자 계정임\n    myGlobalvalues.islocal = true;\n    myGlobalvalues.isuseradmin = true;\n  } else {\n    myGlobalvalues.islocal = false;\n    myGlobalvalues.isuseradmin = false;\n  }\n\n  myGlobalvalues.farmapi = new IndoorFarmAPI(myGlobalvalues.islocal);\n\n  console.log(myGlobalvalues);\n\n\n  return (\n    <div className=\"App\">\n      {props.value === 166 ? (<Loginpage/> ): (<div>{Mainpage()}</div>)}\n      \n    </div>\n  );\n}\n\nconst mapStateToProps = function(state) {\n  return {\n   value: state.value,\n   \n  }\n}\n\nexport default  connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}