{"ast":null,"code":"import _classCallCheck from\"H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/node_modules/@babel/runtime/helpers/esm/createClass\";var fs=require('fs');module.exports=/*#__PURE__*/function(){function AutoControlconfig(){_classCallCheck(this,AutoControlconfig);//자동제어 고유id 자동생성\nthis.uniqid=\"AID\"+Math.random().toString(36).substr(2,16);this.category=0;this.enabled=false;this.name=\"자동제어\";this.starttime=0;// 시작시간 초단위 number\nthis.endtime=24*3600;// 종료시간 초단위\nthis.devids=[];this.priority=0;this.istimer=true;this.sensorid=\"\";this.onvalue=0;this.offvalue=0;this.condition=\"up\";this.onetime_run=60;this.onetime_idle=60;this.pwmcontrolenable=false;this.pwmontime=5;this.pwmofftime=10;}_createClass(AutoControlconfig,null,[{key:\"deepcopy\",value:function deepcopy(mobj){console.log(\"AutoControlconfig deepcopy \");return Object.assign(new AutoControlconfig(),mobj);}},{key:\"Writefile\",value:function Writefile(filename,mautolist){var data=JSON.stringify(mautolist);fs.writeFileSync(filename,data);}},{key:\"Readfile\",value:function Readfile(filename){var rawdata=fs.readFileSync(filename);var objlist=JSON.parse(rawdata);var alist=[];objlist.forEach(function(element){alist.push(Object.assign(new AutoControlconfig(),element));});return alist;}}]);return AutoControlconfig;}();","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/commonjs/autocontrolconfig.js"],"names":["fs","require","module","exports","uniqid","Math","random","toString","substr","category","enabled","name","starttime","endtime","devids","priority","istimer","sensorid","onvalue","offvalue","condition","onetime_run","onetime_idle","pwmcontrolenable","pwmontime","pwmofftime","mobj","console","log","Object","assign","AutoControlconfig","filename","mautolist","data","JSON","stringify","writeFileSync","rawdata","readFileSync","objlist","parse","alist","forEach","element","push"],"mappings":"sSAAA,GAAMA,CAAAA,EAAE,CAAGC,OAAO,CAAC,IAAD,CAAlB,CAGAC,MAAM,CAACC,OAAP,yBAgCI,4BAAc,yCAKZ;AACA,KAAKC,MAAL,CAAa,MAAOC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,CAAqC,EAArC,CAApB,CAGA,KAAKC,QAAL,CAAc,CAAd,CAEA,KAAKC,OAAL,CAAa,KAAb,CACA,KAAKC,IAAL,CAAY,MAAZ,CACA,KAAKC,SAAL,CAAiB,CAAjB,CAAmB;AACnB,KAAKC,OAAL,CAAe,GAAG,IAAlB,CAA2B;AAC3B,KAAKC,MAAL,CAAY,EAAZ,CACA,KAAKC,QAAL,CAAc,CAAd,CACA,KAAKC,OAAL,CAAa,IAAb,CAEA,KAAKC,QAAL,CAAc,EAAd,CACA,KAAKC,OAAL,CAAa,CAAb,CACA,KAAKC,QAAL,CAAc,CAAd,CAEA,KAAKC,SAAL,CAAe,IAAf,CAEA,KAAKC,WAAL,CAAiB,EAAjB,CACA,KAAKC,YAAL,CAAkB,EAAlB,CAGA,KAAKC,gBAAL,CAAsB,KAAtB,CACA,KAAKC,SAAL,CAAe,CAAf,CACA,KAAKC,UAAL,CAAgB,EAAhB,CAED,CAjEL,2DAEI,kBAAgBC,IAAhB,CAAsB,CAEpBC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAEE,MAAOC,CAAAA,MAAM,CAACC,MAAP,CAAc,GAAIC,CAAAA,iBAAJ,EAAd,CAAuCL,IAAvC,CAAP,CAED,CARP,yBAUI,mBAAiBM,QAAjB,CAA2BC,SAA3B,CACA,CACI,GAAIC,CAAAA,IAAI,CAAGC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAX,CACAjC,EAAE,CAACqC,aAAH,CAAiBL,QAAjB,CAA2BE,IAA3B,EAEH,CAfL,wBAgBI,kBAAiBF,QAAjB,CACA,CAEI,GAAIM,CAAAA,OAAO,CAAGtC,EAAE,CAACuC,YAAH,CAAgBP,QAAhB,CAAd,CACA,GAAIQ,CAAAA,OAAO,CAAGL,IAAI,CAACM,KAAL,CAAWH,OAAX,CAAd,CAEA,GAAII,CAAAA,KAAK,CAAC,EAAV,CACAF,OAAO,CAACG,OAAR,CAAgB,SAAAC,OAAO,CAAI,CACvBF,KAAK,CAACG,IAAN,CAAWhB,MAAM,CAACC,MAAP,CAAc,GAAIC,CAAAA,iBAAJ,EAAd,CAAuCa,OAAvC,CAAX,EACH,CAFD,EAIA,MAAOF,CAAAA,KAAP,CAEH,CA7BL","sourcesContent":["const fs = require('fs');\r\n\r\n\r\nmodule.exports = class AutoControlconfig {\r\n\r\n    static deepcopy(mobj) {\r\n\r\n      console.log(\"AutoControlconfig deepcopy \");\r\n\r\n        return Object.assign(new AutoControlconfig(), mobj);\r\n\r\n      }\r\n\r\n    static Writefile(filename, mautolist)\r\n    {\r\n        let data = JSON.stringify(mautolist);\r\n        fs.writeFileSync(filename, data);\r\n\r\n    }\r\n    static  Readfile(filename)\r\n    {\r\n\r\n        let rawdata = fs.readFileSync(filename);\r\n        let objlist = JSON.parse(rawdata);\r\n\r\n        let alist=[];\r\n        objlist.forEach(element => {\r\n            alist.push(Object.assign(new AutoControlconfig(), element));\r\n        });\r\n\r\n        return alist;\r\n\r\n    }\r\n\r\n\r\n    constructor() {\r\n      \r\n          \r\n\r\n\r\n      //자동제어 고유id 자동생성\r\n      this.uniqid= \"AID\"+ Math.random().toString(36).substr(2, 16);\r\n     \r\n\r\n      this.category=0;\r\n\r\n      this.enabled=false;\r\n      this.name = \"자동제어\";\r\n      this.starttime = 0;// 시작시간 초단위 number\r\n      this.endtime = 24*3600;    // 종료시간 초단위\r\n      this.devids=[];\r\n      this.priority=0;\r\n      this.istimer=true;\r\n\r\n      this.sensorid=\"\";\r\n      this.onvalue=0;\r\n      this.offvalue=0;\r\n\r\n      this.condition=\"up\";\r\n      \r\n      this.onetime_run=60;\r\n      this.onetime_idle=60;\r\n     \r\n\r\n      this.pwmcontrolenable=false;\r\n      this.pwmontime=5;\r\n      this.pwmofftime=10;\r\n      \r\n    }\r\n   \r\n\r\n    \r\n    \r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}