{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\sensordisplay.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SensorBox(msensor) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensorbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: msensor.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [msensor.valuestring, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [msensor.errorcount > 30 ? \"연결끊김\" : \"Err=\" + msensor.errorcount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SensorBox;\n\nfunction Sensordisplay(msensorsarray, isonlystatus) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensortatble\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"sensor display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), msensorsarray.map((localState, index) => SensorBox(localState))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = Sensordisplay;\nexport default Sensordisplay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SensorBox\");\n$RefreshReg$(_c2, \"Sensordisplay\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/sensordisplay.js"],"names":["React","SensorBox","msensor","Name","valuestring","errorcount","Sensordisplay","msensorsarray","isonlystatus","map","localState","index"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAEtB,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,gBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBAAKD,OAAO,CAACE,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBAAMF,OAAO,CAACG,UAAR,GAAoB,EAArB,GAA0B,MAA1B,GAAmC,SAASH,OAAO,CAACG,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQH;;KAVMJ,S;;AAYP,SAASK,aAAT,CAAuBC,aAAvB,EAAsCC,YAAtC,EAAoD;AAClD,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,aAAa,CAACE,GAAd,CAAkB,CAACC,UAAD,EAAaC,KAAb,KAAuBV,SAAS,CAACS,UAAD,CAAlD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQJ,a;AAYX,eAAeA,aAAf","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nfunction SensorBox(msensor) {\r\n    \r\n      return (\r\n        <div className=\"sensorbox\">\r\n          <ul>{msensor.Name}</ul>\r\n          <ul>{msensor.valuestring} </ul>\r\n          <ul>{(msensor.errorcount >30)? \"연결끊김\" :(\"Err=\" + msensor.errorcount)} </ul>\r\n        </div>\r\n      );\r\n    \r\n  }\r\n\r\n  function Sensordisplay(msensorsarray, isonlystatus) {\r\n    return (\r\n      <div className=\"sensortatble\">\r\n        <h1>sensor display</h1>\r\n        {msensorsarray.map((localState, index) => SensorBox(localState))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  \r\n\r\nexport default Sensordisplay;"]},"metadata":{},"sourceType":"module"}