{"ast":null,"code":"import _slicedToArray from\"H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Outputdevicedisplay from\"../outputdevicedisplay\";import IndoorFarmAPI from\"../indoorfarmapi\";import{jsx as _jsx}from\"react/jsx-runtime\";var Devicepage=function Devicepage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),moutdevarray=_useState2[0],setUpdate=_useState2[1];useEffect(function(){var interval=null;interval=setInterval(function(){IndoorFarmAPI.getoutputstatus().then(function(devices){setUpdate(devices);});},1000);return function(){return clearInterval(interval);};},[moutdevarray]);return/*#__PURE__*/_jsx(\"div\",{children:Outputdevicedisplay(moutdevarray,false)});};export default Devicepage;","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/devicepage.js"],"names":["React","useState","useEffect","Outputdevicedisplay","IndoorFarmAPI","Devicepage","moutdevarray","setUpdate","interval","setInterval","getoutputstatus","then","devices","clearInterval"],"mappings":"oJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,mBAAP,KAAgC,wBAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,C,2CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,cAAkCJ,QAAQ,CAAC,EAAD,CAA1C,wCAAOK,YAAP,eAAqBC,SAArB,eACAL,SAAS,CAAC,UAAM,CACd,GAAIM,CAAAA,QAAQ,CAAG,IAAf,CAEAA,QAAQ,CAAGC,WAAW,CAAC,UAAM,CAC3BL,aAAa,CAACM,eAAd,GAAgCC,IAAhC,CAAqC,SAACC,OAAD,CAAa,CAChDL,SAAS,CAACK,OAAD,CAAT,CACD,CAFD,EAGD,CAJqB,CAInB,IAJmB,CAAtB,CAMA,MAAO,kBAAMC,CAAAA,aAAa,CAACL,QAAD,CAAnB,EAAP,CACD,CAVQ,CAUN,CAACF,YAAD,CAVM,CAAT,CAYA,mBAAQ,qBAAMH,mBAAmB,CAACG,YAAD,CAAe,KAAf,CAAzB,EAAR,CACD,CAfD,CAiBA,cAAeD,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Outputdevicedisplay from \"../outputdevicedisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\n\r\nconst Devicepage = () => {\r\n  const [moutdevarray, setUpdate] = useState([]);\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    interval = setInterval(() => {\r\n      IndoorFarmAPI.getoutputstatus().then((devices) => {\r\n        setUpdate(devices);\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [moutdevarray]);\r\n\r\n  return( <div>{Outputdevicedisplay(moutdevarray, false)}</div>);\r\n};\r\n\r\nexport default Devicepage;\r\n"]},"metadata":{},"sourceType":"module"}