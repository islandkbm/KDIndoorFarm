{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\pages\\\\settingpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Outputdevice from \"../commonjs/outputdevice\";\nimport IndoorFarmAPI from \"../indoorfarmapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settingpage = () => {\n  _s();\n\n  let rlist12 = [];\n  let rlist24 = [];\n  let devcopycfg;\n  const [relaylist12, relayseleted12] = useState([]);\n  const [relaylist24, relayseleted24] = useState([]);\n  const [mSelecteditem, relayeditselected] = useState(null);\n  const [moutdevarray, setUpdatedevice] = useState([]);\n\n  for (let i = 0; i < 12; i++) {\n    rlist12.push(i);\n  }\n\n  for (let i = 12; i < 24; i++) {\n    rlist24.push(i);\n  }\n  /*\r\n  for (let i = 1; i <= 12; i++) {\r\n      if(i<10)\r\n      {\r\n    rlist12.push(\"R-0\" +i);\r\n      }\r\n      else{\r\n        rlist12.push(\"R-\" + i);\r\n      }\r\n  }\r\n  for (let i = 13; i <= 24; i++) {\r\n    rlist24.push(\"R-\" + i);\r\n  }\r\n  */\n\n\n  function setupSave(mcfg) {\n    console.log(\"setupSave uidd: \" + mcfg.UniqID + \" name : \" + mcfg.Name);\n    IndoorFarmAPI.setDeviceconfigsetup(mcfg).then(ret => {\n      if (ret == true) {\n        alert(\"저장되었습니다.\");\n        Relayeditbox(null, null);\n      } else {}\n\n      console.log(\"setDeviceconfigsetup  uidd: \" + ret);\n    });\n  }\n\n  function setupDelete(mcfg) {\n    mcfg.DevType = Outputdevice.OutDeviceTypeEnum.ODT_DELETE;\n    console.log(\"setupSave uidd: \" + mcfg.UniqID + \" name : \" + mcfg.Name);\n    IndoorFarmAPI.setDeviceconfigsetup(mcfg).then(ret => {\n      console.log(\"setDeviceconfigsetup  uid: \" + ret);\n    });\n  }\n\n  function inputonchangeHandler(e) {\n    console.log(\"inputonchangeHandler : \" + e.target.name);\n\n    switch (e.target.name) {\n      case \"devname\":\n        devcopycfg.Name = e.target.value;\n        break;\n\n      case \"relayradio\":\n        if (e.target.checked === true) {\n          relayeditselected(e.target.id);\n        }\n\n        break;\n\n      case \"deviceradio\":\n        devcopycfg.DevType = e.target.value;\n\n        if (e.target.checked === true) {\n          devcopycfg.DevType = Number(e.target.id);\n          console.log(\"devcopycfg.DevType : \" + devcopycfg.DevType);\n        }\n\n        break;\n    }\n  }\n\n  function Relayeditbox(myeditrelaynum, devicelist) {\n    //const [misTimershow, selectcontrol] = useState(myeditcfg !=null && myeditcfg.istimer);\n    //console.log(\"Autocontroleditbox  misTimershow: \" + misTimershow);\n    if (myeditrelaynum === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this);\n    } else {\n      let devobj = null;\n\n      for (const dev of devicelist) {\n        if (myeditrelaynum == dev.UniqID) {\n          devobj = dev;\n          break;\n        }\n      } //설정된 object가 없으면 새로생성\n\n\n      if (devobj === null) {\n        devobj = Outputdevice.CreateDefulatDevice(myeditrelaynum);\n      }\n\n      devcopycfg = Outputdevice.Clonbyjsonobj(devobj);\n      let devicon = \"./image/devicon_\" + devcopycfg.DevType + \".png\";\n      let onofficon = \"./image/\" + \"on.png\";\n      let devicetypelist = [];\n\n      for (let item in Outputdevice.OutDeviceTypeEnum) {\n        if (Outputdevice.OutDeviceTypeEnum[item] != Outputdevice.OutDeviceTypeEnum.ODT_DELETE) {\n          // console.log(Outputdevice.OutDeviceTypeEnum[item]);\n          devicetypelist.push(Outputdevice.OutDeviceTypeEnum[item]);\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relaygroupbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"out_con\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"out_name\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: devicon,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), \" \", devcopycfg.Name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"out_value\",\n            children: [\" \", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outportsetupbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"\\uCD9C\\uB825\\uC7A5\\uCE58\\uB97C \\uC124\\uC815\\uD569\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cont_save2\",\n              id: \"save\",\n              onClick: () => setupSave(devcopycfg),\n              children: [\"\\uC124\\uC815\\uC800\\uC7A5\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cont_save2\",\n              id: \"delete\",\n              onClick: () => setupDelete(devcopycfg),\n              children: [\"\\uC124\\uC815\\uC0AD\\uC81C\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"\\uC124\\uC815\\uBCC0\\uACBD\\uC2DC \\uBAA8\\uB4E0\\uC790\\uB3D9\\uC81C\\uC5B4\\uAC00 \\uB2E4\\uC2DC \\uC2DC\\uC791\\uB429\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uC774\\uB984: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            defaultValue: devcopycfg.Name,\n            name: \"devname\",\n            onChange: inputonchangeHandler\n          }, devcopycfg.UniqID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC7A5\\uCE58\\uC885\\uB958 :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relaygroupbox\",\n            onChange: inputonchangeHandler,\n            children: devicetypelist.map((localState, index) => deviceradiobox(localState, devcopycfg.DevType))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function deviceradiobox(devtypeid, selecttype) {\n    let devicon = \"./image/devicon_\" + devtypeid + \".png\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relaybox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"deviceradio\",\n        defaultChecked: selecttype == devtypeid ? true : false,\n        id: devtypeid\n      }, devcopycfg.UniqID + devtypeid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: devicon,\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n\n  function relayradiobox(relaynum, devicelist) {\n    let devname = \"사용안함\";\n\n    for (const dev of devicelist) {\n      //=== 쓰지말자\n      if (relaynum == dev.UniqID) {\n        devname = dev.Name;\n        break;\n      }\n    }\n\n    let relayname;\n\n    if (relaynum < 10) {\n      relayname = \"R-0\" + (relaynum + 1);\n    } else {\n      relayname = \"R-\" + (relaynum + 1);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relaybox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"relayradio\",\n        defaultChecked: false,\n        id: relaynum\n      }, relayname, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), \" \", relayname, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./image/relay.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: devname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n\n  useEffect(() => {\n    let interval = null;\n    IndoorFarmAPI.getoutputstatus().then(devices => {\n      setUpdatedevice(devices);\n      relayseleted12(rlist12);\n      relayseleted24(rlist24);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dev_name\",\n      children: \"\\uB9B4\\uB808\\uC774\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relay_select\",\n      onChange: inputonchangeHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relaygroupbox\",\n        children: relaylist12.map((localState, index) => relayradiobox(localState, moutdevarray))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relaygroupbox\",\n        children: relaylist24.map((localState, index) => relayradiobox(localState, moutdevarray))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), Relayeditbox(mSelecteditem, moutdevarray)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Settingpage, \"yOzGt1UCeazfAP1vjw39m8Qdo6c=\");\n\n_c = Settingpage;\nexport default Settingpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settingpage\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/settingpage.js"],"names":["React","useState","useEffect","Outputdevice","IndoorFarmAPI","Settingpage","rlist12","rlist24","devcopycfg","relaylist12","relayseleted12","relaylist24","relayseleted24","mSelecteditem","relayeditselected","moutdevarray","setUpdatedevice","i","push","setupSave","mcfg","console","log","UniqID","Name","setDeviceconfigsetup","then","ret","alert","Relayeditbox","setupDelete","DevType","OutDeviceTypeEnum","ODT_DELETE","inputonchangeHandler","e","target","name","value","checked","id","Number","myeditrelaynum","devicelist","devobj","dev","CreateDefulatDevice","Clonbyjsonobj","devicon","onofficon","devicetypelist","item","map","localState","index","deviceradiobox","devtypeid","selecttype","relayradiobox","relaynum","devname","relayname","interval","getoutputstatus","devices"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Outputdevice from \"../commonjs/outputdevice\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\n\r\nconst Settingpage = () => {\r\n  let rlist12 = [];\r\n  let rlist24 = [];\r\n  let devcopycfg;\r\n  const [relaylist12, relayseleted12] = useState([]);\r\n  const [relaylist24, relayseleted24] = useState([]);\r\n  const [mSelecteditem, relayeditselected] = useState(null);\r\n  const [moutdevarray, setUpdatedevice] = useState([]);\r\n\r\n  for (let i = 0; i < 12; i++) {\r\n    rlist12.push(i);\r\n  }\r\n  for (let i = 12; i < 24; i++) {\r\n    rlist24.push(i);\r\n  }\r\n\r\n  /*\r\n  for (let i = 1; i <= 12; i++) {\r\n      if(i<10)\r\n      {\r\n    rlist12.push(\"R-0\" +i);\r\n      }\r\n      else{\r\n        rlist12.push(\"R-\" + i);\r\n      }\r\n  }\r\n  for (let i = 13; i <= 24; i++) {\r\n    rlist24.push(\"R-\" + i);\r\n  }\r\n*/\r\n  function setupSave(mcfg) {\r\n    console.log(\"setupSave uidd: \" + mcfg.UniqID + \" name : \" + mcfg.Name);\r\n    \r\n    IndoorFarmAPI.setDeviceconfigsetup(mcfg).then((ret) => {\r\n      if(ret ==true)\r\n      {\r\n        alert(\"저장되었습니다.\");\r\n        Relayeditbox(null,null);\r\n      }\r\n      else{\r\n        \r\n      }\r\n\r\n\r\n      console.log(\"setDeviceconfigsetup  uidd: \" + ret);\r\n    });\r\n  }\r\n  function setupDelete(mcfg) {\r\n    mcfg.DevType = Outputdevice.OutDeviceTypeEnum.ODT_DELETE;\r\n    console.log(\"setupSave uidd: \" + mcfg.UniqID + \" name : \" + mcfg.Name);\r\n    IndoorFarmAPI.setDeviceconfigsetup(mcfg).then((ret) => {\r\n      console.log(\"setDeviceconfigsetup  uid: \" + ret);\r\n    });\r\n  }\r\n\r\n  function inputonchangeHandler(e) {\r\n    console.log(\"inputonchangeHandler : \" + e.target.name);\r\n\r\n    switch (e.target.name) {\r\n      case \"devname\":\r\n        devcopycfg.Name = e.target.value;\r\n        break;\r\n\r\n      case \"relayradio\":\r\n        if (e.target.checked === true) {\r\n          relayeditselected(e.target.id);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"deviceradio\":\r\n        devcopycfg.DevType = e.target.value;\r\n        if (e.target.checked === true) {\r\n          devcopycfg.DevType = Number(e.target.id);\r\n\r\n          console.log(\"devcopycfg.DevType : \" + devcopycfg.DevType);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  function Relayeditbox(myeditrelaynum, devicelist) {\r\n    //const [misTimershow, selectcontrol] = useState(myeditcfg !=null && myeditcfg.istimer);\r\n    //console.log(\"Autocontroleditbox  misTimershow: \" + misTimershow);\r\n\r\n    if (myeditrelaynum === null) {\r\n      return <div></div>;\r\n    } else {\r\n      let devobj = null;\r\n\r\n      for (const dev of devicelist) {\r\n        if (myeditrelaynum == dev.UniqID) {\r\n          devobj = dev;\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      //설정된 object가 없으면 새로생성\r\n      if (devobj === null) {\r\n        devobj = Outputdevice.CreateDefulatDevice(myeditrelaynum);\r\n      }\r\n\r\n      devcopycfg = Outputdevice.Clonbyjsonobj(devobj);\r\n\r\n      let devicon = \"./image/devicon_\" + devcopycfg.DevType + \".png\";\r\n      let onofficon = \"./image/\" + \"on.png\";\r\n\r\n      let devicetypelist = [];\r\n\r\n      for (let item in Outputdevice.OutDeviceTypeEnum) {\r\n        if (Outputdevice.OutDeviceTypeEnum[item] != Outputdevice.OutDeviceTypeEnum.ODT_DELETE) {\r\n          // console.log(Outputdevice.OutDeviceTypeEnum[item]);\r\n          devicetypelist.push(Outputdevice.OutDeviceTypeEnum[item]);\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div className=\"relaygroupbox\">\r\n          <div className=\"out_con\">\r\n            <div className=\"out_name\">\r\n              {\" \"}\r\n              <img src={devicon} className=\"icon\" /> {devcopycfg.Name}{\" \"}\r\n            </div>\r\n            <div className=\"out_value\"> {} </div>\r\n          </div>\r\n          <div className=\"outportsetupbox\">\r\n            <h4>\r\n              출력장치를 설정합니다.\r\n              <button className=\"cont_save2\" id=\"save\" onClick={() => setupSave(devcopycfg)}>\r\n                설정저장{\" \"}\r\n              </button>\r\n              <button className=\"cont_save2\" id=\"delete\" onClick={() => setupDelete(devcopycfg)}>\r\n                설정삭제{\" \"}\r\n              </button>\r\n              <h5>설정변경시 모든자동제어가 다시 시작됩니다.</h5>\r\n            </h4>\r\n\r\n            <label>이름: </label>\r\n            <input type=\"text\" key={devcopycfg.UniqID} defaultValue={devcopycfg.Name} name=\"devname\" onChange={inputonchangeHandler} />\r\n            <h4>장치종류 :</h4>\r\n\r\n            <div className=\"relaygroupbox\" onChange={inputonchangeHandler}>\r\n              {devicetypelist.map((localState, index) => deviceradiobox(localState, devcopycfg.DevType))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function deviceradiobox(devtypeid, selecttype) {\r\n    let devicon = \"./image/devicon_\" + devtypeid + \".png\";\r\n\r\n    return (\r\n      <div className=\"relaybox\">\r\n        <input type=\"radio\" key={devcopycfg.UniqID + devtypeid} name=\"deviceradio\" defaultChecked={selecttype == devtypeid ? true : false} id={devtypeid} />\r\n        <img src={devicon} className=\"icon\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function relayradiobox(relaynum, devicelist) {\r\n    let devname = \"사용안함\";\r\n    for (const dev of devicelist) {\r\n      //=== 쓰지말자\r\n      if (relaynum == dev.UniqID) {\r\n        devname = dev.Name;\r\n        break;\r\n      }\r\n    }\r\n\r\n    let relayname;\r\n    if (relaynum < 10) {\r\n      relayname = \"R-0\" + (relaynum + 1);\r\n    } else {\r\n      relayname = \"R-\" + (relaynum + 1);\r\n    }\r\n\r\n    return (\r\n      <div className=\"relaybox\">\r\n        <input type=\"radio\" key={relayname} name=\"relayradio\" defaultChecked={false} id={relaynum} /> {relayname}\r\n        <img src=\"./image/relay.png\" />\r\n        <div>\r\n          <label>{devname}</label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    IndoorFarmAPI.getoutputstatus().then((devices) => {\r\n      setUpdatedevice(devices);\r\n      relayseleted12(rlist12);\r\n      relayseleted24(rlist24);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"dev_name\">릴레이를 선택하세요.</div>\r\n      <div className=\"relay_select\" onChange={inputonchangeHandler}>\r\n        <div className=\"relaygroupbox\">{relaylist12.map((localState, index) => relayradiobox(localState, moutdevarray))}</div>\r\n        <div className=\"relaygroupbox\">{relaylist24.map((localState, index) => relayradiobox(localState, moutdevarray))}</div>\r\n      </div>\r\n      {Relayeditbox(mSelecteditem, moutdevarray)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settingpage;\r\n"]},"metadata":{},"sourceType":"module"}