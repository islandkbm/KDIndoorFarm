{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\sensordisplay.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SensorBox(msensor) {\n  let cname = \"sen_con\";\n  let svalue = msensor.valuestring;\n\n  if (msensor.errorcount > 30) {\n    cname = \"sensorboxdisconnect\";\n    svalue = \"연결끊김\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cname,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: msensor.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [svalue, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [msensor.errorcount > 30 ? \"연결끊김\" : \"Err=\" + msensor.errorcount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SensorBox;\n\nfunction Sensordisplay(msensorsarray, isonlystatus) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"sen_title\",\n      children: \"SENSOR DISPLAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), msensorsarray.map((localState, index) => SensorBox(localState))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = Sensordisplay;\nexport default Sensordisplay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SensorBox\");\n$RefreshReg$(_c2, \"Sensordisplay\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/sensordisplay.js"],"names":["React","SensorBox","msensor","cname","svalue","valuestring","errorcount","Name","Sensordisplay","msensorsarray","isonlystatus","map","localState","index"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,MAAIC,KAAK,GAAE,SAAX;AACA,MAAIC,MAAM,GAAEF,OAAO,CAACG,WAApB;;AACA,MAAGH,OAAO,CAACI,UAAR,GAAoB,EAAvB,EACA;AACEH,IAAAA,KAAK,GAAE,qBAAP;AACAC,IAAAA,MAAM,GAAC,MAAP;AACD;;AAEG,sBACE;AAAK,IAAA,SAAS,EAAED,KAAhB;AAAA,4BACE;AAAA,gBAAKD,OAAO,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBAAKH,MAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBAAMF,OAAO,CAACI,UAAR,GAAoB,EAArB,GAA0B,MAA1B,GAAmC,SAASJ,OAAO,CAACI,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQH;;KAjBML,S;;AAmBP,SAASO,aAAT,CAAuBC,aAAvB,EAAsCC,YAAtC,EAAoD;AAClD,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,aAAa,CAACE,GAAd,CAAkB,CAACC,UAAD,EAAaC,KAAb,KAAuBZ,SAAS,CAACW,UAAD,CAAlD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQJ,a;AAYX,eAAeA,aAAf","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nfunction SensorBox(msensor) {\r\n  let cname =\"sen_con\";\r\n  let svalue= msensor.valuestring;\r\n  if(msensor.errorcount >30)\r\n  {\r\n    cname =\"sensorboxdisconnect\";\r\n    svalue=\"연결끊김\";\r\n  }\r\n\r\n      return (\r\n        <div className={cname}>\r\n          <ul>{msensor.Name}</ul>\r\n          <ul>{svalue} </ul>\r\n          <ul>{(msensor.errorcount >30)? \"연결끊김\" :(\"Err=\" + msensor.errorcount)} </ul>\r\n        </div>\r\n      );\r\n    \r\n  }\r\n\r\n  function Sensordisplay(msensorsarray, isonlystatus) {\r\n    return (\r\n      <div className=\"sensor\">\r\n        <div class=\"sen_title\">SENSOR DISPLAY</div>\r\n        {msensorsarray.map((localState, index) => SensorBox(localState))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  \r\n\r\nexport default Sensordisplay;"]},"metadata":{},"sourceType":"module"}