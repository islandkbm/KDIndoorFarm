{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\pages\\\\sensorpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Sensordisplay from \"../sensordisplay\";\nimport IndoorFarmAPI from \"../indoorfarmapi\";\nimport myGlobalvalues from \"../myGlobal\";\nimport { LineChart, ResponsiveContainer, Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyLineRechart() {\n  const data = [{\n    \"name\": \"Jan 2019\",\n    \"Product A\": 3432,\n    \"Procuct B\": 2342\n  }, {\n    \"name\": \"Feb 2019\",\n    \"Product A\": 2342,\n    \"Procuct B\": 3246\n  }, {\n    \"name\": \"Mar 2019\",\n    \"Product A\": 4565,\n    \"Procuct B\": 4556\n  }, {\n    \"name\": \"Apr 2019\",\n    \"Product A\": 6654,\n    \"Procuct B\": 4465\n  }, {\n    \"name\": \"May 2019\",\n    \"Product A\": 8765,\n    \"Procuct B\": 4553\n  }];\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      height: 250,\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Product A\",\n        stroke: \"#0095FF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Procuct B\",\n        stroke: \"#FF0000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }, this);\n}\n\n_c = MyLineRechart;\n\nconst Sensorpage = () => {\n  _s();\n\n  const [msensorsarray, setSensors] = useState([]);\n  console.log(\"-------------------------Sensorpage  ---------------------\");\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      myGlobalvalues.farmapi.getsensordatas().then(sensors => {\n        setSensors(sensors);\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [msensorsarray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Sensordisplay(msensorsarray, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartcontainer\",\n      children: MyLineRechart()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Sensorpage, \"8k2h8u+a4XKCO/7kOqR+GU+4gDU=\");\n\n_c2 = Sensorpage;\nexport default Sensorpage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyLineRechart\");\n$RefreshReg$(_c2, \"Sensorpage\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/sensorpage.js"],"names":["React","useState","useEffect","Sensordisplay","IndoorFarmAPI","myGlobalvalues","LineChart","ResponsiveContainer","Line","YAxis","XAxis","CartesianGrid","Tooltip","Legend","MyLineRechart","data","top","right","left","bottom","Sensorpage","msensorsarray","setSensors","console","log","interval","setInterval","farmapi","getsensordatas","then","sensors","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Sensordisplay from \"../sensordisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\nimport myGlobalvalues from \"../myGlobal\";\r\n\r\n\r\nimport { LineChart, ResponsiveContainer,Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nfunction MyLineRechart()\r\n{\r\n\r\n    const data = [\r\n        {\r\n            \"name\": \"Jan 2019\",\r\n            \"Product A\": 3432,\r\n            \"Procuct B\": 2342\r\n        },\r\n        {\r\n            \"name\": \"Feb 2019\",\r\n            \"Product A\": 2342,\r\n            \"Procuct B\": 3246\r\n        },\r\n        {\r\n            \"name\": \"Mar 2019\",\r\n            \"Product A\": 4565,\r\n            \"Procuct B\": 4556\r\n        },\r\n        {\r\n            \"name\": \"Apr 2019\",\r\n            \"Product A\": 6654,\r\n            \"Procuct B\": 4465\r\n        },\r\n        {\r\n            \"name\": \"May 2019\",\r\n            \"Product A\": 8765,\r\n            \"Procuct B\": 4553\r\n        }\r\n    ];\r\n\r\n    \r\n        return (\r\n          <ResponsiveContainer\r\n        width=\"100%\"\r\n      >\r\n            <LineChart  height={250} data={data}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"Product A\" stroke=\"#0095FF\" />\r\n                <Line type=\"monotone\" dataKey=\"Procuct B\" stroke=\"#FF0000\" />\r\n            </LineChart>\r\n            </ResponsiveContainer>\r\n        );\r\n    \r\n}\r\n\r\n\r\nconst Sensorpage = () => {\r\n\r\n\r\n    const [msensorsarray, setSensors] = useState([]);\r\n  \r\n    console.log(\"-------------------------Sensorpage  ---------------------\");\r\n\r\n    useEffect(() => {\r\n      let interval = null;\r\n  \r\n      interval = setInterval(() => {\r\n        myGlobalvalues.farmapi.getsensordatas().then((sensors) => {\r\n          setSensors(sensors);\r\n        });\r\n      }, 1000);\r\n  \r\n      return () => clearInterval(interval);\r\n    }, [msensorsarray]);\r\n\r\n    \r\n    return(\r\n        \r\n            <div>\r\n              {Sensordisplay(msensorsarray,true)}\r\n\r\n              <div className=\"chartcontainer\">\r\n                {MyLineRechart()}\r\n                </div>\r\n              </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Sensorpage;"]},"metadata":{},"sourceType":"module"}