{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\pages\\\\settingpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Sensordisplay from \"../sensordisplay\";\nimport IndoorFarmAPI from \"../indoorfarmapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settingpage = () => {\n  _s();\n\n  let rlist = [];\n  const [relaylist, selectedrelay] = useState([]);\n\n  for (let i = 1; i < 25; i++) {\n    rlist.push(\"릴레이 \" + i);\n  }\n\n  function devicecheckbox(relayname) {\n    return /*#__PURE__*/_jsxDEV(\"ui\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"relaycheck\",\n        defaultChecked: false,\n        id: relaynum\n      }, relayname, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), \"  \", relayname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this);\n  }\n\n  useEffect(() => {\n    let interval = null;\n    selectedrelay(rlist);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dev_name\",\n      children: \"\\uCD9C\\uB825\\uC7A5\\uCE58 \\uC120\\uD0DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dev_select\",\n      children: relaylist.map((localState, index) => devicecheckbox(localState))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Settingpage, \"HTHHLHpg/xl+YQFXkzFDT48gEg0=\");\n\n_c = Settingpage;\nexport default Settingpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settingpage\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/settingpage.js"],"names":["React","useState","useEffect","Sensordisplay","IndoorFarmAPI","Settingpage","rlist","relaylist","selectedrelay","i","push","devicecheckbox","relayname","relaynum","interval","map","localState","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,MAAIC,KAAK,GAAC,EAAV;AACA,QAAM,CAACC,SAAD,EAAYC,aAAZ,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;;AAEA,OAAI,IAAIQ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,EAAd,EAAiBA,CAAC,EAAlB,EACA;AACIH,IAAAA,KAAK,CAACI,IAAN,CAAW,SAAQD,CAAnB;AACH;;AAED,WAASE,cAAT,CAAwBC,SAAxB,EAAmC;AAC/B,wBAEE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuC,QAAA,IAAI,EAAC,YAA5C;AAAyD,QAAA,cAAc,EAAE,KAAzE;AAAgF,QAAA,EAAE,EAAEC;AAApF,SAA4BD,SAA5B;AAAA;AAAA;AAAA;AAAA,cADF,QACqGA,SADrG;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAMD;;AAIHV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,QAAQ,GAAG,IAAf;AACAN,IAAAA,aAAa,CAAEF,KAAF,CAAb;AAED,GAJQ,EAIN,EAJM,CAAT;AAOA,sBAEQ;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGC,SAAS,CAACQ,GAAV,CAAc,CAACC,UAAD,EAAaC,KAAb,KAAuBN,cAAc,CAACK,UAAD,CAAnD;AADH;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAaH,CAzCD;;GAAMX,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Sensordisplay from \"../sensordisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\n\r\n\r\nconst Settingpage = () => {\r\n\r\n    let rlist=[];\r\n    const [relaylist, selectedrelay] = useState([]);\r\n\r\n    for(let i=1;i<25;i++)\r\n    {\r\n        rlist.push(\"릴레이 \" +i);\r\n    }\r\n\r\n    function devicecheckbox(relayname) {\r\n        return (\r\n          \r\n          <ui>\r\n            <input type=\"checkbox\" key={relayname} name=\"relaycheck\" defaultChecked={false} id={relaynum} />  {relayname}\r\n            </ui>\r\n        );\r\n      }\r\n\r\n    \r\n  \r\n    useEffect(() => {\r\n      let interval = null;\r\n      selectedrelay( rlist);\r\n      \r\n    }, []);\r\n\r\n    \r\n    return(\r\n        \r\n            <div>\r\n                <div className=\"dev_name\">출력장치 선택</div>\r\n            <div className=\"dev_select\">\r\n              {relaylist.map((localState, index) => devicecheckbox(localState))}\r\n              </div>\r\n            </div>\r\n\r\n  \r\n  \r\n        \r\n    )\r\n}\r\n\r\nexport default Settingpage;"]},"metadata":{},"sourceType":"module"}