{"ast":null,"code":"class Outputdevice {\n  static Writefile(filename, mlist) {\n    let data = JSON.stringify(mlist);\n    fs.writeFileSync(filename, data);\n  }\n\n  static Readfile(filename) {\n    let rawdata = fs.readFileSync(filename);\n    let objlist = JSON.parse(rawdata);\n    let alist = [];\n    objlist.forEach(element => {\n      alist.push(Object.assign(new Outputdevice(), element));\n    });\n    return alist;\n  }\n\n  static Clonbyjsonobj(mobj) {\n    return Object.assign(new Outputdevice(), mobj); //new Outputdevice(mobj.UniqID, mobj.Name,  mobj.Channel,mobj.DevType, mobj.Status, mobj.Autocontrolid);\n  }\n\n  constructor() {\n    this.UniqID = 0;\n    this.Name = 0;\n    this.Channel = 0;\n    this.DevType = 0;\n    this.Status = 0;\n    this.Autocontrolid = 0;\n  }\n\n}\n\nOutputdevice.OPStatus = Object.freeze({\n  OPS_Off: \"off\",\n  //꺼짐\n  OPS_On: \"on\",\n  //켜짐\n  OPS_Local: \"local\",\n  //현장수동제어\n  OPS_Idle: \"idle\"\n});\nOutputdevice.OutDeviceTypeEnum = Object.freeze({\n  ODT_None: 0,\n  ODT_PUMP: 1,\n  //\n  ODT_FAN: 2,\n  ODT_VALVE: 3,\n  ODT_LED: 4,\n  ODT_COOLER: 5,\n  ODT_HEATER: 6,\n  ODT_ETC: 99\n});\nmodule.exports = Outputdevice;","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/commonjs/outputdevice.js"],"names":["Outputdevice","Writefile","filename","mlist","data","JSON","stringify","fs","writeFileSync","Readfile","rawdata","readFileSync","objlist","parse","alist","forEach","element","push","Object","assign","Clonbyjsonobj","mobj","constructor","UniqID","Name","Channel","DevType","Status","Autocontrolid","OPStatus","freeze","OPS_Off","OPS_On","OPS_Local","OPS_Idle","OutDeviceTypeEnum","ODT_None","ODT_PUMP","ODT_FAN","ODT_VALVE","ODT_LED","ODT_COOLER","ODT_HEATER","ODT_ETC","module","exports"],"mappings":"AAIC,MAAMA,YAAN,CAAkB;AA6BC,SAATC,SAAS,CAACC,QAAD,EAAWC,KAAX,EAChB;AACI,QAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAX;AACAI,IAAAA,EAAE,CAACC,aAAH,CAAiBN,QAAjB,EAA2BE,IAA3B;AAEH;;AACe,SAARK,QAAQ,CAACP,QAAD,EAChB;AAEI,QAAIQ,OAAO,GAAGH,EAAE,CAACI,YAAH,CAAgBT,QAAhB,CAAd;AACA,QAAIU,OAAO,GAAGP,IAAI,CAACQ,KAAL,CAAWH,OAAX,CAAd;AAEA,QAAII,KAAK,GAAC,EAAV;AACAF,IAAAA,OAAO,CAACG,OAAR,CAAgBC,OAAO,IAAI;AACvBF,MAAAA,KAAK,CAACG,IAAN,CAAWC,MAAM,CAACC,MAAP,CAAc,IAAInB,YAAJ,EAAd,EAAkCgB,OAAlC,CAAX;AACH,KAFD;AAIA,WAAOF,KAAP;AAEH;;AAIuB,SAAbM,aAAa,CAACC,IAAD,EACpB;AACI,WAAOH,MAAM,CAACC,MAAP,CAAc,IAAInB,YAAJ,EAAd,EAAkCqB,IAAlC,CAAP,CADJ,CACoD;AACnD;;AAEDC,EAAAA,WAAW,GAAG;AAEV,SAAKC,MAAL,GAAa,CAAb;AACA,SAAKC,IAAL,GAAW,CAAX;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,OAAL,GAAc,CAAd;AACA,SAAKC,MAAL,GAAa,CAAb;AACA,SAAKC,aAAL,GAAmB,CAAnB;AAEH;;AAlEU;;AAAZ5B,Y,CAEI6B,Q,GAAWX,MAAM,CAACY,MAAP,CACd;AAEIC,EAAAA,OAAO,EAAE,KAFb;AAEoB;AAChBC,EAAAA,MAAM,EAAE,IAHZ;AAGkB;AACdC,EAAAA,SAAS,EAAE,OAJf;AAIwB;AACpBC,EAAAA,QAAQ,EAAE;AALd,CADc,C;AAFflC,Y,CAcCmC,iB,GAAoBjB,MAAM,CAACY,MAAP,CACxB;AAEIM,EAAAA,QAAQ,EAAE,CAFd;AAGIC,EAAAA,QAAQ,EAAE,CAHd;AAGiB;AACbC,EAAAA,OAAO,EAAE,CAJb;AAKIC,EAAAA,SAAS,EAAE,CALf;AAMIC,EAAAA,OAAO,EAAE,CANb;AAOIC,EAAAA,UAAU,EAAE,CAPhB;AAQIC,EAAAA,UAAU,EAAE,CARhB;AASIC,EAAAA,OAAO,EAAE;AATb,CADwB,C;AA0D5BC,MAAM,CAACC,OAAP,GAAiB7C,YAAjB","sourcesContent":["\r\n\r\n\r\n\r\n class Outputdevice{\r\n \r\n    static OPStatus = Object.freeze(\r\n        {\r\n    \r\n            OPS_Off: \"off\", //꺼짐\r\n            OPS_On: \"on\", //켜짐\r\n            OPS_Local: \"local\", //현장수동제어\r\n            OPS_Idle: \"idle\"\r\n    \r\n        });\r\n    \r\n \r\n        \r\n static OutDeviceTypeEnum = Object.freeze(\r\n    {\r\n\r\n        ODT_None: 0,\r\n        ODT_PUMP: 1, //\r\n        ODT_FAN: 2,\r\n        ODT_VALVE: 3,\r\n        ODT_LED: 4,\r\n        ODT_COOLER: 5,\r\n        ODT_HEATER: 6,\r\n        ODT_ETC: 99\r\n\r\n    });\r\n\r\n\r\n    static Writefile(filename, mlist)\r\n    {\r\n        let data = JSON.stringify(mlist);\r\n        fs.writeFileSync(filename, data);\r\n\r\n    }\r\n    static  Readfile(filename)\r\n    {\r\n\r\n        let rawdata = fs.readFileSync(filename);\r\n        let objlist = JSON.parse(rawdata);\r\n\r\n        let alist=[];\r\n        objlist.forEach(element => {\r\n            alist.push(Object.assign(new Outputdevice(), element));\r\n        });\r\n\r\n        return alist;\r\n\r\n    }\r\n\r\n\r\n\r\n        static Clonbyjsonobj(mobj)\r\n        {\r\n            return Object.assign(new Outputdevice(), mobj) ;//new Outputdevice(mobj.UniqID, mobj.Name,  mobj.Channel,mobj.DevType, mobj.Status, mobj.Autocontrolid);\r\n        }\r\n    \r\n        constructor() {\r\n    \r\n            this.UniqID =0;\r\n            this.Name =0;\r\n            this.Channel = 0;\r\n            this.DevType =0;\r\n            this.Status =0;\r\n            this.Autocontrolid=0;\r\n\r\n        }\r\n        \r\n\r\n}\r\n\r\n\r\nmodule.exports = Outputdevice;\r\n\r\n"]},"metadata":{},"sourceType":"module"}