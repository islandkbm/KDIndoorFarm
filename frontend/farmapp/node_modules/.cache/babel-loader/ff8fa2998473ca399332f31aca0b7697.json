{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\pages\\\\sensorpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport Sensordisplay from \"../sensordisplay\";\nimport IndoorFarmAPI from \"../indoorfarmapi\";\nimport { ResponsiveLine } from '@nivo/line';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyResponsiveLine = ({\n  data\n  /* see data tab */\n\n}) => /*#__PURE__*/_jsxDEV(ResponsiveLine, {\n  data: data,\n  margin: {\n    top: 50,\n    right: 110,\n    bottom: 50,\n    left: 60\n  },\n  xScale: {\n    type: 'point'\n  },\n  yScale: {\n    type: 'linear',\n    min: 'auto',\n    max: 'auto',\n    stacked: true,\n    reverse: false\n  },\n  yFormat: \" >-.2f\",\n  axisTop: null,\n  axisRight: null,\n  axisBottom: {\n    orient: 'bottom',\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'transportation',\n    legendOffset: 36,\n    legendPosition: 'middle'\n  },\n  axisLeft: {\n    orient: 'left',\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'count',\n    legendOffset: -40,\n    legendPosition: 'middle'\n  },\n  pointSize: 10,\n  pointColor: {\n    theme: 'background'\n  },\n  pointBorderWidth: 2,\n  pointBorderColor: {\n    from: 'serieColor'\n  },\n  pointLabelYOffset: -12,\n  useMesh: true,\n  legends: [{\n    anchor: 'bottom-right',\n    direction: 'column',\n    justify: false,\n    translateX: 100,\n    translateY: 0,\n    itemsSpacing: 0,\n    itemDirection: 'left-to-right',\n    itemWidth: 80,\n    itemHeight: 20,\n    itemOpacity: 0.75,\n    symbolSize: 12,\n    symbolShape: 'circle',\n    symbolBorderColor: 'rgba(0, 0, 0, .5)',\n    effects: [{\n      on: 'hover',\n      style: {\n        itemBackground: 'rgba(0, 0, 0, .03)',\n        itemOpacity: 1\n      }\n    }]\n  }]\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c = MyResponsiveLine;\n\nconst Sensorpage = () => {\n  _s();\n\n  const [msensorsarray, setSensors] = useState([]);\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      IndoorFarmAPI.getsensordatas().then(sensors => {\n        setSensors(sensors);\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [msensorsarray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensorbocck\",\n    children: [Sensordisplay(msensorsarray, true), MyResponsiveLine(null)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Sensorpage, \"8k2h8u+a4XKCO/7kOqR+GU+4gDU=\");\n\n_c2 = Sensorpage;\nexport default Sensorpage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyResponsiveLine\");\n$RefreshReg$(_c2, \"Sensorpage\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/sensorpage.js"],"names":["React","Component","useState","useEffect","Sensordisplay","IndoorFarmAPI","ResponsiveLine","MyResponsiveLine","data","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","Sensorpage","msensorsarray","setSensors","interval","setInterval","getsensordatas","then","sensors","clearInterval"],"mappings":"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","sourcesContent":["import React, { Component,useState, useEffect } from \"react\";\r\nimport Sensordisplay from \"../sensordisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\nimport { ResponsiveLine } from '@nivo/line'\r\n\r\n\r\nconst MyResponsiveLine = ({ data /* see data tab */ }) => (\r\n  <ResponsiveLine\r\n      data={data}\r\n      margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n      xScale={{ type: 'point' }}\r\n      yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n      yFormat=\" >-.2f\"\r\n      axisTop={null}\r\n      axisRight={null}\r\n      axisBottom={{\r\n          orient: 'bottom',\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: 'transportation',\r\n          legendOffset: 36,\r\n          legendPosition: 'middle'\r\n      }}\r\n      axisLeft={{\r\n          orient: 'left',\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: 'count',\r\n          legendOffset: -40,\r\n          legendPosition: 'middle'\r\n      }}\r\n      pointSize={10}\r\n      pointColor={{ theme: 'background' }}\r\n      pointBorderWidth={2}\r\n      pointBorderColor={{ from: 'serieColor' }}\r\n      pointLabelYOffset={-12}\r\n      useMesh={true}\r\n      legends={[\r\n          {\r\n              anchor: 'bottom-right',\r\n              direction: 'column',\r\n              justify: false,\r\n              translateX: 100,\r\n              translateY: 0,\r\n              itemsSpacing: 0,\r\n              itemDirection: 'left-to-right',\r\n              itemWidth: 80,\r\n              itemHeight: 20,\r\n              itemOpacity: 0.75,\r\n              symbolSize: 12,\r\n              symbolShape: 'circle',\r\n              symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n              effects: [\r\n                  {\r\n                      on: 'hover',\r\n                      style: {\r\n                          itemBackground: 'rgba(0, 0, 0, .03)',\r\n                          itemOpacity: 1\r\n                      }\r\n                  }\r\n              ]\r\n          }\r\n      ]}\r\n  />\r\n)\r\n\r\nconst Sensorpage = () => {\r\n\r\n\r\n    const [msensorsarray, setSensors] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      let interval = null;\r\n  \r\n      interval = setInterval(() => {\r\n        IndoorFarmAPI.getsensordatas().then((sensors) => {\r\n          setSensors(sensors);\r\n        });\r\n      }, 1000);\r\n  \r\n      return () => clearInterval(interval);\r\n    }, [msensorsarray]);\r\n\r\n    \r\n    return(\r\n        \r\n            <div className=\"sensorbocck\">\r\n              {Sensordisplay(msensorsarray,true)}\r\n\r\n              {MyResponsiveLine(null)}\r\n\r\n              </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Sensorpage;"]},"metadata":{},"sourceType":"module"}