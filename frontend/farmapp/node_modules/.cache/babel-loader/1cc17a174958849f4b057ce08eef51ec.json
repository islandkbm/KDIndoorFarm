{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\pages\\\\sensorpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Sensordisplay from \"../sensordisplay\";\nimport IndoorFarmAPI from \"../indoorfarmapi\";\nimport { ResponsiveBump } from '@nivo/bump';\nimport { LineChart, Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyLineRechart() {\n  const data = [{\n    \"name\": \"Jan 2019\",\n    \"Product A\": 3432,\n    \"Procuct B\": 2342\n  }, {\n    \"name\": \"Feb 2019\",\n    \"Product A\": 2342,\n    \"Procuct B\": 3246\n  }, {\n    \"name\": \"Mar 2019\",\n    \"Product A\": 4565,\n    \"Procuct B\": 4556\n  }, {\n    \"name\": \"Apr 2019\",\n    \"Product A\": 6654,\n    \"Procuct B\": 4465\n  }, {\n    \"name\": \"May 2019\",\n    \"Product A\": 8765,\n    \"Procuct B\": 4553\n  }];\n  return /*#__PURE__*/_jsxDEV(LineChart, {\n    width: \"100%\",\n    height: 250,\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: \"Product A\",\n      stroke: \"#0095FF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: \"Procuct B\",\n      stroke: \"#FF0000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n}\n\n_c = MyLineRechart;\n\nconst Sensorpage = () => {\n  _s();\n\n  const [msensorsarray, setSensors] = useState([]);\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      IndoorFarmAPI.getsensordatas().then(sensors => {\n        setSensors(sensors);\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [msensorsarray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Sensordisplay(msensorsarray, true), MyLineRechart()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Sensorpage, \"8k2h8u+a4XKCO/7kOqR+GU+4gDU=\");\n\n_c2 = Sensorpage;\nexport default Sensorpage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyLineRechart\");\n$RefreshReg$(_c2, \"Sensorpage\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/sensorpage.js"],"names":["React","useState","useEffect","Sensordisplay","IndoorFarmAPI","ResponsiveBump","LineChart","Line","YAxis","XAxis","CartesianGrid","Tooltip","Legend","MyLineRechart","data","top","right","left","bottom","Sensorpage","msensorsarray","setSensors","interval","setInterval","getsensordatas","then","sensors","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,YAA/B;AAGA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,aAAxC,EAAuDC,OAAvD,EAAgEC,MAAhE,QAA8E,UAA9E;;;AAEA,SAASC,aAAT,GACA;AAEI,QAAMC,IAAI,GAAG,CACT;AACI,YAAQ,UADZ;AAEI,iBAAa,IAFjB;AAGI,iBAAa;AAHjB,GADS,EAMT;AACI,YAAQ,UADZ;AAEI,iBAAa,IAFjB;AAGI,iBAAa;AAHjB,GANS,EAWT;AACI,YAAQ,UADZ;AAEI,iBAAa,IAFjB;AAGI,iBAAa;AAHjB,GAXS,EAgBT;AACI,YAAQ,UADZ;AAEI,iBAAa,IAFjB;AAGI,iBAAa;AAHjB,GAhBS,EAqBT;AACI,YAAQ,UADZ;AAEI,iBAAa,IAFjB;AAGI,iBAAa;AAHjB,GArBS,CAAb;AA6BI,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAwB,IAAA,MAAM,EAAE,GAAhC;AAAqC,IAAA,IAAI,EAAEA,IAA3C;AACI,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,KAAK,EAAE,EAAjB;AAAqBC,MAAAA,IAAI,EAAE,EAA3B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KADZ;AAAA,4BAEI,QAAC,aAAD;AAAe,MAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,WAA9B;AAA0C,MAAA,MAAM,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,WAA9B;AAA0C,MAAA,MAAM,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaP;;KA7CQL,a;;AAgDT,MAAMM,UAAU,GAAG,MAAM;AAAA;;AAGrB,QAAM,CAACC,aAAD,EAAgBC,UAAhB,IAA8BpB,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,QAAQ,GAAG,IAAf;AAEAA,IAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BnB,MAAAA,aAAa,CAACoB,cAAd,GAA+BC,IAA/B,CAAqCC,OAAD,IAAa;AAC/CL,QAAAA,UAAU,CAACK,OAAD,CAAV;AACD,OAFD;AAGD,KAJqB,EAInB,IAJmB,CAAtB;AAMA,WAAO,MAAMC,aAAa,CAACL,QAAD,CAA1B;AACD,GAVQ,EAUN,CAACF,aAAD,CAVM,CAAT;AAaA,sBAEQ;AAAA,eACGjB,aAAa,CAACiB,aAAD,EAAe,IAAf,CADhB,EAGKP,aAAa,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAUH,CA5BD;;GAAMM,U;;MAAAA,U;AA8BN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Sensordisplay from \"../sensordisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\nimport { ResponsiveBump } from '@nivo/bump'\r\n\r\n\r\nimport { LineChart, Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nfunction MyLineRechart()\r\n{\r\n\r\n    const data = [\r\n        {\r\n            \"name\": \"Jan 2019\",\r\n            \"Product A\": 3432,\r\n            \"Procuct B\": 2342\r\n        },\r\n        {\r\n            \"name\": \"Feb 2019\",\r\n            \"Product A\": 2342,\r\n            \"Procuct B\": 3246\r\n        },\r\n        {\r\n            \"name\": \"Mar 2019\",\r\n            \"Product A\": 4565,\r\n            \"Procuct B\": 4556\r\n        },\r\n        {\r\n            \"name\": \"Apr 2019\",\r\n            \"Product A\": 6654,\r\n            \"Procuct B\": 4465\r\n        },\r\n        {\r\n            \"name\": \"May 2019\",\r\n            \"Product A\": 8765,\r\n            \"Procuct B\": 4553\r\n        }\r\n    ];\r\n\r\n    \r\n        return (\r\n            <LineChart width=\"100%\" height={250} data={data}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"Product A\" stroke=\"#0095FF\" />\r\n                <Line type=\"monotone\" dataKey=\"Procuct B\" stroke=\"#FF0000\" />\r\n            </LineChart>\r\n        );\r\n    \r\n}\r\n\r\n\r\nconst Sensorpage = () => {\r\n\r\n\r\n    const [msensorsarray, setSensors] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      let interval = null;\r\n  \r\n      interval = setInterval(() => {\r\n        IndoorFarmAPI.getsensordatas().then((sensors) => {\r\n          setSensors(sensors);\r\n        });\r\n      }, 1000);\r\n  \r\n      return () => clearInterval(interval);\r\n    }, [msensorsarray]);\r\n\r\n    \r\n    return(\r\n        \r\n            <div>\r\n              {Sensordisplay(msensorsarray,true)}\r\n\r\n                {MyLineRechart()}\r\n\r\n              </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Sensorpage;"]},"metadata":{},"sourceType":"module"}