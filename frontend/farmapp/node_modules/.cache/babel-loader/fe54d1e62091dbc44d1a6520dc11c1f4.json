{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\pages\\\\autocontrolpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport AutoControlconfig from \"../commonjs/autocontrolconfig\";\nimport IndoorFarmAPI from \"../indoorfarmapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Autocontrolpage = () => {\n  _s();\n\n  const [mSensors, setUpdatesensor] = useState([]);\n  const [mAutolist, setUpdateauto] = useState([]);\n  const [mDevices, setUpdatedevice] = useState([]);\n  const [mSelecteditem, setupselected] = useState(null);\n  console.log(\"Autocontrolpage: \");\n  useEffect(() => {\n    IndoorFarmAPI.getautocontrols().then(mrsp => {\n      setUpdatesensor(mrsp.Sensors);\n      setUpdateauto(mrsp.AutoControls);\n      setUpdatedevice(mrsp.Outputs);\n    });\n  }, []);\n\n  function secToTime(dayseconds) {\n    if (dayseconds >= 24 * 3600) {\n      return \"23:59\";\n    }\n\n    let hour = Math.floor(dayseconds / 3600);\n    let min = Math.floor((dayseconds - hour * 3600) / 60);\n    if (hour < 10) hour = \"0\" + hour;\n    if (min < 10) min = \"0\" + min;\n    console.log(\"secToTime : \" + (hour + \":\" + min));\n    return hour + \":\" + min;\n  }\n\n  function timeTosec(timestr) {\n    const [hours, minutes] = timestr.split(':');\n    return Number(hours * 3600 + minutes * 60);\n  }\n\n  function inputonchangeHandler(e) {\n    console.log(\"inputonchangeHandler : \" + e.target.name);\n\n    switch (e.target.name) {\n      case \"name\":\n        copycfg.name = e.target.value;\n        break;\n\n      case \"onvalue\":\n        copycfg.onvalue = Number(e.target.value);\n        break;\n\n      case \"offvalue\":\n        copycfg.offvalue = Number(e.target.value);\n        break;\n\n      case \"starttime\":\n        copycfg.starttime = timeTosec(e.target.value);\n        break;\n\n      case \"endtime\":\n        copycfg.endtime = timeTosec(e.target.value);\n        break;\n\n      case \"controlsel\":\n        if (e.target.checked === true && e.target.id === \"timer\") {\n          copycfg.istimer = true;\n        } else {\n          copycfg.istimer = false;\n        }\n\n        console.log(\"copycfg.istimer : \" + copycfg.istimer);\n        setupselected(copycfg);\n        break;\n    }\n\n    function Autocontroleditbox(myeditcfg, msensorlist, mdevlist) {\n      //const [misTimershow, selectcontrol] = useState(myeditcfg !=null && myeditcfg.istimer); \n      console.log(\"Autocontroleditbox  misTimershow: \");\n\n      if (myeditcfg == null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }, this);\n      } else {\n        let copycfg = myeditcfg; // AutoControlconfig.deepcopy(mydata.mConfig);\n\n        console.log(\"Autocontroleditbox  copycfg.istimer: \" + copycfg.istimer); //selectcontrol(copycfg.istimer);\n        //let starttime_sec =/3600)+\":\"+ ((mydata.mConfig.starttime/60)%60);\n        //let endtime_sec = (mydata.mConfig.endtime/3600)+\":\"+ ((mydata.mConfig.endtime/60)%60);\n\n        function setupSave(mcfg) {\n          console.log(\"setupSave uid: \" + mcfg.uniqid + \" name : \" + mcfg.name + \" istimer : \" + mcfg.istimer);\n          console.log(\"setupSave uid: \" + \" copycfg istimer : \" + copycfg.istimer);\n          IndoorFarmAPI.setAutocontrolsetup(mcfg).then(ret => {\n            console.log(\"setAutocontrolsetup  uid: \" + ret);\n          });\n        }\n\n        if (e.target.name === \"devcheck\") {\n          let isexist = false;\n\n          for (let i = 0; i < copycfg.devids.length; i++) {\n            if (copycfg.devids[i] === Number(e.target.id)) {\n              if (e.target.checked === false) {\n                copycfg.devids.splice(i, 1);\n                return;\n              } else {\n                isexist = true;\n                break;\n              }\n            }\n          } //새로추가\n\n\n          if (isexist === false) {\n            copycfg.devids.push(Number(e.target.id));\n          }\n        }\n      }\n\n      function sensorselectbox(mitem) {\n        return /*#__PURE__*/_jsxDEV(\"ui\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"sensorsel\",\n            defaultChecked: mitem.seleted,\n            id: mitem.uniqkey\n          }, copycfg.uniqid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), mitem.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this);\n      }\n\n      function devicecheckbox(mitem) {\n        return /*#__PURE__*/_jsxDEV(\"ui\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"devcheck\",\n            defaultChecked: mitem.seleted,\n            id: mitem.uniqkey\n          }, copycfg.uniqid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), mitem.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this);\n      }\n\n      let slist = [];\n\n      for (const ss of msensorlist) {\n        let seleted = false;\n\n        if (copycfg.sensorid === ss.UniqID) {\n          console.log(\"select sensorid : \" + ss.UniqID);\n          seleted = true;\n        }\n\n        const title = ss.Name + \"(노드:\" + ss.nodeID + \" , 채널 :\" + ss.channel + \")\";\n        const uniqkey = ss.UniqID;\n        slist.push({\n          title: title,\n          seleted: seleted,\n          uniqkey: uniqkey\n        });\n      }\n\n      let dlist = [];\n\n      for (const dev of mdevlist) {\n        let seleted = false;\n\n        for (const di of copycfg.devids) {\n          if (di === dev.UniqID) {\n            console.log(\"select dev id : \" + dev.UniqID);\n            seleted = true;\n            break;\n          }\n        }\n\n        const title = dev.Name + \"( 채널 :\" + dev.Channel + \")\";\n        const uniqkey = dev.UniqID;\n        dlist.push({\n          title: title,\n          seleted: seleted,\n          uniqkey: uniqkey\n        });\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"autosetupbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC774\\uB984: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: copycfg.name,\n          name: \"name\",\n          onChange: inputonchangeHandler\n        }, \"name\" + copycfg.uniqid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC2DC\\uC791\\uC2DC\\uAC04: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          defaultValue: secToTime(copycfg.starttime),\n          name: \"starttime\",\n          onChange: inputonchangeHandler\n        }, \"starttime\" + copycfg.uniqid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC885\\uB8CC\\uC2DC\\uAC04: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          defaultValue: secToTime(copycfg.endtime),\n          name: \"endtime\",\n          onChange: inputonchangeHandler\n        }, \"endtime\" + copycfg.uniqid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outportselectbox\",\n          onChange: inputonchangeHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uCD9C\\uB825\\uC7A5\\uCE58 \\uC120\\uD0DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this), dlist.map((localState, index) => devicecheckbox(localState))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controlselectbox\",\n            onChange: inputonchangeHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"controlsel\",\n              defaultChecked: copycfg.istimer,\n              id: \"timer\"\n            }, \"timer\" + copycfg.uniqid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 13\n            }, this), \" \\uD0C0\\uC784\\uBA38 \\uC81C\\uC5B4\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"controlsel\",\n              defaultChecked: copycfg.istimer === false,\n              id: \"sensor\"\n            }, \"sensor\" + copycfg.uniqid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this), \"\\uC13C\\uC11C\\uC81C\\uC5B4\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sensorconditionbox\",\n            style: copycfg.istimer === false ? {} : {\n              display: 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sensorselectbox\",\n              onChange: inputonchangeHandler,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"\\uC13C\\uC11C\\uC120\\uD0DD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 14\n              }, this), slist.map((localState, index) => sensorselectbox(localState))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uCF1C\\uC9D0\\uC870\\uAC74: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              defaultValue: copycfg.onvalue,\n              name: \"onvalue\",\n              onChange: inputonchangeHandler\n            }, \"onvalue\" + copycfg.uniqid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uAEBC\\uC9D0\\uC870\\uAC74: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              defaultValue: copycfg.offvalue,\n              name: \"offvalue\",\n              onChange: inputonchangeHandler\n            }, \"offvalue\" + copycfg.uniqid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setupSave(copycfg),\n          id: \"editcheck\",\n          children: \" \\uC800\\uC7A5    \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setupselected(null),\n          id: \"editcheck\",\n          children: \"\\uCDE8\\uC18C    \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function autocontrolbox(mydata) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocontrolbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"ui\", {\n        children: \" ... ...............\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ui\", {\n        children: mydata.mConfig.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ui\", {\n        children: mydata.mConfig.enabled == true ? \"작동중\" : \"정지됨\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setupselected(AutoControlconfig.deepcopy(mydata.mConfig)),\n        id: \"editcheck\",\n        children: \" \\uC218\\uC815 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Autocontrol Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controltop\",\n      children: [\"\\uC815\\uB82C :\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"pets\",\n        id: \"pet-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"\\uC2DC\\uAC04\\uC21C\\uC11C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"\\uC774\\uB984\\uC21C\\uC11C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+ \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocontroltable\",\n      children: [Autocontroleditbox(mSelecteditem, mSensors, mDevices), mAutolist.map((localState, index) => autocontrolbox(localState))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Autocontrolpage, \"20OoqUTIIBIiutOSzshmewZvWQU=\");\n\n_c = Autocontrolpage;\nexport default Autocontrolpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocontrolpage\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/autocontrolpage.js"],"names":["React","Component","useState","useEffect","AutoControlconfig","IndoorFarmAPI","Autocontrolpage","mSensors","setUpdatesensor","mAutolist","setUpdateauto","mDevices","setUpdatedevice","mSelecteditem","setupselected","console","log","getautocontrols","then","mrsp","Sensors","AutoControls","Outputs","secToTime","dayseconds","hour","Math","floor","min","timeTosec","timestr","hours","minutes","split","Number","inputonchangeHandler","e","target","name","copycfg","value","onvalue","offvalue","starttime","endtime","checked","id","istimer","Autocontroleditbox","myeditcfg","msensorlist","mdevlist","setupSave","mcfg","uniqid","setAutocontrolsetup","ret","isexist","i","devids","length","splice","push","sensorselectbox","mitem","seleted","uniqkey","title","devicecheckbox","slist","ss","sensorid","UniqID","Name","nodeID","channel","dlist","dev","di","Channel","map","localState","index","display","autocontrolbox","mydata","mConfig","enabled","deepcopy"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport AutoControlconfig from \"../commonjs/autocontrolconfig\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\n\r\nconst Autocontrolpage = () => {\r\n  const [mSensors, setUpdatesensor] = useState([]);\r\n  const [mAutolist, setUpdateauto] = useState([]);\r\n  const [mDevices, setUpdatedevice] = useState([]);\r\n  const [mSelecteditem, setupselected] = useState(null);\r\n  \r\n  console.log(\"Autocontrolpage: \" );\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    IndoorFarmAPI.getautocontrols().then((mrsp) => {\r\n      setUpdatesensor(mrsp.Sensors);\r\n      setUpdateauto(mrsp.AutoControls);\r\n      setUpdatedevice(mrsp.Outputs);\r\n      \r\n    });\r\n  }, []);\r\n\r\n  function secToTime(dayseconds)\r\n  {\r\n    if(dayseconds >= (24*3600))\r\n    {\r\n     return \"23:59\";\r\n    }\r\n    let hour=Math.floor(dayseconds / 3600);\r\n    let min=Math.floor((dayseconds - (hour * 3600)) / 60);\r\n    if(hour <10) hour=\"0\"+hour;\r\n    if(min <10) min=\"0\"+min;\r\n    console.log(\"secToTime : \" + (hour+\":\"+min));\r\n    return  (hour+\":\"+min);\r\n  }\r\n\r\n  function timeTosec(timestr)\r\n  {\r\n    const [hours, minutes] = timestr.split(':');\r\n    return Number(hours*3600+minutes*60);\r\n  }\r\n  \r\n\r\n  function inputonchangeHandler(e) {\r\n    console.log(\"inputonchangeHandler : \" + e.target.name);\r\n\r\n    switch(e.target.name)\r\n    {\r\n      case \"name\": copycfg.name = e.target.value; break;\r\n\r\n      case \"onvalue\": copycfg.onvalue = Number(e.target.value);break;\r\n      case \"offvalue\": copycfg.offvalue = Number(e.target.value); break;\r\n\r\n      case \"starttime\": copycfg.starttime = timeTosec(e.target.value); break;\r\n      case \"endtime\": copycfg.endtime = timeTosec(e.target.value); break;\r\n\r\n      case \"controlsel\": \r\n      if (e.target.checked === true && e.target.id === \"timer\")\r\n      {\r\n        copycfg.istimer=true;\r\n      }\r\n      else{\r\n        copycfg.istimer=false;\r\n      }\r\n\r\n      console.log(\"copycfg.istimer : \" + copycfg.istimer);\r\n\r\n      setupselected(copycfg);\r\n\r\n      break;\r\n\r\n    }\r\n\r\n   \r\n    \r\n\r\n  function Autocontroleditbox(myeditcfg, msensorlist, mdevlist) {\r\n\r\n    //const [misTimershow, selectcontrol] = useState(myeditcfg !=null && myeditcfg.istimer); \r\n    console.log(\"Autocontroleditbox  misTimershow: \");\r\n    \r\n\r\n    if (myeditcfg == null) {\r\n      return <div></div>;\r\n    } else {\r\n      let copycfg =myeditcfg;// AutoControlconfig.deepcopy(mydata.mConfig);\r\n      \r\n\r\n      console.log(\"Autocontroleditbox  copycfg.istimer: \" + copycfg.istimer);\r\n\r\n\r\n      //selectcontrol(copycfg.istimer);\r\n      \r\n      //let starttime_sec =/3600)+\":\"+ ((mydata.mConfig.starttime/60)%60);\r\n      //let endtime_sec = (mydata.mConfig.endtime/3600)+\":\"+ ((mydata.mConfig.endtime/60)%60);\r\n\r\n      function setupSave(mcfg) {\r\n        console.log(\"setupSave uid: \" + mcfg.uniqid + \" name : \" + mcfg.name + \" istimer : \"+mcfg.istimer );\r\n\r\n        console.log(\"setupSave uid: \" +  \" copycfg istimer : \"+copycfg.istimer );\r\n\r\n        IndoorFarmAPI.setAutocontrolsetup(mcfg).then((ret) => {\r\n          console.log(\"setAutocontrolsetup  uid: \" + ret);\r\n        });\r\n      }\r\n\r\n      \r\n\r\n        if (e.target.name === \"devcheck\") {\r\n          let isexist = false;\r\n          for (let i = 0; i < copycfg.devids.length; i++) {\r\n            if (copycfg.devids[i] === Number(e.target.id)) {\r\n              if (e.target.checked === false) {\r\n                copycfg.devids.splice(i, 1);\r\n                return;\r\n              } else {\r\n                isexist = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          //새로추가\r\n          if (isexist === false) {\r\n            copycfg.devids.push(Number(e.target.id));\r\n          }\r\n        }\r\n      }\r\n\r\n      function sensorselectbox(mitem) {\r\n        return (\r\n          <ui>\r\n            <input type=\"radio\" key={copycfg.uniqid} name=\"sensorsel\" defaultChecked={mitem.seleted} id={mitem.uniqkey} />\r\n            {mitem.title}\r\n          </ui>\r\n        );\r\n      }\r\n\r\n      function devicecheckbox(mitem) {\r\n        return (\r\n          <ui>\r\n\r\n            <input type=\"checkbox\" key={copycfg.uniqid} name=\"devcheck\" defaultChecked={mitem.seleted} id={mitem.uniqkey} />\r\n            {mitem.title}\r\n          </ui>\r\n        );\r\n      }\r\n\r\n     \r\n\r\n      let slist = [];\r\n      for (const ss of msensorlist) {\r\n        let seleted = false;\r\n        if (copycfg.sensorid === ss.UniqID) {\r\n          console.log(\"select sensorid : \" + ss.UniqID);\r\n          seleted = true;\r\n        }\r\n        const title = ss.Name + \"(노드:\" + ss.nodeID + \" , 채널 :\" + ss.channel + \")\";\r\n        const uniqkey = ss.UniqID;\r\n        slist.push({ title: title, seleted: seleted, uniqkey: uniqkey });\r\n      }\r\n\r\n      let dlist = [];\r\n      for (const dev of mdevlist) {\r\n        let seleted = false;\r\n\r\n        for (const di of copycfg.devids) {\r\n          if (di === dev.UniqID) {\r\n            console.log(\"select dev id : \" + dev.UniqID);\r\n            seleted = true;\r\n            break;\r\n          }\r\n        }\r\n        const title = dev.Name + \"( 채널 :\" + dev.Channel + \")\";\r\n        const uniqkey = dev.UniqID;\r\n\r\n        dlist.push({ title: title, seleted: seleted, uniqkey: uniqkey });\r\n      }\r\n\r\n     \r\n\r\n\r\n\r\n\r\n      return (\r\n        <div className=\"autosetupbox\">\r\n          <ul>{}</ul>\r\n          <label>이름: </label>\r\n          <input type=\"text\" key={\"name\" + copycfg.uniqid} defaultValue={copycfg.name} name=\"name\" onChange={inputonchangeHandler} />\r\n\r\n          <label>시작시간: </label>\r\n          <input type=\"time\" key={\"starttime\" + copycfg.uniqid} defaultValue={secToTime(copycfg.starttime)} name=\"starttime\" onChange={inputonchangeHandler} />\r\n          <label>종료시간: </label>\r\n          <input type=\"time\" key={\"endtime\" + copycfg.uniqid} defaultValue={secToTime(copycfg.endtime)} name=\"endtime\" onChange={inputonchangeHandler} />\r\n          <p></p>\r\n\r\n\r\n\r\n          <div className=\"outportselectbox\" onChange={inputonchangeHandler} >\r\n          <h4>출력장치 선택</h4>\r\n            {dlist.map((localState, index) => devicecheckbox(localState))}\r\n          </div>\r\n          <p></p>\r\n          <div >\r\n          <div className=\"controlselectbox\" onChange={inputonchangeHandler}>\r\n            <input type=\"radio\" key={\"timer\"+copycfg.uniqid} name=\"controlsel\" defaultChecked={copycfg.istimer} id=\"timer\" /> 타임머 제어\r\n            <input type=\"radio\" key={\"sensor\"+copycfg.uniqid} name=\"controlsel\" defaultChecked={copycfg.istimer===false} id=\"sensor\" />센서제어\r\n          </div>\r\n\r\n         \r\n\r\n           <div className=\"sensorconditionbox\"  style={(copycfg.istimer===false)? {} : {display:'none'}} >\r\n             <div className=\"sensorselectbox\" onChange={inputonchangeHandler}>\r\n             <h4>센서선택</h4>\r\n            {slist.map((localState, index) => sensorselectbox(localState))}\r\n          </div>\r\n\r\n          <label>켜짐조건: </label>\r\n          <input type=\"number\" key={\"onvalue\" + copycfg.uniqid} defaultValue={copycfg.onvalue} name=\"onvalue\" onChange={inputonchangeHandler} />\r\n          <label>꺼짐조건: </label>\r\n          <input type=\"number\" key={\"offvalue\" + copycfg.uniqid} defaultValue={copycfg.offvalue} name=\"offvalue\" onChange={inputonchangeHandler} />\r\n          </div>\r\n          </div> \r\n\r\n\r\n\r\n          <p></p>\r\n\r\n          <button onClick={() => setupSave(copycfg)} id=\"editcheck\"> 저장    </button>\r\n          <button onClick={() => setupselected(null)} id=\"editcheck\">취소    </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  function autocontrolbox(mydata) {\r\n    return (\r\n      <div className=\"autocontrolbox\">\r\n        <ui> ... ...............</ui>\r\n        <ui>{mydata.mConfig.name}</ui>\r\n        <span> </span>\r\n        <ui>{mydata.mConfig.enabled == true ? \"작동중\" : \"정지됨\"}</ui>\r\n        <button onClick={() => setupselected(AutoControlconfig.deepcopy(mydata.mConfig) )} id=\"editcheck\"> 수정 </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Autocontrol Page</h4>\r\n      <div className=\"controltop\">\r\n        정렬 :\r\n        <select name=\"pets\" id=\"pet-select\">\r\n          <option value=\"1\">시간순서</option>\r\n          <option value=\"2\">이름순서</option>\r\n          <option value=\"3\">카테고리</option>\r\n        </select>\r\n        <button>+ 추가</button>\r\n      </div>\r\n      <div className=\"autocontroltable\">\r\n        {Autocontroleditbox(mSelecteditem, mSensors, mDevices)}\r\n        {mAutolist.map((localState, index) => autocontrolbox(localState))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Autocontrolpage;\r\n"]},"metadata":{},"sourceType":"module"}