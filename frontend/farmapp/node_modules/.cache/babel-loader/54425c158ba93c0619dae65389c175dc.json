{"ast":null,"code":"const fs = require('fs');\n\nclass Outputdevice {\n  static Writefile(filename, mlist) {\n    let data = JSON.stringify(mlist);\n    fs.writeFileSync(filename, data);\n  }\n\n  static Readfile(filename) {\n    let rawdata = fs.readFileSync(filename);\n    let objlist = JSON.parse(rawdata);\n    let alist = [];\n    objlist.forEach(element => {\n      alist.push(Object.assign(new Outputdevice(), element));\n    });\n    return alist;\n  }\n\n  static Clonbyjsonobj(mobj) {\n    return Object.assign(new Outputdevice(), mobj); //new Outputdevice(mobj.UniqID, mobj.Name,  mobj.Channel,mobj.DevType, mobj.Status, mobj.Autocontrolid);\n  }\n\n  constructor(uniqid, dname, hwchannel, dtype, dstatus = Outputdevice.OPStatus.OPS_Off, dautoid) {\n    this.UniqID = uniqid;\n    this.Name = dname;\n    this.Channel = hwchannel;\n    this.DevType = dtype;\n    this.Status = dstatus;\n    this.Autocontrolid = dautoid;\n  }\n\n}\n\nOutputdevice.OPStatus = Object.freeze({\n  OPS_Off: \"off\",\n  //꺼짐\n  OPS_On: \"on\",\n  //켜짐\n  OPS_Local: \"local\",\n  //현장수동제어\n  OPS_Idle: \"idle\"\n});\nOutputdevice.OutDeviceTypeEnum = Object.freeze({\n  ODT_None: 0,\n  ODT_PUMP: 1,\n  //\n  ODT_FAN: 2,\n  ODT_VALVE: 3,\n  ODT_LED: 4,\n  ODT_COOLER: 5,\n  ODT_HEATER: 6,\n  ODT_ETC: 99\n});\nmodule.exports = Outputdevice;","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/commonjs/outputdevice.js"],"names":["fs","require","Outputdevice","Writefile","filename","mlist","data","JSON","stringify","writeFileSync","Readfile","rawdata","readFileSync","objlist","parse","alist","forEach","element","push","Object","assign","Clonbyjsonobj","mobj","constructor","uniqid","dname","hwchannel","dtype","dstatus","OPStatus","OPS_Off","dautoid","UniqID","Name","Channel","DevType","Status","Autocontrolid","freeze","OPS_On","OPS_Local","OPS_Idle","OutDeviceTypeEnum","ODT_None","ODT_PUMP","ODT_FAN","ODT_VALVE","ODT_LED","ODT_COOLER","ODT_HEATER","ODT_ETC","module","exports"],"mappings":"AACA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAGC,MAAMC,YAAN,CAAkB;AA6BC,SAATC,SAAS,CAACC,QAAD,EAAWC,KAAX,EAChB;AACI,QAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAX;AACAL,IAAAA,EAAE,CAACS,aAAH,CAAiBL,QAAjB,EAA2BE,IAA3B;AAEH;;AACe,SAARI,QAAQ,CAACN,QAAD,EAChB;AAEI,QAAIO,OAAO,GAAGX,EAAE,CAACY,YAAH,CAAgBR,QAAhB,CAAd;AACA,QAAIS,OAAO,GAAGN,IAAI,CAACO,KAAL,CAAWH,OAAX,CAAd;AAEA,QAAII,KAAK,GAAC,EAAV;AACAF,IAAAA,OAAO,CAACG,OAAR,CAAgBC,OAAO,IAAI;AACvBF,MAAAA,KAAK,CAACG,IAAN,CAAWC,MAAM,CAACC,MAAP,CAAc,IAAIlB,YAAJ,EAAd,EAAkCe,OAAlC,CAAX;AACH,KAFD;AAIA,WAAOF,KAAP;AAEH;;AAIuB,SAAbM,aAAa,CAACC,IAAD,EACpB;AACI,WAAOH,MAAM,CAACC,MAAP,CAAc,IAAIlB,YAAJ,EAAd,EAAkCoB,IAAlC,CAAP,CADJ,CACoD;AACnD;;AAEDC,EAAAA,WAAW,CAACC,MAAD,EAAQC,KAAR,EAAgBC,SAAhB,EAA2BC,KAA3B,EAAkCC,OAAO,GAAG1B,YAAY,CAAC2B,QAAb,CAAsBC,OAAlE,EAA2EC,OAA3E,EAAoF;AAE3F,SAAKC,MAAL,GAAaR,MAAb;AACA,SAAKS,IAAL,GAAWR,KAAX;AACA,SAAKS,OAAL,GAAeR,SAAf;AACA,SAAKS,OAAL,GAAcR,KAAd;AACA,SAAKS,MAAL,GAAaR,OAAb;AACA,SAAKS,aAAL,GAAmBN,OAAnB;AAGH;;AAnEU;;AAAZ7B,Y,CAEI2B,Q,GAAWV,MAAM,CAACmB,MAAP,CACd;AAEIR,EAAAA,OAAO,EAAE,KAFb;AAEoB;AAChBS,EAAAA,MAAM,EAAE,IAHZ;AAGkB;AACdC,EAAAA,SAAS,EAAE,OAJf;AAIwB;AACpBC,EAAAA,QAAQ,EAAE;AALd,CADc,C;AAFfvC,Y,CAcCwC,iB,GAAoBvB,MAAM,CAACmB,MAAP,CACxB;AAEIK,EAAAA,QAAQ,EAAE,CAFd;AAGIC,EAAAA,QAAQ,EAAE,CAHd;AAGiB;AACbC,EAAAA,OAAO,EAAE,CAJb;AAKIC,EAAAA,SAAS,EAAE,CALf;AAMIC,EAAAA,OAAO,EAAE,CANb;AAOIC,EAAAA,UAAU,EAAE,CAPhB;AAQIC,EAAAA,UAAU,EAAE,CARhB;AASIC,EAAAA,OAAO,EAAE;AATb,CADwB,C;AA0D5BC,MAAM,CAACC,OAAP,GAAiBlD,YAAjB","sourcesContent":["\r\nconst fs = require('fs');\r\n\r\n\r\n class Outputdevice{\r\n \r\n    static OPStatus = Object.freeze(\r\n        {\r\n    \r\n            OPS_Off: \"off\", //꺼짐\r\n            OPS_On: \"on\", //켜짐\r\n            OPS_Local: \"local\", //현장수동제어\r\n            OPS_Idle: \"idle\"\r\n    \r\n        });\r\n    \r\n \r\n        \r\n static OutDeviceTypeEnum = Object.freeze(\r\n    {\r\n\r\n        ODT_None: 0,\r\n        ODT_PUMP: 1, //\r\n        ODT_FAN: 2,\r\n        ODT_VALVE: 3,\r\n        ODT_LED: 4,\r\n        ODT_COOLER: 5,\r\n        ODT_HEATER: 6,\r\n        ODT_ETC: 99\r\n\r\n    });\r\n\r\n\r\n    static Writefile(filename, mlist)\r\n    {\r\n        let data = JSON.stringify(mlist);\r\n        fs.writeFileSync(filename, data);\r\n\r\n    }\r\n    static  Readfile(filename)\r\n    {\r\n\r\n        let rawdata = fs.readFileSync(filename);\r\n        let objlist = JSON.parse(rawdata);\r\n\r\n        let alist=[];\r\n        objlist.forEach(element => {\r\n            alist.push(Object.assign(new Outputdevice(), element));\r\n        });\r\n\r\n        return alist;\r\n\r\n    }\r\n\r\n\r\n\r\n        static Clonbyjsonobj(mobj)\r\n        {\r\n            return Object.assign(new Outputdevice(), mobj) ;//new Outputdevice(mobj.UniqID, mobj.Name,  mobj.Channel,mobj.DevType, mobj.Status, mobj.Autocontrolid);\r\n        }\r\n    \r\n        constructor(uniqid,dname,  hwchannel, dtype, dstatus = Outputdevice.OPStatus.OPS_Off, dautoid) {\r\n    \r\n            this.UniqID =uniqid;\r\n            this.Name =dname;\r\n            this.Channel = hwchannel;\r\n            this.DevType =dtype;\r\n            this.Status =dstatus;\r\n            this.Autocontrolid=dautoid;\r\n\r\n            \r\n        }\r\n\r\n}\r\n\r\n\r\nmodule.exports = Outputdevice;\r\n\r\n"]},"metadata":{},"sourceType":"module"}