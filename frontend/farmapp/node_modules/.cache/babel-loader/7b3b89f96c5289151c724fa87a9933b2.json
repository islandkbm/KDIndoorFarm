{"ast":null,"code":"import reqMessage from \"./reqMessage\";\nimport Sensordevice from \"./commonjs/sensordevice\";\nimport Outputdevice from \"./commonjs/outputdevice\";\nimport AutoControl from \"./commonjs/autocontrol\";\nimport responseMessage from \"./commonjs/responseMessage\";\nconst API = \"/api/\";\nexport default class IndoorFarmAPI {\n  constructor() {\n    this.abc = \"123\";\n    this.def = \"456\";\n  }\n\n  static logout(mobj) {\n    console.log(\"IndoorFarmAPI \");\n    return \"logout\";\n  }\n\n  static async postData(url = \"\", data = {}) {\n    const response = await fetch(url, {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    });\n    return response; // parses JSON response into native JavaScript objects\n  }\n\n  static async getsensordatas() {\n    const resdata = await this.getRequest(true, false, false, false);\n\n    if (resdata) {\n      return resdata.Sensors;\n    }\n\n    return null;\n  }\n\n  static async getoutputstatus() {\n    const resdata = await this.getRequest(false, true, false, false);\n\n    if (resdata) {\n      return resdata.Outputs;\n    }\n\n    return null;\n  }\n\n  static async getautocontrols() {\n    return await this.getRequest(true, true, true, true);\n  }\n\n  static async getRequest(isensor, isoutdev, isautostate, isautocontrol) {\n    let mrepmsg = new responseMessage();\n\n    try {\n      const reqmsg = new reqMessage(); //자동제어  센서목록, 출력목록 다 가져옴\n\n      reqmsg.getAutoControlstate = isautostate;\n      reqmsg.getSensors = isensor;\n      reqmsg.getOutputport = isoutdev;\n      reqmsg.getAutoControl = isautocontrol;\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\n      const resdata = await res.json();\n      resdata.AutoControls.forEach(element => {\n        mrepmsg.AutoControls.push(AutoControl.Clonbyjsonobj(element));\n      });\n      resdata.Sensors.forEach(element => {\n        mrepmsg.Sensors.push(Sensordevice.Clonbyjsonobj(element));\n      });\n      resdata.Outputs.forEach(element => {\n        mrepmsg.Outputs.push(Outputdevice.Clonbyjsonobj(element));\n      });\n    } catch (error) {\n      console.log(\" getRequest error : \" + error);\n    } finally {\n      console.log(\" getRequest finally  : \" + mrepmsg);\n      return mrepmsg;\n    }\n  }\n\n  static async setmanualonoff(moutputport) {\n    try {\n      const reqmsg = new reqMessage();\n      reqmsg.setManualControl = true;\n      reqmsg.OutputManual.push(moutputport);\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\n      const resdata = await res.json();\n      console.log(\" setmanualonoff rsp : \" + resdata.IsOK);\n    } catch (error) {\n      console.log(\" setmanualonoff error : \" + error);\n    } finally {\n      console.log(\" setmanualonoff finally  : \" + moutputport);\n      return \"ok\";\n    }\n  }\n\n  static async setAutocontrolsetup(mAutocfg) {\n    var isok = false;\n\n    try {\n      const reqmsg = new reqMessage();\n      reqmsg.setAutocontrol = true;\n      reqmsg.Autoconfigitem = mAutocfg;\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\n      const resdata = await res.json();\n      console.log(\" setAutocontrolsetup rsp : \" + resdata.IsOK);\n      isok = true;\n    } catch (error) {\n      console.log(\" setAutocontrolsetup error : \" + error);\n    } finally {\n      console.log(\" setAutocontrolsetup finally  : \" + isok);\n      return isok;\n    }\n  }\n\n  static async setDeviceconfigsetup(mDevcfg) {\n    return await this.setRequest(mDevcfg, false, true, false);\n  } // 서버에 저장 요청\n\n\n  static async setRequest(mItems, isautocfg, isdevcofig, ismanual) {\n    let isok = false;\n    console.log(\" setDeviceconfigsetup rsp : \" + isok);\n\n    try {\n      const reqmsg = new reqMessage();\n      reqmsg.setDeviceconfig = isdevcofig;\n      reqmsg.Deviceconfigitem = mItems;\n      reqmsg.setAutocontrol = isautocfg;\n      reqmsg.Autoconfigitem = mItems;\n      reqmsg.setManualControl = ismanual;\n      reqmsg.OutputManual.push(mItems);\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\n      const resdata = await res.json();\n      console.log(\" setRequest rsp : \" + resdata.IsOK);\n      isok = true;\n    } catch (error) {\n      console.log(\" setRequest error : \" + error);\n    } finally {\n      console.log(\" setRequest finally  : \" + isok);\n      return isok;\n    }\n  }\n\n}","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/indoorfarmapi.js"],"names":["reqMessage","Sensordevice","Outputdevice","AutoControl","responseMessage","API","IndoorFarmAPI","abc","def","logout","mobj","console","log","postData","url","data","response","fetch","method","mode","cache","headers","body","JSON","stringify","getsensordatas","resdata","getRequest","Sensors","getoutputstatus","Outputs","getautocontrols","isensor","isoutdev","isautostate","isautocontrol","mrepmsg","reqmsg","getAutoControlstate","getSensors","getOutputport","getAutoControl","res","json","AutoControls","forEach","element","push","Clonbyjsonobj","error","setmanualonoff","moutputport","setManualControl","OutputManual","IsOK","setAutocontrolsetup","mAutocfg","isok","setAutocontrol","Autoconfigitem","setDeviceconfigsetup","mDevcfg","setRequest","mItems","isautocfg","isdevcofig","ismanual","setDeviceconfig","Deviceconfigitem"],"mappings":"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","sourcesContent":["\r\nimport reqMessage from \"./reqMessage\";\r\n\r\n\r\nimport Sensordevice from \"./commonjs/sensordevice\";\r\nimport Outputdevice from \"./commonjs/outputdevice\";\r\nimport AutoControl from \"./commonjs/autocontrol\";\r\nimport responseMessage from \"./commonjs/responseMessage\";\r\n\r\n\r\nconst API = \"/api/\";\r\n\r\nexport default class IndoorFarmAPI {\r\n  abc = \"123\";\r\n  def = \"456\";\r\n\r\n  static logout(mobj) {\r\n    console.log(\"IndoorFarmAPI \");\r\n    return \"logout\";\r\n  }\r\n\r\n  static async postData(url = \"\", data = {}) {\r\n    const response = await fetch(url, {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n\r\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n    });\r\n    return response; // parses JSON response into native JavaScript objects\r\n  }\r\n\r\n  static async getsensordatas() {\r\n    \r\n      const resdata = await this.getRequest(true, false, false,false);\r\n      if(resdata)\r\n      {\r\n        return resdata.Sensors;\r\n      }\r\n      return null;\r\n      \r\n  }\r\n\r\n  \r\n  static async getoutputstatus() {\r\n    const resdata = await this.getRequest(false, true, false,false);\r\n      if(resdata)\r\n      {\r\n        return resdata.Outputs;\r\n      }\r\n      return null;\r\n  }\r\n  static async getautocontrols() {\r\n    \r\n    return  await this.getRequest(true, true, true, true);\r\n\r\n}\r\n\r\n\r\n  static async getRequest(isensor,isoutdev, isautostate, isautocontrol) {\r\n    \r\n    let mrepmsg = new responseMessage();\r\n\r\n\r\n    try {\r\n      const reqmsg = new reqMessage();\r\n      //자동제어  센서목록, 출력목록 다 가져옴\r\n      reqmsg.getAutoControlstate = isautostate;\r\n      reqmsg.getSensors = isensor;\r\n      reqmsg.getOutputport = isoutdev;\r\n      reqmsg.getAutoControl = isautocontrol;\r\n      \r\n            \r\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\r\n      const resdata = await res.json();\r\n      \r\n\r\n      resdata.AutoControls.forEach((element) => {\r\n        mrepmsg.AutoControls.push(AutoControl.Clonbyjsonobj(element));\r\n      });\r\n\r\n      resdata.Sensors.forEach((element) => {\r\n        mrepmsg.Sensors.push(Sensordevice.Clonbyjsonobj(element));\r\n      });\r\n\r\n\r\n      resdata.Outputs.forEach((element) => {\r\n        mrepmsg.Outputs.push(Outputdevice.Clonbyjsonobj(element));\r\n      });\r\n\r\n      \r\n\r\n\r\n    } catch (error) {\r\n      console.log(\" getRequest error : \" + error);\r\n    } finally {\r\n      console.log(\" getRequest finally  : \" + mrepmsg);\r\n      return mrepmsg;\r\n    }\r\n  }\r\n\r\n\r\n  \r\n\r\n  static async setmanualonoff(moutputport) {\r\n   \r\n        try {\r\n      const reqmsg = new reqMessage();\r\n      reqmsg.setManualControl = true;\r\n      reqmsg.OutputManual.push(moutputport);\r\n      \r\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\r\n      const resdata = await res.json();\r\n      console.log(\" setmanualonoff rsp : \" + resdata.IsOK);\r\n\r\n    } catch (error) {\r\n      console.log(\" setmanualonoff error : \" + error);\r\n    } finally {\r\n      console.log(\" setmanualonoff finally  : \" +moutputport);\r\n      return \"ok\";\r\n    }\r\n\r\n  }\r\n  \r\n  \r\n  static async setAutocontrolsetup(mAutocfg) {\r\n   \r\n    var isok =false;\r\n\r\n    try {\r\n      const reqmsg = new reqMessage();\r\n      reqmsg.setAutocontrol = true;\r\n      reqmsg.Autoconfigitem = mAutocfg;\r\n      \r\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\r\n      const resdata = await res.json();\r\n      console.log(\" setAutocontrolsetup rsp : \" + resdata.IsOK);\r\n      isok=true;\r\n\r\n    } catch (error) {\r\n      console.log(\" setAutocontrolsetup error : \" + error);\r\n    } finally {\r\n      console.log(\" setAutocontrolsetup finally  : \" + isok);\r\n      return isok;\r\n    }\r\n\r\n  }\r\n  \r\n\r\n  static async setDeviceconfigsetup(mDevcfg) {\r\n   \r\n    return await this.setRequest(mDevcfg,false, true,false );\r\n\r\n  }\r\n\r\n\r\n  // 서버에 저장 요청\r\n  static async setRequest(mItems, isautocfg, isdevcofig, ismanual) {\r\n   \r\n    let isok =false;\r\n\r\n    console.log(\" setDeviceconfigsetup rsp : \" + isok);\r\n    try {\r\n      const reqmsg = new reqMessage();\r\n      reqmsg.setDeviceconfig = isdevcofig;\r\n      reqmsg.Deviceconfigitem = mItems;\r\n      reqmsg.setAutocontrol = isautocfg;\r\n      reqmsg.Autoconfigitem = mItems;\r\n      reqmsg.setManualControl = ismanual;\r\n      reqmsg.OutputManual.push(mItems);\r\n      \r\n      const res = await IndoorFarmAPI.postData(API + \"farmrequest\", reqmsg);\r\n      const resdata = await res.json();\r\n      console.log(\" setRequest rsp : \" + resdata.IsOK);\r\n      isok=true;\r\n\r\n    } catch (error) {\r\n      console.log(\" setRequest error : \" + error);\r\n    } finally {\r\n      console.log(\" setRequest finally  : \" + isok);\r\n      return isok;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}