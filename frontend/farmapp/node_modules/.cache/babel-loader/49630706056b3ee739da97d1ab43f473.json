{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Dashboard from \"./pages/dashboard\";\nimport Sensorpage from \"./pages/sensorpage\";\nimport Devicepage from \"./pages/devicepage\";\nimport Autocontrolpage from \"./pages/autocontrolpage\";\nimport Settingpage from \"./pages/settingpage\";\nimport About from \"./pages/about\";\nimport Loginpage from \"./pages/loginpage\";\nimport manistore from \"./store\";\nimport myGlobalvalues from \"./myGlobal\";\nimport IndoorFarmAPI from \"./indoorfarmapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst os = require(\"os\");\n\nfunction App() {\n  _s();\n\n  const [hwchannel, sethwchannel] = useState(0);\n  let adminmenu;\n  console.log(\"-------------------------react start---------------------\");\n  console.log('Hostname : ' + os.hostname());\n  console.log('OS Type : ' + os.type());\n  console.log('Platform : ' + os.platform());\n  let hostname = os.hostname();\n\n  if (hostname.indexOf(\"localhost\") != -1) {\n    ///로컬로 접속하면 관리자 계정임\n    myGlobalvalues.islocal = true;\n    myGlobalvalues.isuseradmin = true;\n  } else {\n    myGlobalvalues.islocal = false;\n    myGlobalvalues.isuseradmin = false;\n  }\n\n  myGlobalvalues.farmapi = new IndoorFarmAPI(myGlobalvalues.islocal);\n  console.log(myGlobalvalues);\n\n  if (myGlobalvalues.isadmin === false) {\n    adminmenu = /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/about\",\n      className: \"linkmenu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./image/s_set.png\",\n          className: \"con_img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), \" user \", hostname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  } else {\n    adminmenu = /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/about\",\n      className: \"linkmenu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./image/s_set.png\",\n          className: \"con_img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), \" admin :\", hostname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: myGlobalvalues.islogin === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Loginpage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: About\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QrP9NYAxavy14eldYaSMPbPDAG8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/App.js"],"names":["React","useState","BrowserRouter","Router","Route","Link","Switch","Dashboard","Sensorpage","Devicepage","Autocontrolpage","Settingpage","About","Loginpage","manistore","myGlobalvalues","IndoorFarmAPI","os","require","App","hwchannel","sethwchannel","adminmenu","console","log","hostname","type","platform","indexOf","islocal","isuseradmin","farmapi","isadmin","islogin"],"mappings":"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","sourcesContent":["import \"./App.css\";\n\nimport React, {  useState } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nimport Dashboard from \"./pages/dashboard\";\nimport Sensorpage from \"./pages/sensorpage\";\nimport Devicepage from \"./pages/devicepage\";\nimport Autocontrolpage from \"./pages/autocontrolpage\";\nimport Settingpage from \"./pages/settingpage\";\nimport About from \"./pages/about\";\nimport Loginpage from \"./pages/loginpage\";\n\nimport manistore from \"./store\"\nimport myGlobalvalues from \"./myGlobal\";\nimport IndoorFarmAPI from \"./indoorfarmapi\";\n\n\n\nconst os = require(\"os\");\n\n\n\nfunction App() {\n  const [hwchannel, sethwchannel] = useState(0);\n\n  \n  let adminmenu;\n\n  console.log(\"-------------------------react start---------------------\");\n  \n  console.log('Hostname : ' + os.hostname());\n  console.log('OS Type : ' + os.type());\n  console.log('Platform : ' + os.platform());\n\n  \n\nlet hostname =os.hostname();\n\nif(hostname.indexOf(\"localhost\") != -1)\n{\n  ///로컬로 접속하면 관리자 계정임\n  myGlobalvalues.islocal=true;\n  myGlobalvalues.isuseradmin=true;\n}\nelse{\n  myGlobalvalues.islocal=false;\n  myGlobalvalues.isuseradmin=false;\n}\n\nmyGlobalvalues.farmapi =new IndoorFarmAPI(myGlobalvalues.islocal);\n\nconsole.log(myGlobalvalues);\n\n\n\n  if (myGlobalvalues.isadmin === false) {\n    \n    adminmenu = (\n      <Link to=\"/about\" className=\"linkmenu\">\n      <div className=\"content\">\n        <img src=\"./image/s_set.png\" className=\"con_img\" /> user {hostname}\n      </div>\n    </Link>\n    );\n\n  } else {\n    adminmenu = (\n      <Link to=\"/about\" className=\"linkmenu\">\n      <div className=\"content\">\n        <img src=\"./image/s_set.png\" className=\"con_img\" /> admin :{hostname}\n      </div>\n    </Link>\n    );\n  }\n\n\n\n  return (\n    <div className=\"App\">\n\n      \n      {(myGlobalvalues.islogin===false) ? (\n        <div>\n        {Loginpage}\n        </div>\n        ):(\n          <div>\n          {About}\n          </div>\n          )}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}