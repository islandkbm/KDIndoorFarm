{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\outputdevicedisplay.js\";\nimport React from \"react\";\nimport IndoorFarmAPI from \"./indoorfarmapi\";\nimport manualMessage from \"./manualmessage\";\nimport Outputdevice from \"./commonjs/outputdevice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction manualonoff(channel, onoff) {\n  if (onoff == true) {\n    console.log(\" manualonoff  on channel : \" + channel);\n  } else {\n    console.log(\" manualonoff  off channel : \" + channel);\n  }\n\n  const mdev = new manualMessage();\n  mdev.hardwareChannel = channel;\n  mdev.isonoff = onoff;\n  IndoorFarmAPI.setmanualonoff(mdev);\n}\n\nfunction outputdevbox(mydata, isonlystatus) {\n  let ismanual = \"자동제어중\";\n  let devicon = \"./image/devicon_\" + mydata.DevType + \".png\";\n  let onofficon = \"./image/\" + mydata.Status + \".png\";\n\n  if (mydata.Status === Outputdevice.OPStatus.OPS_Local) {\n    ismanual = \"현장제어중\";\n  } else if (mydata.Autocontrolid == 0) {\n    if (isonlystatus == true) {\n      ismanual = \"수동제어\";\n    } else {\n      ismanual = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button_on\",\n          onClick: () => manualonoff(mydata.Channel, true),\n          children: \"\\uC218\\uB3D9 On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button_off\",\n          onClick: () => manualonoff(mydata.Channel, false),\n          children: \"\\uC218\\uB3D9 Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 106\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"out_con\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"out_name\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: devicon,\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \"   \", mydata.Name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"out_value\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: onofficon,\n        className: \"onoff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"out_result\",\n      children: ismanual\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Outputdevicedisplay(moutdevarray, isonlystatus) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outdummy\",\n    children: moutdevarray.map((localState, index) => outputdevbox(localState, isonlystatus))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Outputdevicedisplay;\nexport default Outputdevicedisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"Outputdevicedisplay\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/outputdevicedisplay.js"],"names":["React","IndoorFarmAPI","manualMessage","Outputdevice","manualonoff","channel","onoff","console","log","mdev","hardwareChannel","isonoff","setmanualonoff","outputdevbox","mydata","isonlystatus","ismanual","devicon","DevType","onofficon","Status","OPStatus","OPS_Local","Autocontrolid","Channel","Name","Outputdevicedisplay","moutdevarray","map","localState","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;AAEA,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,KAA9B,EAAqC;AACnC,MAAIA,KAAK,IAAI,IAAb,EAAmB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCH,OAA5C;AACD,GAFD,MAEO;AACLE,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCH,OAA7C;AACD;;AAED,QAAMI,IAAI,GAAG,IAAIP,aAAJ,EAAb;AACAO,EAAAA,IAAI,CAACC,eAAL,GAAuBL,OAAvB;AACAI,EAAAA,IAAI,CAACE,OAAL,GAAeL,KAAf;AAEAL,EAAAA,aAAa,CAACW,cAAd,CAA6BH,IAA7B;AACD;;AAED,SAASI,YAAT,CAAsBC,MAAtB,EAA8BC,YAA9B,EAA4C;AAC1C,MAAIC,QAAQ,GAAG,OAAf;AACA,MAAIC,OAAO,GAAG,qBAAqBH,MAAM,CAACI,OAA5B,GAAsC,MAApD;AACA,MAAIC,SAAS,GAAG,aAAaL,MAAM,CAACM,MAApB,GAA6B,MAA7C;;AAEA,MAAIN,MAAM,CAACM,MAAP,KAAkBjB,YAAY,CAACkB,QAAb,CAAsBC,SAA5C,EAAuD;AACrDN,IAAAA,QAAQ,GAAG,OAAX;AACD,GAFD,MAEO,IAAIF,MAAM,CAACS,aAAP,IAAwB,CAA5B,EAA+B;AACpC,QAAIR,YAAY,IAAI,IAApB,EAA0B;AACxBC,MAAAA,QAAQ,GAAG,MAAX;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,gBACN;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,OAAO,EAAE,MAAMZ,WAAW,CAACU,MAAM,CAACU,OAAR,EAAiB,IAAjB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,oBACiG;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAgC,UAAA,OAAO,EAAE,MAAMpB,WAAW,CAACU,MAAM,CAACU,OAAR,EAAiB,KAAjB,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADjG;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEP,OAAV;AAAmB,QAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,SAC4CH,MAAM,CAACW,IADnD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEN,SAAV;AAAqB,QAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BH;AAA7B;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;AAED,SAASU,mBAAT,CAA6BC,YAA7B,EAA2CZ,YAA3C,EAAyD;AACvD,sBAGI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACGY,YAAY,CAACC,GAAb,CAAiB,CAACC,UAAD,EAAaC,KAAb,KAAuBjB,YAAY,CAACgB,UAAD,EAAad,YAAb,CAApD;AADH;AAAA;AAAA;AAAA;AAAA,UAHJ;AAQD;;KATQW,mB;AAWT,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\r\nimport IndoorFarmAPI from \"./indoorfarmapi\";\r\nimport manualMessage from \"./manualmessage\";\r\nimport Outputdevice from \"./commonjs/outputdevice\";\r\n\r\nfunction manualonoff(channel, onoff) {\r\n  if (onoff == true) {\r\n    console.log(\" manualonoff  on channel : \" + channel);\r\n  } else {\r\n    console.log(\" manualonoff  off channel : \" + channel);\r\n  }\r\n\r\n  const mdev = new manualMessage();\r\n  mdev.hardwareChannel = channel;\r\n  mdev.isonoff = onoff;\r\n\r\n  IndoorFarmAPI.setmanualonoff(mdev);\r\n}\r\n\r\nfunction outputdevbox(mydata, isonlystatus) {\r\n  let ismanual = \"자동제어중\";\r\n  let devicon = \"./image/devicon_\" + mydata.DevType + \".png\";\r\n  let onofficon = \"./image/\" + mydata.Status + \".png\";\r\n\r\n  if (mydata.Status === Outputdevice.OPStatus.OPS_Local) {\r\n    ismanual = \"현장제어중\";\r\n  } else if (mydata.Autocontrolid == 0) {\r\n    if (isonlystatus == true) {\r\n      ismanual = \"수동제어\";\r\n    } else {\r\n      ismanual = (\r\n        <div>\r\n          <button className=\"button_on\" onClick={() => manualonoff(mydata.Channel, true)}>수동 On</button> <button className=\"button_off\"  onClick={() => manualonoff(mydata.Channel, false)}>수동 Off</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"out_con\">\r\n      <div className=\"out_name\">\r\n        <img src={devicon} className=\"icon\" />   {mydata.Name}\r\n      </div>\r\n      <div className=\"out_value\">\r\n        <img src={onofficon} className=\"onoff\" />\r\n      </div>\r\n      <div className=\"out_result\">{ismanual}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Outputdevicedisplay(moutdevarray, isonlystatus) {\r\n  return (\r\n    \r\n    \r\n      <div className=\"outdummy\">\r\n        {moutdevarray.map((localState, index) => outputdevbox(localState, isonlystatus))}\r\n       </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Outputdevicedisplay;\r\n"]},"metadata":{},"sourceType":"module"}