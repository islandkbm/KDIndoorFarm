{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from 'react';\nimport Loginpage from \"./pages/loginpage\";\nimport Mainpage from \"./pages/mainpage\";\nimport { connect } from 'react-redux';\nimport { actionSetlogin } from './mainAction';\nimport myGlobalvalues from \"./myGlobal\";\nimport IndoorFarmAPI from \"./indoorfarmapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst os = require(\"os\");\n\nfunction App(props) {\n  _s();\n\n  console.log(\"-------------------------react APP start---------------------\");\n  console.log(\"Hostname : \" + os.hostname() + \"OS Type : \" + os.type() + \"Platform : \" + os.platform());\n  console.log(\"myGlobalvalues count :\" + myGlobalvalues.ncount++);\n  const provider = window.sessionStorage.getItem('provider');\n  console.log(\"provider :\" + provider);\n  let hostname = os.hostname();\n\n  if (hostname.indexOf(\"localhost\") != -1) {\n    ///로컬로 접속하면 관리자 계정임\n    myGlobalvalues.islocal = true;\n    myGlobalvalues.isuseradmin = true;\n  } else {\n    myGlobalvalues.islocal = false;\n    myGlobalvalues.isuseradmin = false;\n  }\n\n  myGlobalvalues.farmapi = new IndoorFarmAPI(myGlobalvalues.islocal);\n  console.log(myGlobalvalues);\n  useEffect(props => {\n    const islogin = window.sessionStorage.getItem('login');\n    console.log(\"islogin :\" + islogin);\n\n    if (islogin != null) {\n      //props.Setlogin(islogin);\n      props.dispatch(actionSetlogin(\"ll\"));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: props.loginrole === \"logout\" ? /*#__PURE__*/_jsxDEV(Loginpage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(Mainpage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 57\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nconst mapStateToProps = function (state) {\n  return {\n    loginrole: state.loginrole\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    Setlogin: value => dispatch(actionSetlogin(value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/App.js"],"names":["React","useState","useEffect","Loginpage","Mainpage","connect","actionSetlogin","myGlobalvalues","IndoorFarmAPI","os","require","App","props","console","log","hostname","type","platform","ncount","provider","window","sessionStorage","getItem","indexOf","islocal","isuseradmin","farmapi","islogin","dispatch","loginrole","mapStateToProps","state","mapDispatchToProps","Setlogin","value"],"mappings":";;;AAAA,OAAO,WAAP;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAGA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAIA,OAAOC,cAAP,MAA2B,YAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAIlBC,EAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBL,EAAE,CAACM,QAAH,EAAhB,GAAgC,YAAhC,GAA+CN,EAAE,CAACO,IAAH,EAA/C,GAA2D,aAA3D,GAA2EP,EAAE,CAACQ,QAAH,EAAvF;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAA4BP,cAAc,CAACW,MAAf,EAAxC;AAGA,QAAMC,QAAQ,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,CAAjB;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeK,QAA3B;AAGA,MAAIJ,QAAQ,GAAGN,EAAE,CAACM,QAAH,EAAf;;AACA,MAAIA,QAAQ,CAACQ,OAAT,CAAiB,WAAjB,KAAiC,CAAC,CAAtC,EAAyC;AACvC;AACAhB,IAAAA,cAAc,CAACiB,OAAf,GAAyB,IAAzB;AACAjB,IAAAA,cAAc,CAACkB,WAAf,GAA6B,IAA7B;AACD,GAJD,MAIO;AACLlB,IAAAA,cAAc,CAACiB,OAAf,GAAyB,KAAzB;AACAjB,IAAAA,cAAc,CAACkB,WAAf,GAA6B,KAA7B;AACD;;AAEDlB,EAAAA,cAAc,CAACmB,OAAf,GAAyB,IAAIlB,aAAJ,CAAkBD,cAAc,CAACiB,OAAjC,CAAzB;AAEAX,EAAAA,OAAO,CAACC,GAAR,CAAYP,cAAZ;AAGEL,EAAAA,SAAS,CAAEU,KAAD,IAAW;AAGvB,UAAMe,OAAO,GAAGP,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,CAAhB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAca,OAA1B;;AACE,QAAGA,OAAO,IAAE,IAAZ,EACA;AACE;AACAf,MAAAA,KAAK,CAACgB,QAAN,CAAetB,cAAc,CAAC,IAAD,CAA7B;AAED;AACA,GAXQ,EAWN,EAXM,CAAT;AAcF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGM,KAAK,CAACiB,SAAN,KAAoB,QAApB,gBAAgC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAhC,gBAAiD,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADpD;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAhDQlB,G;;KAAAA,G;;AAkDT,MAAMmB,eAAe,GAAG,UAASC,KAAT,EAAgB;AACtC,SAAO;AACLF,IAAAA,SAAS,EAAEE,KAAK,CAACF;AADZ,GAAP;AAID,CALD;;AAMA,MAAMG,kBAAkB,GAAIJ,QAAD,IAAc;AACvC,SAAO;AACHK,IAAAA,QAAQ,EAAGC,KAAD,IAAWN,QAAQ,CAACtB,cAAc,CAAC4B,KAAD,CAAf;AAD1B,GAAP;AAGD,CAJD;;AAKA,eAAgB7B,OAAO,CAACyB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CrB,GAA5C,CAAhB","sourcesContent":["import \"./App.css\";\n\nimport React, { useState, useEffect } from 'react';\n\n\nimport Loginpage from \"./pages/loginpage\";\nimport Mainpage from \"./pages/mainpage\";\nimport { connect } from 'react-redux';\nimport { actionSetlogin } from './mainAction';\n\n\n\nimport myGlobalvalues from \"./myGlobal\";\nimport IndoorFarmAPI from \"./indoorfarmapi\";\n\nconst os = require(\"os\");\n\n\nfunction App(props) {\n  \n\n\n  console.log(\"-------------------------react APP start---------------------\");\n  console.log(\"Hostname : \" + os.hostname() + \"OS Type : \" + os.type() + \"Platform : \" + os.platform());\n  console.log(\"myGlobalvalues count :\" + (myGlobalvalues.ncount++) );\n  \n  \n  const provider = window.sessionStorage.getItem('provider');    \n  console.log(\"provider :\" + provider );\n  \n  \n  let hostname = os.hostname();\n  if (hostname.indexOf(\"localhost\") != -1) {\n    ///로컬로 접속하면 관리자 계정임\n    myGlobalvalues.islocal = true;\n    myGlobalvalues.isuseradmin = true;\n  } else {\n    myGlobalvalues.islocal = false;\n    myGlobalvalues.isuseradmin = false;\n  }\n\n  myGlobalvalues.farmapi = new IndoorFarmAPI(myGlobalvalues.islocal);\n\n  console.log(myGlobalvalues);\n\n\n    useEffect((props) => {\n    \n   \n  const islogin = window.sessionStorage.getItem('login');    \n  console.log(\"islogin :\" + islogin );\n    if(islogin!=null )\n    {\n      //props.Setlogin(islogin);\n      props.dispatch(actionSetlogin(\"ll\"));\n  \n    }\n    }, []);\n\n\n  return (\n    <div className=\"App\">\n      {props.loginrole === \"logout\" ? (<Loginpage/> ): (<Mainpage/>)}\n      \n    </div>\n  );\n}\n\nconst mapStateToProps = function(state) {\n  return {\n    loginrole: state.loginrole,\n   \n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      Setlogin: (value) => dispatch(actionSetlogin(value))\n  };\n}\nexport default  connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}