{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\pages\\\\settingpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Sensordisplay from \"../sensordisplay\";\nimport IndoorFarmAPI from \"../indoorfarmapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Relayeditbox(myeditrelay) {\n  //const [misTimershow, selectcontrol] = useState(myeditcfg !=null && myeditcfg.istimer);\n  //console.log(\"Autocontroleditbox  misTimershow: \" + misTimershow);\n  let devicon = \"./image/devicon_1\" + \".png\";\n  let onofficon = \"./image/\" + \"on.png\";\n\n  if (myeditrelay === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }, this);\n  } else {\n    let copycfg = myeditrelay; // AutoControlconfig.deepcopy(mydata.mConfig);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uCD9C\\uB825\\uD3EC\\uD2B8\\uB97C \\uC124\\uC815\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"out_con\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"out_name\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: devicon,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 44\n          }, this), \"   \", myeditrelay, \"    \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"out_value\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: onofficon,\n            className: \"onoff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 41\n          }, this), \"   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), myeditrelay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_c = Relayeditbox;\n\nconst Settingpage = () => {\n  _s();\n\n  let rlist12 = [];\n  let rlist24 = [];\n  const [relaylist12, relayseleted12] = useState([]);\n  const [relaylist24, relayseleted24] = useState([]);\n  const [mSelecteditem, relayeditselected] = useState(null);\n\n  for (let i = 1; i <= 12; i++) {\n    if (i < 10) {\n      rlist12.push(\"R-0\" + i);\n    } else {\n      rlist12.push(\"R-\" + i);\n    }\n  }\n\n  for (let i = 13; i <= 24; i++) {\n    rlist24.push(\"R-\" + i);\n  }\n\n  function relayonchangeHandler(e) {\n    console.log(\"inputonchangeHandler : \" + e.target.name);\n\n    switch (e.target.name) {\n      case \"relayradio\":\n        if (e.target.checked === true) {\n          relayeditselected(e.target.id);\n        }\n\n        break;\n    }\n  }\n\n  function relayradiobox(relayname) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relaybox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"relayradio\",\n        defaultChecked: false,\n        id: relayname\n      }, relayname, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \" \", relayname, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./image/relay.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n  useEffect(() => {\n    let interval = null;\n    relayseleted12(rlist12);\n    relayseleted24(rlist24);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dev_name\",\n      children: \"\\uCD9C\\uB825\\uC7A5\\uCE58 \\uC120\\uD0DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relay_select\",\n      onChange: relayonchangeHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relaygroupbox\",\n        children: relaylist12.map((localState, index) => relayradiobox(localState))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relaygroupbox\",\n        children: relaylist24.map((localState, index) => relayradiobox(localState))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), Relayeditbox(mSelecteditem)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Settingpage, \"/ii6LYxJup02JJTBfMM2H/OhVcs=\");\n\n_c2 = Settingpage;\nexport default Settingpage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Relayeditbox\");\n$RefreshReg$(_c2, \"Settingpage\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/settingpage.js"],"names":["React","useState","useEffect","Sensordisplay","IndoorFarmAPI","Relayeditbox","myeditrelay","devicon","onofficon","copycfg","Settingpage","rlist12","rlist24","relaylist12","relayseleted12","relaylist24","relayseleted24","mSelecteditem","relayeditselected","i","push","relayonchangeHandler","e","console","log","target","name","checked","id","relayradiobox","relayname","interval","map","localState","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Sensordisplay from \"../sensordisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\n\r\n\r\nfunction Relayeditbox(myeditrelay) {\r\n    //const [misTimershow, selectcontrol] = useState(myeditcfg !=null && myeditcfg.istimer);\r\n    //console.log(\"Autocontroleditbox  misTimershow: \" + misTimershow);\r\n\r\n    let devicon = \"./image/devicon_1\" +  \".png\";\r\n    let onofficon = \"./image/\" +  \"on.png\";\r\n\r\n    if (myeditrelay === null) {\r\n      return (<div></div>);\r\n    } else {\r\n      let copycfg = myeditrelay; // AutoControlconfig.deepcopy(mydata.mConfig);\r\n\r\n      return (\r\n      <div>\r\n                <h4>출력포트를 설정합니다.</h4>\r\n          \r\n                <div className=\"out_con\">\r\n                <div className=\"out_name\"> <img src={devicon} className=\"icon\" />   {myeditrelay}    </div>\r\n            <div className=\"out_value\"> <img src={onofficon} className=\"onoff\" />   </div>\r\n\r\n            </div>\r\n              {myeditrelay}\r\n              \r\n             </div>\r\n          );\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nconst Settingpage = () => {\r\n  let rlist12 = [];\r\n  let rlist24 = [];\r\n  const [relaylist12, relayseleted12] = useState([]);\r\n  const [relaylist24, relayseleted24] = useState([]);\r\n  const [mSelecteditem, relayeditselected] = useState(null);\r\n\r\n\r\n  for (let i = 1; i <= 12; i++) {\r\n      if(i<10)\r\n      {\r\n    rlist12.push(\"R-0\" +i);\r\n      }\r\n      else{\r\n        rlist12.push(\"R-\" + i);\r\n      }\r\n  }\r\n  for (let i = 13; i <= 24; i++) {\r\n    rlist24.push(\"R-\" + i);\r\n  }\r\n\r\n\r\n  function relayonchangeHandler(e) {\r\n    console.log(\"inputonchangeHandler : \" + e.target.name);\r\n\r\n    switch (e.target.name) {\r\n      case \"relayradio\":\r\n        if (e.target.checked === true)\r\n        {\r\n            relayeditselected( e.target.id);\r\n        }\r\n        \r\n        break;\r\n    }\r\n\r\n}\r\n  function relayradiobox(relayname) {\r\n    return (\r\n      <div className=\"relaybox\">\r\n        <input type=\"radio\" key={relayname} name=\"relayradio\" defaultChecked={false} id={relayname} /> {relayname}\r\n        <img src=\"./image/relay.png\" /> \r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    relayseleted12(rlist12);\r\n    relayseleted24(rlist24);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"dev_name\">출력장치 선택</div>\r\n      <div className=\"relay_select\" onChange={relayonchangeHandler}>\r\n      <div className=\"relaygroupbox\">\r\n        {relaylist12.map((localState, index) => relayradiobox(localState))}\r\n        </div>\r\n        <div className=\"relaygroupbox\">\r\n        {relaylist24.map((localState, index) => relayradiobox(localState))}\r\n        </div>\r\n        \r\n    </div>\r\n      {Relayeditbox(mSelecteditem)}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settingpage;\r\n"]},"metadata":{},"sourceType":"module"}