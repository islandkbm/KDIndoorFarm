{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\pages\\\\settingpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Outputdevice from \"../commonjs/outputdevice\";\nimport IndoorFarmAPI from \"../indoorfarmapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settingpage = () => {\n  _s();\n\n  let rlist12 = [];\n  let rlist24 = [];\n  let devcopycfg;\n  const [relaylist12, relayseleted12] = useState([]);\n  const [relaylist24, relayseleted24] = useState([]);\n  const [mSelecteditem, relayeditselected] = useState(null);\n  const [moutdevarray, setUpdatedevice] = useState([]);\n\n  for (let i = 0; i < 12; i++) {\n    rlist12.push(i);\n  }\n\n  for (let i = 12; i < 24; i++) {\n    rlist24.push(i);\n  }\n  /*\r\n  for (let i = 1; i <= 12; i++) {\r\n      if(i<10)\r\n      {\r\n    rlist12.push(\"R-0\" +i);\r\n      }\r\n      else{\r\n        rlist12.push(\"R-\" + i);\r\n      }\r\n  }\r\n  for (let i = 13; i <= 24; i++) {\r\n    rlist24.push(\"R-\" + i);\r\n  }\r\n  */\n\n\n  function setupSave(mcfg) {\n    console.log(\"setupSave uidd: \" + mcfg.UniqID + \" name : \" + mcfg.Name);\n    IndoorFarmAPI.setDeviceconfigsetup(mcfg).then(ret => {\n      console.log(\"setDeviceconfigsetup  uid: \" + ret);\n    });\n  }\n\n  function setupDelete(mcfg) {\n    mcfg.DevType = Outputdevice.OutDeviceTypeEnum.ODT_DELETE;\n    console.log(\"setupSave uidd: \" + mcfg.UniqID + \" name : \" + mcfg.Name);\n    IndoorFarmAPI.setDeviceconfigsetup(mcfg).then(ret => {\n      console.log(\"setDeviceconfigsetup  uid: \" + ret);\n    });\n  }\n\n  function inputonchangeHandler(e) {\n    console.log(\"inputonchangeHandler : \" + e.target.name);\n\n    switch (e.target.name) {\n      case \"devname\":\n        devcopycfg.Name = e.target.value;\n        break;\n\n      case \"relayradio\":\n        if (e.target.checked === true) {\n          relayeditselected(e.target.id);\n        }\n\n        break;\n\n      case \"deviceradio\":\n        devcopycfg.DevType = e.target.value;\n\n        if (e.target.checked === true) {\n          devcopycfg.DevType = Number(e.target.id);\n          console.log(\"devcopycfg.DevType : \" + devcopycfg.DevType);\n        }\n\n        break;\n    }\n  }\n\n  function Relayeditbox(myeditrelaynum, devicelist) {\n    //const [misTimershow, selectcontrol] = useState(myeditcfg !=null && myeditcfg.istimer);\n    //console.log(\"Autocontroleditbox  misTimershow: \" + misTimershow);\n    if (myeditrelaynum === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this);\n    } else {\n      let devobj = null;\n\n      for (const dev of devicelist) {\n        if (myeditrelaynum == dev.UniqID) {\n          devobj = dev;\n          break;\n        }\n      } //설정된 object가 없으면 새로생성\n\n\n      if (devobj === null) {\n        devobj = Outputdevice.CreateDefulatDevice(myeditrelaynum);\n      }\n\n      devcopycfg = Outputdevice.Clonbyjsonobj(devobj);\n      let devicon = \"./image/devicon_\" + devcopycfg.DevType + \".png\";\n      let onofficon = \"./image/\" + \"on.png\";\n      let devicetypelist = [];\n\n      for (let item in Outputdevice.OutDeviceTypeEnum) {\n        if (Outputdevice.OutDeviceTypeEnum[item] != Outputdevice.OutDeviceTypeEnum.ODT_DELETE) {\n          // console.log(Outputdevice.OutDeviceTypeEnum[item]);\n          devicetypelist.push(Outputdevice.OutDeviceTypeEnum[item]);\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relaygroupbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"out_con\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"out_name\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: devicon,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 44\n            }, this), \"   \", devcopycfg.Name, \"    \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"out_value\",\n            children: [\" \", \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outportsetupbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"\\uCD9C\\uB825\\uC7A5\\uCE58\\uB97C \\uC124\\uC815\\uD569\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cont_save2\",\n              id: \"save\",\n              onClick: () => setupSave(devcopycfg),\n              children: \"\\uC124\\uC815\\uC800\\uC7A5  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cont_save2\",\n              id: \"delete\",\n              onClick: () => setupDelete(devcopycfg),\n              children: \"\\uC124\\uC815\\uC0AD\\uC81C  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"\\uC124\\uC815\\uBCC0\\uACBD\\uC2DC \\uBAA8\\uB4E0\\uC790\\uB3D9\\uC81C\\uC5B4\\uAC00 \\uB2E4\\uC2DC \\uC2DC\\uC791\\uB429\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uC774\\uB984: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            defaultValue: devcopycfg.Name,\n            name: \"devname\",\n            onChange: inputonchangeHandler\n          }, devcopycfg.UniqID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC7A5\\uCE58\\uC885\\uB958 :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relaygroupbox\",\n            onChange: inputonchangeHandler,\n            children: devicetypelist.map((localState, index) => deviceradiobox(localState, devcopycfg.DevType))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n  function deviceradiobox(devtypeid, selecttype) {\n    let devicon = \"./image/devicon_\" + devtypeid + \".png\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relaybox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"deviceradio\",\n        defaultChecked: selecttype == devtypeid ? true : false,\n        id: devtypeid\n      }, devcopycfg.UniqID + devtypeid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: devicon,\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }, this);\n  }\n\n  function relayradiobox(relaynum, devicelist) {\n    let devname = \"사용안함\";\n\n    for (const dev of devicelist) {\n      if (relaynum == dev.UniqID) {\n        devname = dev.Name;\n        break;\n      }\n    }\n\n    console.log(\"devname:\" + devname + \" relaynum:\" + relaynum);\n    let relayname;\n\n    if (relaynum < 10) {\n      relayname = \"R-0\" + (relaynum + 1);\n    } else {\n      relayname = \"R-\" + (relaynum + 1);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relaybox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"relayradio\",\n        defaultChecked: false,\n        id: relaynum\n      }, relayname, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), \" \", relayname, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./image/relay.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: devname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  }\n\n  useEffect(() => {\n    let interval = null;\n    IndoorFarmAPI.getoutputstatus().then(devices => {\n      setUpdatedevice(devices);\n      relayseleted12(rlist12);\n      relayseleted24(rlist24);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dev_name\",\n      children: \"\\uB9B4\\uB808\\uC774\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relay_select\",\n      onChange: inputonchangeHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relaygroupbox\",\n        children: relaylist12.map((localState, index) => relayradiobox(localState, moutdevarray))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relaygroupbox\",\n        children: relaylist24.map((localState, index) => relayradiobox(localState, moutdevarray))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), Relayeditbox(mSelecteditem, moutdevarray)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Settingpage, \"yOzGt1UCeazfAP1vjw39m8Qdo6c=\");\n\n_c = Settingpage;\nexport default Settingpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settingpage\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/settingpage.js"],"names":["React","useState","useEffect","Outputdevice","IndoorFarmAPI","Settingpage","rlist12","rlist24","devcopycfg","relaylist12","relayseleted12","relaylist24","relayseleted24","mSelecteditem","relayeditselected","moutdevarray","setUpdatedevice","i","push","setupSave","mcfg","console","log","UniqID","Name","setDeviceconfigsetup","then","ret","setupDelete","DevType","OutDeviceTypeEnum","ODT_DELETE","inputonchangeHandler","e","target","name","value","checked","id","Number","Relayeditbox","myeditrelaynum","devicelist","devobj","dev","CreateDefulatDevice","Clonbyjsonobj","devicon","onofficon","devicetypelist","item","map","localState","index","deviceradiobox","devtypeid","selecttype","relayradiobox","relaynum","devname","relayname","interval","getoutputstatus","devices"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Outputdevice from \"../commonjs/outputdevice\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\n\r\n\r\n\r\n\r\n\r\nconst Settingpage = () => {\r\n  let rlist12 = [];\r\n  let rlist24 = [];\r\n  let devcopycfg;\r\n  const [relaylist12, relayseleted12] = useState([]);\r\n  const [relaylist24, relayseleted24] = useState([]);\r\n  const [mSelecteditem, relayeditselected] = useState(null);\r\n  const [moutdevarray, setUpdatedevice] = useState([]);\r\n\r\n  for (let i = 0; i < 12; i++) {\r\n  rlist12.push(i);\r\n}\r\nfor (let i = 12; i < 24; i++) {\r\n  rlist24.push(i);\r\n}\r\n\r\n  /*\r\n  for (let i = 1; i <= 12; i++) {\r\n      if(i<10)\r\n      {\r\n    rlist12.push(\"R-0\" +i);\r\n      }\r\n      else{\r\n        rlist12.push(\"R-\" + i);\r\n      }\r\n  }\r\n  for (let i = 13; i <= 24; i++) {\r\n    rlist24.push(\"R-\" + i);\r\n  }\r\n*/\r\nfunction setupSave(mcfg) {\r\n\r\n\r\n  console.log(\"setupSave uidd: \" + mcfg.UniqID +  \" name : \" +mcfg.Name);\r\n  IndoorFarmAPI.setDeviceconfigsetup(mcfg).then((ret) => {\r\n    console.log(\"setDeviceconfigsetup  uid: \" + ret);\r\n  });\r\n\r\n}\r\nfunction setupDelete(mcfg) {\r\n\r\n  mcfg.DevType = Outputdevice.OutDeviceTypeEnum.ODT_DELETE;\r\n  console.log(\"setupSave uidd: \" + mcfg.UniqID +  \" name : \" +mcfg.Name);\r\n  IndoorFarmAPI.setDeviceconfigsetup(mcfg).then((ret) => {\r\n    console.log(\"setDeviceconfigsetup  uid: \" + ret);\r\n  });\r\n\r\n}\r\n\r\n\r\n  \r\nfunction inputonchangeHandler(e) {\r\n    console.log(\"inputonchangeHandler : \" + e.target.name);\r\n\r\n    switch (e.target.name) {\r\n      case \"devname\":\r\n          devcopycfg.Name = e.target.value;\r\n            break;\r\n\r\n      case \"relayradio\":\r\n        if (e.target.checked === true)\r\n        {\r\n            relayeditselected( e.target.id);\r\n        }\r\n        \r\n        break;\r\n\r\n        case \"deviceradio\":\r\n          devcopycfg.DevType = e.target.value;\r\n          if (e.target.checked === true ) \r\n          {\r\n            devcopycfg.DevType = Number(e.target.id);\r\n\r\n            console.log(\"devcopycfg.DevType : \" + devcopycfg.DevType);\r\n          }\r\n          break;\r\n\r\n      \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction Relayeditbox(myeditrelaynum, devicelist) {\r\n    //const [misTimershow, selectcontrol] = useState(myeditcfg !=null && myeditcfg.istimer);\r\n    //console.log(\"Autocontroleditbox  misTimershow: \" + misTimershow);\r\n\r\n    \r\n    if (myeditrelaynum === null) {\r\n      return (<div></div>);\r\n    } else {\r\n      \r\n\r\n      let devobj=null;\r\n\r\n    for(const dev of devicelist)\r\n    {\r\n      if(myeditrelaynum == dev.UniqID )\r\n      {\r\n        devobj=dev;\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    //설정된 object가 없으면 새로생성\r\n    if(devobj ===null)\r\n    {\r\n      devobj =  Outputdevice.CreateDefulatDevice(myeditrelaynum);\r\n    }\r\n\r\n    devcopycfg =  Outputdevice.Clonbyjsonobj(devobj);\r\n\r\n\r\n\r\n\r\n    let devicon = \"./image/devicon_\" +devcopycfg.DevType+\".png\";\r\n    let onofficon = \"./image/\" +  \"on.png\";\r\n\r\n    let devicetypelist=[];\r\n\r\n    for (let item in Outputdevice.OutDeviceTypeEnum) {\r\n      if (Outputdevice.OutDeviceTypeEnum[item] != Outputdevice.OutDeviceTypeEnum.ODT_DELETE) \r\n      {\r\n       // console.log(Outputdevice.OutDeviceTypeEnum[item]);\r\n        devicetypelist.push(Outputdevice.OutDeviceTypeEnum[item]);\r\n      }\r\n  }\r\n\r\n\r\n    \r\n\r\n\r\n      return (\r\n      <div className=\"relaygroupbox\">\r\n                \r\n          \r\n                <div className=\"out_con\">\r\n                <div className=\"out_name\"> <img src={devicon} className=\"icon\" />   {devcopycfg.Name}    </div>\r\n            <div className=\"out_value\"> {}  </div>\r\n\r\n            </div>\r\n            <div className=\"outportsetupbox\" >\r\n            <h4>출력장치를 설정합니다.\r\n            \r\n            <button className = \"cont_save2\"  id=\"save\" onClick={() => setupSave(devcopycfg)} >설정저장  </button>\r\n            <button className = \"cont_save2\"  id=\"delete\" onClick={() => setupDelete(devcopycfg)}>설정삭제  </button>\r\n            <h5>설정변경시 모든자동제어가 다시 시작됩니다.</h5>\r\n            </h4>\r\n            \r\n                <label>이름: </label>\r\n            <input type=\"text\" key={ devcopycfg.UniqID} defaultValue={devcopycfg.Name} name=\"devname\" onChange={inputonchangeHandler} /> \r\n            <h4>장치종류 :</h4>\r\n              \r\n            <div className=\"relaygroupbox\"  onChange={inputonchangeHandler}>\r\n            {devicetypelist.map((localState, index) => deviceradiobox(localState, devcopycfg.DevType))}\r\n            </div>\r\n\r\n              </div>\r\n\r\n             </div>\r\n          );\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nfunction deviceradiobox(devtypeid, selecttype) {\r\n\r\n  let devicon = \"./image/devicon_\" + devtypeid+ \".png\";\r\n\r\n  return (\r\n    <div className=\"relaybox\">\r\n      <input type=\"radio\" key={devcopycfg.UniqID+ devtypeid} name=\"deviceradio\" defaultChecked={selecttype==devtypeid? true:false} id={devtypeid} /> \r\n      <img src={devicon}  className=\"icon\"/> \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n  function relayradiobox(relaynum, devicelist) {\r\n\r\n    let devname=\"사용안함\";\r\n    for(const dev of devicelist)\r\n    {\r\n      \r\n\r\n      if(relaynum ==dev.UniqID )\r\n      {\r\n        devname=dev.Name;\r\n        break;\r\n      }\r\n\r\n    }\r\n    console.log(\"devname:\" + devname+ \" relaynum:\" +relaynum);\r\n\r\n    let relayname;\r\n    if(relaynum<10)\r\n    {\r\n      relayname = \"R-0\" +(relaynum+1);\r\n    }\r\n    else{\r\n      relayname = \"R-\" +(relaynum+1);\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n      <div className=\"relaybox\">\r\n        <input type=\"radio\" key={relayname} name=\"relayradio\" defaultChecked={false} id={relaynum} /> {relayname}\r\n        <img src=\"./image/relay.png\" /> \r\n        <div>\r\n        <label>{devname}</label>\r\n        </div>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    \r\n    IndoorFarmAPI.getoutputstatus().then((devices) => {\r\n      setUpdatedevice(devices);\r\n      relayseleted12(rlist12);\r\n      relayseleted24(rlist24);\r\n\r\n    });\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"dev_name\">릴레이를 선택하세요.</div>\r\n      <div className=\"relay_select\" onChange={inputonchangeHandler}>\r\n      <div className=\"relaygroupbox\">\r\n        {relaylist12.map((localState, index) => relayradiobox(localState,moutdevarray))}\r\n        </div>\r\n        <div className=\"relaygroupbox\">\r\n        {relaylist24.map((localState, index) => relayradiobox(localState,moutdevarray))}\r\n        </div>\r\n        \r\n    </div>\r\n      {Relayeditbox(mSelecteditem,moutdevarray)}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settingpage;\r\n"]},"metadata":{},"sourceType":"module"}