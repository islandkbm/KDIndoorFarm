{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\outputdevicedisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport IndoorFarmAPI from \"./indoorfarmapi\";\nimport manualMessage from \"./manualmessage\";\nimport Outputdevice from \"./commonjs/outputdevice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction manualonoff(channel, onoff) {\n  if (onoff == true) {\n    console.log(\" manualonoff  on channel : \" + channel);\n  } else {\n    console.log(\" manualonoff  off channel : \" + channel);\n  }\n\n  const mdev = new manualMessage();\n  mdev.hardwareChannel = channel;\n  mdev.isonoff = onoff;\n  IndoorFarmAPI.setmanualonoff(mdev);\n}\n\nfunction outputdevbox(mydata, isonlystatus) {\n  console.log(\"outputdevbox 01 : \" + isonlystatus);\n  let ismanual;\n\n  if (mydata.Status === Outputdevice.OPStatus.OPS_Local) {\n    ismanual = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: \"\\uD604\\uC7A5\\uC81C\\uC5B4\\uC911 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  } else if (mydata.Autocontrolid == 0) {\n    if (isonlystatus == true) {\n      ismanual = /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \"\\uC218\\uB3D9\\uC81C\\uC5B4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 18\n      }, this);\n    } else {\n      ismanual = /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => manualonoff(mydata.Channel, true),\n          children: \"\\uC218\\uB3D9 On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => manualonoff(mydata.Channel, false),\n          children: \"\\uC218\\uB3D9 Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 84\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    ismanual = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: \"\\uC790\\uB3D9\\uC81C\\uC5B4\\uC911 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outputbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: mydata.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [mydata.Status, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), ismanual]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Outputdevicedisplay(updateintervalmsec, isonlystatus) {\n  _s();\n\n  console.log(\"Outputdevicedisplay 01\");\n  const [moutdevarray, setUpdate] = useState([]);\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      IndoorFarmAPI.getoutputstatus().then(devices => {\n        setUpdate(devices);\n      });\n    }, updateintervalmsec);\n    return () => clearInterval(interval);\n  }, [moutdevarray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outputtable\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"output display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), moutdevarray.map((localState, index) => outputdevbox(localState, isonlystatus))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Outputdevicedisplay, \"cEnadcLmD3zissn0URMn1MNxz64=\");\n\n_c = Outputdevicedisplay;\nexport default Outputdevicedisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"Outputdevicedisplay\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/outputdevicedisplay.js"],"names":["React","Component","useState","useEffect","IndoorFarmAPI","manualMessage","Outputdevice","manualonoff","channel","onoff","console","log","mdev","hardwareChannel","isonoff","setmanualonoff","outputdevbox","mydata","isonlystatus","ismanual","Status","OPStatus","OPS_Local","Autocontrolid","Channel","Name","Outputdevicedisplay","updateintervalmsec","moutdevarray","setUpdate","interval","setInterval","getoutputstatus","then","devices","clearInterval","map","localState","index"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport IndoorFarmAPI from \"./indoorfarmapi\";\r\nimport manualMessage from \"./manualmessage\";\r\nimport Outputdevice from \"./commonjs/outputdevice\";\r\n\r\nfunction manualonoff(channel, onoff) {\r\n  if (onoff == true) {\r\n    console.log(\" manualonoff  on channel : \" + channel);\r\n  } else {\r\n    console.log(\" manualonoff  off channel : \" + channel);\r\n  }\r\n\r\n  const mdev = new manualMessage();\r\n  mdev.hardwareChannel = channel;\r\n  mdev.isonoff = onoff;\r\n\r\n  IndoorFarmAPI.setmanualonoff(mdev);\r\n}\r\n\r\nfunction outputdevbox(mydata, isonlystatus) {\r\n  console.log(\"outputdevbox 01 : \" + isonlystatus);\r\n  let ismanual;\r\n\r\n  if (mydata.Status === Outputdevice.OPStatus.OPS_Local) {\r\n    ismanual = <ul>현장제어중 </ul>;\r\n  } else if (mydata.Autocontrolid == 0) {\r\n    if (isonlystatus == true) {\r\n      ismanual = <ul>수동제어</ul>;\r\n    } else {\r\n      ismanual = (\r\n        <ul>\r\n          <button onClick={() => manualonoff(mydata.Channel, true)}>수동 On</button> <button onClick={() => manualonoff(mydata.Channel, false)}>수동 Off</button>\r\n        </ul>\r\n      );\r\n    }\r\n  } else {\r\n    ismanual = <ul>자동제어중 </ul>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"outputbox\">\r\n      <ul>{mydata.Name}</ul>\r\n      <ul>{mydata.Status} </ul>\r\n      {ismanual}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Outputdevicedisplay(updateintervalmsec,isonlystatus) {\r\n  console.log(\"Outputdevicedisplay 01\");\r\n\r\n  const [moutdevarray, setUpdate] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    interval = setInterval(() => {\r\n      IndoorFarmAPI.getoutputstatus().then((devices) => {\r\n        setUpdate(devices);\r\n      });\r\n    }, updateintervalmsec);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [moutdevarray]);\r\n\r\n  return (\r\n    <div className=\"outputtable\">\r\n      <h1>output display</h1>\r\n      {moutdevarray.map((localState, index) => outputdevbox(localState, isonlystatus))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Outputdevicedisplay;\r\n"]},"metadata":{},"sourceType":"module"}