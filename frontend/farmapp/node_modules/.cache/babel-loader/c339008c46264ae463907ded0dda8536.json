{"ast":null,"code":"import _slicedToArray from\"H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Sensordisplay from\"../sensordisplay\";import IndoorFarmAPI from\"../indoorfarmapi\";import{LineChart,ResponsiveContainer,Line,YAxis,XAxis,CartesianGrid,Tooltip,Legend}from'recharts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MyLineRechart(){var data=[{\"name\":\"Jan 2019\",\"Product A\":3432,\"Procuct B\":2342},{\"name\":\"Feb 2019\",\"Product A\":2342,\"Procuct B\":3246},{\"name\":\"Mar 2019\",\"Product A\":4565,\"Procuct B\":4556},{\"name\":\"Apr 2019\",\"Product A\":6654,\"Procuct B\":4465},{\"name\":\"May 2019\",\"Product A\":8765,\"Procuct B\":4553}];return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",children:/*#__PURE__*/_jsxs(LineChart,{height:250,data:data,margin:{top:5,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"Product A\",stroke:\"#0095FF\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"Procuct B\",stroke:\"#FF0000\"})]})});}var Sensorpage=function Sensorpage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),msensorsarray=_useState2[0],setSensors=_useState2[1];useEffect(function(){var interval=null;interval=setInterval(function(){IndoorFarmAPI.getsensordatas().then(function(sensors){setSensors(sensors);});},1000);return function(){return clearInterval(interval);};},[msensorsarray]);return/*#__PURE__*/_jsxs(\"div\",{children:[Sensordisplay(msensorsarray,true),/*#__PURE__*/_jsx(\"div\",{className:\"chartcontainer\",children:MyLineRechart()})]});};export default Sensorpage;","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/sensorpage.js"],"names":["React","useState","useEffect","Sensordisplay","IndoorFarmAPI","LineChart","ResponsiveContainer","Line","YAxis","XAxis","CartesianGrid","Tooltip","Legend","MyLineRechart","data","top","right","left","bottom","Sensorpage","msensorsarray","setSensors","interval","setInterval","getsensordatas","then","sensors","clearInterval"],"mappings":"oJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CAIA,OAASC,SAAT,CAAoBC,mBAApB,CAAwCC,IAAxC,CAA8CC,KAA9C,CAAqDC,KAArD,CAA4DC,aAA5D,CAA2EC,OAA3E,CAAoFC,MAApF,KAAkG,UAAlG,C,wFAEA,QAASC,CAAAA,aAAT,EACA,CAEI,GAAMC,CAAAA,IAAI,CAAG,CACT,CACI,OAAQ,UADZ,CAEI,YAAa,IAFjB,CAGI,YAAa,IAHjB,CADS,CAMT,CACI,OAAQ,UADZ,CAEI,YAAa,IAFjB,CAGI,YAAa,IAHjB,CANS,CAWT,CACI,OAAQ,UADZ,CAEI,YAAa,IAFjB,CAGI,YAAa,IAHjB,CAXS,CAgBT,CACI,OAAQ,UADZ,CAEI,YAAa,IAFjB,CAGI,YAAa,IAHjB,CAhBS,CAqBT,CACI,OAAQ,UADZ,CAEI,YAAa,IAFjB,CAGI,YAAa,IAHjB,CArBS,CAAb,CA6BI,mBACE,KAAC,mBAAD,EACF,KAAK,CAAC,MADJ,uBAGE,MAAC,SAAD,EAAY,MAAM,CAAE,GAApB,CAAyB,IAAI,CAAEA,IAA/B,CACI,MAAM,CAAE,CAAEC,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,EAAjB,CAAqBC,IAAI,CAAE,EAA3B,CAA+BC,MAAM,CAAE,CAAvC,CADZ,wBAEI,KAAC,aAAD,EAAe,eAAe,CAAC,KAA/B,EAFJ,cAGI,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EAHJ,cAII,KAAC,KAAD,IAJJ,cAKI,KAAC,OAAD,IALJ,cAMI,KAAC,MAAD,IANJ,cAOI,KAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,WAA9B,CAA0C,MAAM,CAAC,SAAjD,EAPJ,cAQI,KAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,WAA9B,CAA0C,MAAM,CAAC,SAAjD,EARJ,GAHF,EADF,CAiBP,CAGD,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAGrB,cAAoClB,QAAQ,CAAC,EAAD,CAA5C,wCAAOmB,aAAP,eAAsBC,UAAtB,eAEAnB,SAAS,CAAC,UAAM,CACd,GAAIoB,CAAAA,QAAQ,CAAG,IAAf,CAEAA,QAAQ,CAAGC,WAAW,CAAC,UAAM,CAC3BnB,aAAa,CAACoB,cAAd,GAA+BC,IAA/B,CAAoC,SAACC,OAAD,CAAa,CAC/CL,UAAU,CAACK,OAAD,CAAV,CACD,CAFD,EAGD,CAJqB,CAInB,IAJmB,CAAtB,CAMA,MAAO,kBAAMC,CAAAA,aAAa,CAACL,QAAD,CAAnB,EAAP,CACD,CAVQ,CAUN,CAACF,aAAD,CAVM,CAAT,CAaA,mBAEQ,uBACGjB,aAAa,CAACiB,aAAD,CAAe,IAAf,CADhB,cAGE,YAAK,SAAS,CAAC,gBAAf,UACGP,aAAa,EADhB,EAHF,GAFR,CAWH,CA7BD,CA+BA,cAAeM,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Sensordisplay from \"../sensordisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\n\r\n\r\n\r\nimport { LineChart, ResponsiveContainer,Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nfunction MyLineRechart()\r\n{\r\n\r\n    const data = [\r\n        {\r\n            \"name\": \"Jan 2019\",\r\n            \"Product A\": 3432,\r\n            \"Procuct B\": 2342\r\n        },\r\n        {\r\n            \"name\": \"Feb 2019\",\r\n            \"Product A\": 2342,\r\n            \"Procuct B\": 3246\r\n        },\r\n        {\r\n            \"name\": \"Mar 2019\",\r\n            \"Product A\": 4565,\r\n            \"Procuct B\": 4556\r\n        },\r\n        {\r\n            \"name\": \"Apr 2019\",\r\n            \"Product A\": 6654,\r\n            \"Procuct B\": 4465\r\n        },\r\n        {\r\n            \"name\": \"May 2019\",\r\n            \"Product A\": 8765,\r\n            \"Procuct B\": 4553\r\n        }\r\n    ];\r\n\r\n    \r\n        return (\r\n          <ResponsiveContainer\r\n        width=\"100%\"\r\n      >\r\n            <LineChart  height={250} data={data}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"Product A\" stroke=\"#0095FF\" />\r\n                <Line type=\"monotone\" dataKey=\"Procuct B\" stroke=\"#FF0000\" />\r\n            </LineChart>\r\n            </ResponsiveContainer>\r\n        );\r\n    \r\n}\r\n\r\n\r\nconst Sensorpage = () => {\r\n\r\n\r\n    const [msensorsarray, setSensors] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      let interval = null;\r\n  \r\n      interval = setInterval(() => {\r\n        IndoorFarmAPI.getsensordatas().then((sensors) => {\r\n          setSensors(sensors);\r\n        });\r\n      }, 1000);\r\n  \r\n      return () => clearInterval(interval);\r\n    }, [msensorsarray]);\r\n\r\n    \r\n    return(\r\n        \r\n            <div>\r\n              {Sensordisplay(msensorsarray,true)}\r\n\r\n              <div className=\"chartcontainer\">\r\n                {MyLineRechart()}\r\n                </div>\r\n              </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Sensorpage;"]},"metadata":{},"sourceType":"module"}