{"ast":null,"code":"import firebase from \"firebase/app\";\nimport { notify } from \"./notify.js\";\nconst ref = firebase.database().ref();\nvar now = new Date();\n\nasync function saveLog(u_Email) {\n  var today = now.getFullYear() + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate();\n  var time = now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\n  var n_Time = today + \" \" + time;\n  new Promise((resolve, reject) => {\n    firebase.database().ref('Log/userLogin/' + n_Time).update({\n      email: u_Email\n    });\n    resolve();\n  });\n}\n\nasync function loadDevce(uid) {\n  var dataDevices = new Array();\n  return new Promise((resolve, reject) => {\n    ref.child(\"users\").child(uid).child(\"devices\").get().then(snapshot => {\n      if (snapshot.exists()) {\n        for (const i of snapshot.val()) {\n          dataDevices.push([i.keyname, i.key]);\n        }\n\n        console.log(dataDevices);\n        resolve(dataDevices);\n      } else {\n        resolve(null);\n      }\n    }).catch(error => {\n      notify(\"기기정보를 불러오는 도중 에러가 발생했습니다.\\n 에러코드: \" + error);\n      resolve(null);\n    });\n  });\n}\n\nfunction logDevice(m_key, m_email) {\n  var today = now.getFullYear() + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate();\n  var time = now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\n  var n_Time = today + \" \" + time;\n  return new Promise((resolve, reject) => {\n    firebase.database().ref('Devices/SIRRI/' + m_key + '/LOG/' + n_Time + '/').update({\n      email: m_email\n    });\n    resolve();\n  });\n}\n\nfunction popupGraph(deviceAddr_path) {\n  return new Promise((resolve, reject) => {\n    ref.child(\"Devices\").child(\"SIRRI\").child(deviceAddr_path[0]).child(deviceAddr_path[1]).child(deviceAddr_path[2]).child(deviceAddr_path[3]).child(deviceAddr_path[4]).child(deviceAddr_path[5]).child(deviceAddr_path[6]).child(\"INFO\").get().then(snapshot => {\n      resolve(snapshot.val().graphUrl);\n    }).catch(() => {\n      resolve(\"not yet\");\n    });\n  });\n}\n\nfunction popupRTVideo(deviceAddr_path) {\n  return new Promise((resolve, reject) => {\n    ref.child(\"Devices\").child(\"SIRRI\").child(deviceAddr_path[0]).child(deviceAddr_path[1]).child(deviceAddr_path[2]).child(deviceAddr_path[3]).child(deviceAddr_path[4]).child(deviceAddr_path[5]).child(deviceAddr_path[6]).child(\"INFO\").get().then(snapshot => {\n      resolve(snapshot.val().cameraUrl);\n    }).catch(() => {\n      resolve(\"not yet\");\n    });\n  });\n}\n\nasync function deleteDevice(uid, m_name, m_email, d_num) {\n  var dn = d_num;\n  var devices;\n  return new Promise((resolve, reject) => {\n    ref.child(\"users\").child(uid).child(\"devices\").get().then(snapshot => {\n      if (snapshot.exists()) {\n        var saveData = snapshot.val();\n        var temp = snapshot.val().length;\n\n        if (dn >= temp) {\n          resolve(null);\n        } else if (dn < temp) {\n          delete saveData[dn];\n          devices = saveData.filter(element => true);\n          new Promise((resolve2, reject2) => {\n            firebase.database().ref('users/' + uid).set({\n              userName: m_name,\n              email: m_email,\n              devices\n            });\n            resolve2();\n          });\n          resolve(uid);\n        }\n      } else {\n        resolve(null);\n      }\n    });\n  });\n}\n\nfunction registOrModify(uid, email, name, dNum, keyName, key) {\n  firebase.database().ref('users/' + uid + '/').update({\n    userName: name,\n    email: email\n  });\n  var temp_key = key.replace(/ /g, \"\");\n  new Promise((resolve, reject) => {\n    if (dNum == \"\") {\n      ref.child(\"users\").child(uid).child(\"devices\").get().then(snapshot => {\n        if (snapshot.exists()) {\n          var dn = snapshot.val().length;\n          firebase.database().ref('users/' + uid + \"/devices/\" + dn + \"/\").update({\n            key: temp_key,\n            keyname: keyName\n          }, error => {\n            if (error) {\n              notify(error);\n            } else {\n              notify(\"디바이스 정보를 추가 했습니다.\");\n            }\n          });\n        } else {\n          firebase.database().ref('users/' + uid + \"/devices/0/\").update({\n            key: temp_key,\n            keyname: keyName\n          });\n        }\n\n        notify(\"디바이스 정보를 추가 했습니다.\");\n      });\n    } else {\n      ref.child(\"users\").child(uid).child(\"devices\").get().then(snapshot => {\n        if (snapshot.exists()) {\n          if (dNum >= snapshot.val().length) {\n            notify(\"수정할 디바이스를 찾을 수 없습니다. 확인 후 다시 시도해주십시오.\");\n          } else {\n            var device = \"/devices/\" + dNum + \"/\";\n            firebase.database().ref('users/' + uid + device).update({\n              key: temp_key,\n              keyname: keyName\n            });\n            notify(\"디바이스 정보를 수정했습니다.\");\n          }\n        } else {\n          notify(\"디바이스 정보를 수정하는 도중 에러가 발생했습니다.\");\n        }\n      });\n    }\n  });\n}\n\nexport { ref, saveLog, loadDevce, logDevice, popupGraph, popupRTVideo, deleteDevice, registOrModify };","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/firebaseRTDB.js"],"names":["firebase","notify","ref","database","now","Date","saveLog","u_Email","today","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","n_Time","Promise","resolve","reject","update","email","loadDevce","uid","dataDevices","Array","child","get","then","snapshot","exists","i","val","push","keyname","key","console","log","catch","error","logDevice","m_key","m_email","popupGraph","deviceAddr_path","graphUrl","popupRTVideo","cameraUrl","deleteDevice","m_name","d_num","dn","devices","saveData","temp","length","filter","element","resolve2","reject2","set","userName","registOrModify","name","dNum","keyName","temp_key","replace","device"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\r\nimport { notify } from \"./notify.js\";\r\n\r\nconst ref = firebase.database().ref();\r\n\r\nvar now = new Date();\r\n\r\nasync function saveLog(u_Email) {\r\n    var today = now.getFullYear() + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate();\r\n    var time = now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\r\n    var n_Time = today + \" \" + time;\r\n\r\n    new Promise((resolve, reject) => {\r\n        firebase.database().ref('Log/userLogin/' + n_Time).update({\r\n            email: u_Email\r\n        })\r\n        resolve();\r\n    });\r\n}\r\n\r\nasync function loadDevce(uid) {\r\n    var dataDevices = new Array();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        ref.child(\"users\").child(uid).child(\"devices\").get().then((snapshot) => {\r\n            if (snapshot.exists()) {\r\n                for (const i of snapshot.val()) {\r\n                    dataDevices.push([i.keyname, i.key]);\r\n                }\r\n                console.log(dataDevices);\r\n                resolve(dataDevices);\r\n            } else {\r\n                resolve(null);\r\n            }\r\n        }).catch((error) => {\r\n            notify(\"기기정보를 불러오는 도중 에러가 발생했습니다.\\n 에러코드: \" + error);\r\n            resolve(null);\r\n        });\r\n    });\r\n}\r\n\r\nfunction logDevice(m_key, m_email) {\r\n    var today = now.getFullYear() + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate();\r\n    var time = now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\r\n    var n_Time = today + \" \" + time;\r\n\r\n    return new Promise((resolve, reject) => {\r\n        firebase.database().ref('Devices/SIRRI/' + m_key + '/LOG/' + n_Time + '/').update({\r\n            email: m_email\r\n        });\r\n        resolve();\r\n    });\r\n}\r\n\r\nfunction popupGraph(deviceAddr_path) {\r\n    return new Promise((resolve, reject) => {\r\n        ref.child(\"Devices\").child(\"SIRRI\").child(deviceAddr_path[0]).child(deviceAddr_path[1]).child(deviceAddr_path[2]).child(deviceAddr_path[3]).child(deviceAddr_path[4]).child(deviceAddr_path[5]).child(deviceAddr_path[6]).child(\"INFO\").get().then((snapshot) => {\r\n            resolve(snapshot.val().graphUrl);\r\n        }).catch(() => {\r\n            resolve(\"not yet\");\r\n        });\r\n    })\r\n}\r\n\r\nfunction popupRTVideo(deviceAddr_path) {\r\n    return new Promise((resolve, reject) => {\r\n        ref.child(\"Devices\").child(\"SIRRI\").child(deviceAddr_path[0]).child(deviceAddr_path[1]).child(deviceAddr_path[2]).child(deviceAddr_path[3]).child(deviceAddr_path[4]).child(deviceAddr_path[5]).child(deviceAddr_path[6]).child(\"INFO\").get().then((snapshot) => {\r\n            resolve(snapshot.val().cameraUrl);\r\n        }).catch(() => {\r\n            resolve(\"not yet\");\r\n        });\r\n    });\r\n}\r\n\r\nasync function deleteDevice(uid, m_name, m_email, d_num) {\r\n    var dn = d_num;\r\n    var devices;\r\n\r\n    return new Promise((resolve, reject) => {\r\n        ref.child(\"users\").child(uid).child(\"devices\").get().then((snapshot) => {\r\n            if (snapshot.exists()) {\r\n                var saveData = snapshot.val();\r\n                var temp = snapshot.val().length;\r\n                if (dn >= temp) {\r\n                    resolve(null);\r\n                } else if (dn < temp) {\r\n                    delete saveData[dn];\r\n                    devices = saveData.filter((element) => true);\r\n\r\n                    new Promise((resolve2, reject2) => {\r\n                        firebase.database().ref('users/' + uid).set({\r\n                            userName: m_name,\r\n                            email: m_email,\r\n                            devices\r\n                        });\r\n                        resolve2();\r\n                    });\r\n                    resolve(uid);\r\n                }\r\n            } else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    });\r\n\r\n}\r\n\r\nfunction registOrModify(uid, email, name, dNum, keyName, key) {\r\n    firebase.database().ref('users/' + uid + '/').update({\r\n        userName: name,\r\n        email: email\r\n    });\r\n\r\n    var temp_key = key.replace(/ /g, \"\");\r\n    new Promise((resolve, reject) =>{\r\n        if (dNum == \"\") {\r\n            ref.child(\"users\").child(uid).child(\"devices\").get().then((snapshot) => {\r\n                if (snapshot.exists()) {\r\n                    var dn = snapshot.val().length;\r\n                    firebase.database().ref('users/' + uid + \"/devices/\" + dn + \"/\").update({\r\n                        key: temp_key,\r\n                        keyname: keyName\r\n                    }, (error) => {\r\n                        if (error) {\r\n                            notify(error);\r\n                        } else {\r\n                            notify(\"디바이스 정보를 추가 했습니다.\");\r\n                        }\r\n                      });\r\n                } else {\r\n                    firebase.database().ref('users/' + uid + \"/devices/0/\").update({\r\n                        key: temp_key,\r\n                        keyname: keyName\r\n                    });\r\n                }\r\n                notify(\"디바이스 정보를 추가 했습니다.\");\r\n            });\r\n        } else {\r\n            ref.child(\"users\").child(uid).child(\"devices\").get().then((snapshot) => {\r\n                if (snapshot.exists()) {\r\n                    if (dNum >= snapshot.val().length) {\r\n                        notify(\"수정할 디바이스를 찾을 수 없습니다. 확인 후 다시 시도해주십시오.\");\r\n                    } else {\r\n                        var device = \"/devices/\" + dNum + \"/\";\r\n                        firebase.database().ref('users/' + uid + device).update({\r\n                            key: temp_key,\r\n                            keyname: keyName\r\n                        });\r\n                        notify(\"디바이스 정보를 수정했습니다.\");\r\n                    }\r\n                } else {\r\n                    notify(\"디바이스 정보를 수정하는 도중 에러가 발생했습니다.\");\r\n                }\r\n            });\r\n        }\r\n    })\r\n}\r\n\r\nexport {\r\n    ref,\r\n    saveLog,\r\n    loadDevce,\r\n    logDevice,\r\n    popupGraph,\r\n    popupRTVideo,\r\n    deleteDevice,\r\n    registOrModify\r\n}"]},"metadata":{},"sourceType":"module"}