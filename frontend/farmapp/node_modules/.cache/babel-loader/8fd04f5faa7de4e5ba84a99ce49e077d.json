{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport './App.css';\nimport { Component } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport IndoorFarmAPI from \"./indoorfarmapi\";\nimport manualMessage from \"./manualmessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OutputBox extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outputbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.data.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [this.props.data.Status, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Outputdisplaytest(updateintervalmsec) {\n  _s();\n\n  console.log(\"Outputdisplaytest 01\");\n  const [moutdevarray, setUpdate] = useState([]);\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      IndoorFarmAPI.getoutputstatus().then(devices => {\n        setUpdate(devices);\n      });\n    }, updateintervalmsec);\n    return () => clearInterval(interval);\n  }, [moutdevarray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outputtable\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"output display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), moutdevarray.map((localState, index) => /*#__PURE__*/_jsxDEV(OutputBox, {\n      data: localState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Outputdisplaytest, \"cEnadcLmD3zissn0URMn1MNxz64=\");\n\n_c = Outputdisplaytest;\n\nclass SensorBox extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensorbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.data.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [this.props.data.valuestring, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Sensordisplaytest(updateintervalmsec) {\n  _s2();\n\n  console.log(\"Sensordisplaytest 01\");\n  const [msensorsarray, setSensors] = useState([]);\n  useEffect(() => {\n    let interval = null;\n    interval = setInterval(() => {\n      IndoorFarmAPI.getsensordatas().then(sensors => {\n        setSensors(sensors);\n      });\n    }, updateintervalmsec);\n    return () => clearInterval(interval);\n  }, [msensorsarray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensortatble\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"sensor display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), msensorsarray.map((localState, index) => /*#__PURE__*/_jsxDEV(SensorBox, {\n      data: localState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Sensordisplaytest, \"8k2h8u+a4XKCO/7kOqR+GU+4gDU=\");\n\n_c2 = Sensordisplaytest;\n\nfunction manualonoff(channel, onoff) {\n  if (onoff == true) {\n    console.log(\" manualonoff  on channel : \" + channel);\n  } else {\n    console.log(\" manualonoff  off channel : \" + channel);\n  }\n\n  const mdev = new manualMessage();\n  mdev.hardwareChannel = channel;\n  mdev.isonoff = onoff;\n  IndoorFarmAPI.setmanualonoff(mdev);\n}\n\nfunction App() {\n  _s3();\n\n  const [hwchannel, sethwchannel] = useState(0);\n\n  function handleChange(e) {\n    sethwchannel(e.target.value);\n    console.log(hwchannel);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"channel :\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: handleChange,\n      min: \"0\",\n      max: \"23\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => manualonoff(hwchannel, true),\n      children: \"On\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => manualonoff(hwchannel, false),\n      children: \"Off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensorbocck\",\n      children: Sensordisplaytest(2000)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(App, \"QrP9NYAxavy14eldYaSMPbPDAG8=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Outputdisplaytest\");\n$RefreshReg$(_c2, \"Sensordisplaytest\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/App.js"],"names":["Component","React","useState","useEffect","IndoorFarmAPI","manualMessage","OutputBox","render","props","data","Name","Status","Outputdisplaytest","updateintervalmsec","console","log","moutdevarray","setUpdate","interval","setInterval","getoutputstatus","then","devices","clearInterval","map","localState","index","SensorBox","valuestring","Sensordisplaytest","msensorsarray","setSensors","getsensordatas","sensors","manualonoff","channel","onoff","mdev","hardwareChannel","isonoff","setmanualonoff","App","hwchannel","sethwchannel","handleChange","e","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Component } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport IndoorFarmAPI from \"./indoorfarmapi\";\nimport manualMessage from \"./manualmessage\";\n\n\n\n\n\n\n\nclass OutputBox extends Component {\n  render() {\n    return (\n      <div className=\"outputbox\">\n        <ul>{this.props.data.Name}</ul>\n        <ul>{this.props.data.Status} </ul>\n      </div>\n    );\n  }\n}\n\nfunction Outputdisplaytest(updateintervalmsec) {\n  console.log(\"Outputdisplaytest 01\");\n\n  \n\n  \n  const [moutdevarray, setUpdate] = useState([]);\n\n  useEffect(() => {\n    let interval = null;\n\n    interval = setInterval(() => {\n      IndoorFarmAPI.getoutputstatus().then((devices) => {\n        setUpdate(devices);\n      });\n\n \n\n    }, updateintervalmsec);\n\n    return () => clearInterval(interval);\n  }, [moutdevarray]);\n\n  return (\n    <div className=\"outputtable\">\n      <h1>output display</h1>\n      {moutdevarray.map((localState, index) => (\n        <OutputBox data={localState} />\n      ))}\n    </div>\n  );\n}\n\n\n\n\n\n\nclass SensorBox extends Component {\n  render() {\n    return (\n      <div className=\"sensorbox\">\n        <ul>{this.props.data.Name}</ul>\n        <ul>{this.props.data.valuestring} </ul>\n      </div>\n    );\n  }\n}\n\nfunction Sensordisplaytest(updateintervalmsec) {\n  console.log(\"Sensordisplaytest 01\");\n\n  \n\n  \n  const [msensorsarray, setSensors] = useState([]);\n\n  useEffect(() => {\n    let interval = null;\n\n    interval = setInterval(() => {\n      IndoorFarmAPI.getsensordatas().then((sensors) => {\n        setSensors(sensors);\n      });\n\n \n\n    }, updateintervalmsec);\n\n    return () => clearInterval(interval);\n  }, [msensorsarray]);\n\n  return (\n    <div className=\"sensortatble\">\n      <h1>sensor display</h1>\n      {msensorsarray.map((localState, index) => (\n        <SensorBox data={localState} />\n      ))}\n    </div>\n  );\n}\n\n\n\nfunction manualonoff(channel, onoff) {\n    \n\n  if(onoff ==true)\n  {\n    console.log(\" manualonoff  on channel : \" + channel);\n  }else{\n    console.log(\" manualonoff  off channel : \" + channel);\n  }\n  \n  const mdev = new manualMessage();\n  mdev.hardwareChannel = channel;\n  mdev.isonoff = onoff;\n\n\n  IndoorFarmAPI.setmanualonoff(mdev);\n  \n\n\n}\n\n\nfunction App() {\n\n  const [hwchannel, sethwchannel] = useState(0);\n  function handleChange(e) {\n    sethwchannel( e.target.value);\n    console.log(hwchannel);\n  }\n\n  \n  return (\n    <div className=\"App\">\n\nchannel : \n      <input type=\"number\" onChange ={handleChange} min=\"0\" max=\"23\"  />\n\n      <button onClick={()=>manualonoff(hwchannel,true)}>On</button>\n      <button onClick={()=>manualonoff(hwchannel,false)}>Off</button>\n\n\n      <div className=\"sensorbocck\">\n\n\n\n{Sensordisplaytest(2000)}\n</div>\n\n\n      <header className=\"App-header\">\n        \n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}