{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\pages\\\\loginpage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport myGlobalvalues from \"../myGlobal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst crypto = require('crypto');\n\nconst Loginpage = props => {\n  let loginid;\n  let loginpw;\n  let logintype;\n  console.log(\"Loginpage  :\" + props.Islogin);\n  console.log(\"Loginpage islocal :\" + myGlobalvalues.islocal);\n\n  if (myGlobalvalues.islocal === false) {\n    logintype = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: logingoogle,\n        children: \" \\uAD6C\\uAE00\\uB85C\\uADF8\\uC778 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: loginkakao,\n        children: \" \\uCE74\\uCE74\\uC624\\uD1A1\\uB85C\\uADF8\\uC778 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: loginbuttonHandler,\n        children: \" \\uD68C\\uC6D0\\uAC00\\uC785 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this);\n  } else {\n    logintype = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uAC04\\uD3B8\\uB85C\\uADF8\\uC778:  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC554\\uD638:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"inputloginpw\",\n          onChange: inputonchangeHandler\n        }, \"1234\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          onClick: loginbuttonHandler,\n          children: \" \\uB85C\\uADF8\\uC778 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this);\n  }\n\n  function inputonchangeHandler(e) {\n    console.log(\"inputonchangeHandler : \" + e.target.name);\n\n    switch (e.target.name) {\n      case \"inputloginid\":\n        loginid = e.target.value;\n        break;\n\n      case \"inputloginpw\":\n        loginpw = e.target.value;\n        break;\n    }\n  }\n\n  function logingoogle(e) {\n    console.log(\"logingoogle : \" + e.target.name + \" id : \" + loginid + \" , pw : \" + loginpw);\n    let retrole = \"admin\";\n    window.sessionStorage.setItem('login', retrole);\n    props.onSetlogin(retrole);\n  }\n\n  function loginkakao(e) {\n    console.log(\"loginkakao : \" + e.target.name + \" id : \" + loginid + \" , pw : \" + loginpw);\n    let retrole = \"user\";\n    window.sessionStorage.setItem('login', retrole);\n    props.onSetlogin(retrole);\n  }\n\n  function loginbuttonHandler(e) {\n    console.log(\"loginbuttonHandler : \" + e.target.name + \" id : \" + loginid + \" , pw : \" + loginpw);\n    myGlobalvalues.farmapi.setLogin(loginid, loginpw).then(ret => {\n      if (ret) {\n        if (ret.IsOK == true) {\n          window.sessionStorage.setItem('login', ret.retMessage);\n          props.onSetlogin(ret.retMessage);\n          console.log(\" login ret : \" + ret.retMessage);\n        }\n      }\n    }); //window.sessionStorage.setItem('login',\"true\");    \n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: logintype\n    }, \"sdaff\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}; //export default connect(mapStateToProps,mapDispatchToProps)(Loginpage);\n\n\n_c = Loginpage;\nexport default Loginpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loginpage\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/pages/loginpage.js"],"names":["React","useState","useEffect","myGlobalvalues","crypto","require","Loginpage","props","loginid","loginpw","logintype","console","log","Islogin","islocal","logingoogle","loginkakao","loginbuttonHandler","inputonchangeHandler","e","target","name","value","retrole","window","sessionStorage","setItem","onSetlogin","farmapi","setLogin","then","ret","IsOK","retMessage"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport myGlobalvalues from \"../myGlobal\";\r\n\r\nconst crypto = require('crypto');\r\n\r\n\r\n\r\nconst Loginpage=(props)=>{\r\n\r\n    let loginid;\r\n    let loginpw;\r\n\r\n    \r\n    let logintype;\r\n\r\n    \r\n    console.log(\"Loginpage  :\" + props.Islogin)  ;\r\n    \r\n    console.log(\"Loginpage islocal :\" + myGlobalvalues.islocal)  ;\r\n    \r\n    if (myGlobalvalues.islocal === false) {\r\n        logintype = (\r\n       \r\n          <div className=\"content\">\r\n        \r\n                <button className=\"button\"  onClick={logingoogle }> 구글로그인 </button> \r\n                <button className=\"button\"  onClick={loginkakao }> 카카오톡로그인 </button> \r\n                <button className=\"button\"  onClick={loginbuttonHandler }> 회원가입 </button> \r\n          </div>\r\n       \r\n      );\r\n    } else {\r\n        logintype = (\r\n        <div className=\"\">\r\n            <label>간편로그인:  </label>\r\n            \r\n            \r\n            <div>\r\n            <label>암호:  </label>\r\n            <input type=\"text\" key=\"1234\" name=\"inputloginpw\" onChange={inputonchangeHandler} />\r\n            <button className=\"\"  onClick={loginbuttonHandler }> 로그인 </button> \r\n            </div>\r\n            \r\n          </div>\r\n      );\r\n    }\r\n\r\n\r\n\r\n  function inputonchangeHandler(e) {\r\n    console.log(\"inputonchangeHandler : \" + e.target.name);\r\n    switch (e.target.name) {\r\n        case \"inputloginid\":\r\n            loginid= e.target.value;\r\n          break;\r\n  \r\n        case \"inputloginpw\":\r\n            loginpw= e.target.value;\r\n  \r\n          break;\r\n      }\r\n\r\n\r\n    \r\n  }\r\n  \r\n  \r\n  function logingoogle(e) {\r\n    console.log(\"logingoogle : \" + e.target.name + \" id : \" + loginid + \" , pw : \" + loginpw);\r\n\r\n    let retrole= \"admin\";\r\n    window.sessionStorage.setItem('login',retrole); \r\n    props.onSetlogin(retrole);\r\n  }\r\n\r\n  \r\n  function loginkakao(e) {\r\n    console.log(\"loginkakao : \" + e.target.name + \" id : \" + loginid + \" , pw : \" + loginpw);\r\n\r\n    let retrole= \"user\";\r\n    window.sessionStorage.setItem('login',retrole); \r\n    props.onSetlogin(retrole);\r\n  }\r\n\r\n  function loginbuttonHandler(e) {\r\n    console.log(\"loginbuttonHandler : \" + e.target.name + \" id : \" + loginid + \" , pw : \" + loginpw);\r\n\r\n\r\n    myGlobalvalues.farmapi.setLogin(loginid,loginpw).then((ret) => {\r\n        \r\n        if(ret)\r\n    {\r\n        if(ret.IsOK == true)\r\n        {\r\n            window.sessionStorage.setItem('login',ret.retMessage); \r\n            props.onSetlogin(ret.retMessage);\r\n            \r\n            console.log( \" login ret : \" +ret.retMessage);\r\n\r\n        }\r\n\r\n    }\r\n      });\r\n    \r\n\r\n\r\n    \r\n    \r\n    \r\n\r\n     //window.sessionStorage.setItem('login',\"true\");    \r\n\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n        <h2>login Page</h2>\r\n        <div key=\"sdaff\">\r\n            {logintype}\r\n\r\n        \r\n            \r\n\r\n        </div>\r\n    </div>\r\n);\r\n\r\n};\r\n\r\n\r\n//export default connect(mapStateToProps,mapDispatchToProps)(Loginpage);\r\n\r\nexport default Loginpage;\r\n"]},"metadata":{},"sourceType":"module"}