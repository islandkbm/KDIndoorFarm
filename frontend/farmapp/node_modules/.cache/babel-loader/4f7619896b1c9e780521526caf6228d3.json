{"ast":null,"code":"var _jsxFileName = \"H:\\\\KBM_WORK\\\\indoorfarm_work\\\\sfu3300\\\\KDIndoorFarm\\\\frontend\\\\farmapp\\\\src\\\\sensordisplay.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SensorBox(msensor) {\n  let cname = \"sen_con\";\n  let svalue;\n  let iconsrc = \"./image/sensor_\" + msensor.Sensortype + \".png\";\n\n  if (msensor.errorcount > 30) {\n    cname = \"sen_dis\";\n    svalue = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sen_result\",\n      children: [\"   \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"blinking\",\n        children: \"\\uC5F0\\uACB0\\uB04A\\uAE40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 44\n      }, this), \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  } else {\n    svalue = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sen_value\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"value\",\n        children: msensor.valuestring\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"unit\",\n        children: \" \" + msensor.ValueUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cname,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sen_name\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconsrc,\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), \" \", msensor.Name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), svalue]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SensorBox;\n\nfunction Sensordisplay(msensorsarray, isonlystatus) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"sen_title\",\n      children: \"SENSOR DISPLAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), msensorsarray.map((localState, index) => SensorBox(localState))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = Sensordisplay;\nexport default Sensordisplay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SensorBox\");\n$RefreshReg$(_c2, \"Sensordisplay\");","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/sensordisplay.js"],"names":["React","SensorBox","msensor","cname","svalue","iconsrc","Sensortype","errorcount","valuestring","ValueUnit","Name","Sensordisplay","msensorsarray","isonlystatus","map","localState","index"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,MAAIC,KAAK,GAAE,SAAX;AACA,MAAIC,MAAJ;AACA,MAAIC,OAAO,GAAC,oBAAkBH,OAAO,CAACI,UAA1B,GAAqC,MAAjD;;AAGA,MAAGJ,OAAO,CAACK,UAAR,GAAoB,EAAvB,EACA;AACEJ,IAAAA,KAAK,GAAE,SAAP;AACAC,IAAAA,MAAM,gBAAE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,qCAA+B;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACD,GAJD,MAKI;AAEFA,IAAAA,MAAM,gBAAE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACN;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,kBAA0BF,OAAO,CAACM;AAAlC;AAAA;AAAA;AAAA;AAAA,cADM,eAER;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAA,kBAAyB,MAAIN,OAAO,CAACO;AAArC;AAAA;AAAA;AAAA;AAAA,cAFQ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAMD;;AAEG,sBACE;AAAK,IAAA,SAAS,EAAEN,KAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACc;AAAK,QAAA,GAAG,EAAEE,OAAV;AAAmB,QAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADd,OACsDH,OAAO,CAACQ,IAD9D;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKeN,MALf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcH;;KAnCMH,S;;AAqCP,SAASU,aAAT,CAAuBC,aAAvB,EAAsCC,YAAtC,EAAoD;AAClD,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,aAAa,CAACE,GAAd,CAAkB,CAACC,UAAD,EAAaC,KAAb,KAAuBf,SAAS,CAACc,UAAD,CAAlD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQJ,a;AAYX,eAAeA,aAAf","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nfunction SensorBox(msensor) {\r\n  let cname =\"sen_con\";\r\n  let svalue;\r\n  let iconsrc=\"./image/sensor_\"+msensor.Sensortype+\".png\";\r\n\r\n\r\n  if(msensor.errorcount >30)\r\n  {\r\n    cname =\"sen_dis\";\r\n    svalue=(<div className=\"sen_result\">   <span className=\"blinking\">연결끊김</span>   </div>);\r\n  }\r\n  else{\r\n\r\n    svalue=(<div className=\"sen_value\">\r\n      <label className=\"value\">{msensor.valuestring}</label> \r\n    <label className=\"unit\">{\" \"+msensor.ValueUnit}</label>\r\n    </div>\r\n     );\r\n\r\n  }\r\n\r\n      return (\r\n        <div className={cname}>\r\n          <div className=\"sen_name\">\r\n                        <img src={iconsrc} className=\"icon\" /> {msensor.Name}\r\n                        </div>\r\n                    \r\n                      {svalue}\r\n                      \r\n                  \r\n\r\n          \r\n        </div>\r\n      );\r\n    \r\n  }\r\n\r\n  function Sensordisplay(msensorsarray, isonlystatus) {\r\n    return (\r\n      <div className=\"sensor\">\r\n        <div class=\"sen_title\">SENSOR DISPLAY</div>\r\n        {msensorsarray.map((localState, index) => SensorBox(localState))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  \r\n\r\nexport default Sensordisplay;"]},"metadata":{},"sourceType":"module"}