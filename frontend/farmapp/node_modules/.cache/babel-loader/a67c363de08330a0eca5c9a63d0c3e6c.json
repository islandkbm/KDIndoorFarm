{"ast":null,"code":"import _createForOfIteratorHelper from\"H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/node_modules/@babel/runtime/helpers/esm/createClass\";var AutoControlStatus=require(\"./autocontrolstatus\");module.exports=/*#__PURE__*/function(){function AutoControl(mconfig){_classCallCheck(this,AutoControl);this.mConfig=mconfig;this.mState=new AutoControlStatus(mconfig.UniqID);}_createClass(AutoControl,[{key:\"controlbypwm\",value://테스트용 나중에 삭제..\nfunction controlbypwm(){var mstatus=true;if(this.mState.pwmonoffstate===true){this.mState.pwmontime_count++;if(this.mState.pwmontime_count>=this.mConfig.pwmontime){this.mState.pwmofftime_count=0;this.mState.pwmonoffstate=false;}mstatus=true;}else{this.mState.pwmofftime_count++;if(this.mState.pwmofftime_count>=this.mConfig.pwmofftime){this.mState.pwmontime_count=0;this.mState.pwmonoffstate=true;}mstatus=false;}return mstatus;}},{key:\"controlbytimer\",value:function controlbytimer(){return true;}},{key:\"controlbysensor\",value:function controlbysensor(msensors){var mstatus=null;var _iterator=_createForOfIteratorHelper(msensors),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var ms=_step.value;if(ms.UniqID===this.mConfig.sensorid){if(this.mConfig.condition===\"up\"){if(ms.value>this.mConfig.onvalue){mstatus=true;}else{if(ms.value<this.mConfig.offvalue){mstatus=false;}}}else{if(ms.value<this.mConfig.onvalue){mstatus=true;}else{if(ms.value>this.mConfig.offvalue){mstatus=false;}}}break;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return mstatus;}//자동제어로 동작한후 상태가 변경되면  true  리턴\n},{key:\"ischangebycontrol\",value:function ischangebycontrol(msensors,timesecnow){var mstatus=false;if(this.mConfig.enabled===false){return false;}if(timesecnow>=this.mConfig.starttime&&timesecnow<this.mConfig.endtime){if(this.mConfig.istimer===true){mstatus=this.controlbytimer();}else if(this.mConfig.pwmcontrolenable===true){mstatus=this.controlbypwm();}else{mstatus=this.controlbysensor(msensors);}}else{mstatus=false;}return this.mState.ischangestatecheck(mstatus);}}],[{key:\"Clonbyjsonobj\",value:function Clonbyjsonobj(mobj){return new AutoControl(mobj.mConfig);}}]);return AutoControl;}();","map":{"version":3,"sources":["H:/KBM_WORK/indoorfarm_work/sfu3300/KDIndoorFarm/frontend/farmapp/src/commonjs/autocontrol.js"],"names":["AutoControlStatus","require","module","exports","mconfig","mConfig","mState","UniqID","mstatus","pwmonoffstate","pwmontime_count","pwmontime","pwmofftime_count","pwmofftime","msensors","ms","sensorid","condition","value","onvalue","offvalue","timesecnow","enabled","starttime","endtime","istimer","controlbytimer","pwmcontrolenable","controlbypwm","controlbysensor","ischangestatecheck","mobj","AutoControl"],"mappings":"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","sourcesContent":["const AutoControlStatus = require(\"./autocontrolstatus\");\r\n\r\n\r\nmodule.exports = class AutoControl {\r\n  constructor(mconfig) {\r\n    this.mConfig = mconfig;\r\n    this.mState = new AutoControlStatus(mconfig.UniqID);\r\n  }\r\n\r\n  static Clonbyjsonobj(mobj) {\r\n    return new AutoControl(mobj.mConfig);\r\n  }\r\n\r\n  //테스트용 나중에 삭제..\r\n  controlbypwm() {\r\n    let mstatus = true;\r\n\r\n    if (this.mState.pwmonoffstate === true) {\r\n      this.mState.pwmontime_count++;\r\n      if (this.mState.pwmontime_count >= this.mConfig.pwmontime) {\r\n        this.mState.pwmofftime_count = 0;\r\n        this.mState.pwmonoffstate = false;\r\n      }\r\n      mstatus = true;\r\n    } else {\r\n      this.mState.pwmofftime_count++;\r\n      if (this.mState.pwmofftime_count >= this.mConfig.pwmofftime) {\r\n        this.mState.pwmontime_count = 0;\r\n        this.mState.pwmonoffstate = true;\r\n      }\r\n\r\n      mstatus = false;\r\n    }\r\n\r\n    return mstatus;\r\n  }\r\n  controlbytimer() {\r\n    \r\n    return true;\r\n  }\r\n  controlbysensor(msensors) {\r\n    let mstatus = null;\r\n\r\n    for (const ms of msensors) {\r\n      if (ms.UniqID === this.mConfig.sensorid) {\r\n        if (this.mConfig.condition === \"up\") {\r\n          if (ms.value > this.mConfig.onvalue) {\r\n            mstatus = true;\r\n          } else {\r\n            if (ms.value < this.mConfig.offvalue) {\r\n              mstatus = false;\r\n            }\r\n          }\r\n        } else {\r\n          if (ms.value < this.mConfig.onvalue) {\r\n            mstatus = true;\r\n          } else {\r\n            if (ms.value > this.mConfig.offvalue) {\r\n              mstatus = false;\r\n            }\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    return mstatus;\r\n  }\r\n  //자동제어로 동작한후 상태가 변경되면  true  리턴\r\n  ischangebycontrol(msensors, timesecnow) {\r\n    let mstatus = false;\r\n    if (this.mConfig.enabled === false) {\r\n      return false;\r\n    }\r\n\r\n    if (timesecnow >= this.mConfig.starttime && timesecnow < this.mConfig.endtime) {\r\n\r\n      \r\n\r\n      if (this.mConfig.istimer === true) {\r\n        mstatus = this.controlbytimer();\r\n      } else if (this.mConfig.pwmcontrolenable === true) {\r\n        mstatus = this.controlbypwm();\r\n      } else {\r\n        mstatus = this.controlbysensor(msensors);\r\n      }\r\n    } else {\r\n      mstatus = false;\r\n    }\r\n    return this.mState.ischangestatecheck(mstatus);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}