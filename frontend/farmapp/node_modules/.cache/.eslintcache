[{"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\index.js":"1","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\App.js":"2","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\indoorfarmapi.js":"3","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\manualmessage.js":"4","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\reqMessage.js":"5","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\sensordevice.js":"6","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\outputdevice.js":"7","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\responseMessage.js":"8","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\sensordisplay.js":"9","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\outputdevicedisplay.js":"10","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrol.js":"11","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrolconfig.js":"12","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrolstatus.js":"13","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\dashboard.js":"14","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\autocontrolpage.js":"15","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\devicepage.js":"16","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\sensorpage.js":"17","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\about.js":"18","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\settingpage.js":"19","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\kdcommon.js":"20","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\firebase.js":"21","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\store.js":"22","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\mainReducer.js":"23","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\mainAction.js":"24","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\myGlobal.js":"25","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\loginpage.js":"26","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\mainpage.js":"27"},{"size":553,"mtime":1625116244554,"results":"28","hashOfConfig":"29"},{"size":1367,"mtime":1625128082329,"results":"30","hashOfConfig":"29"},{"size":4587,"mtime":1625049101874,"results":"31","hashOfConfig":"29"},{"size":112,"mtime":1621219545114,"results":"32","hashOfConfig":"29"},{"size":527,"mtime":1625104151832,"results":"33","hashOfConfig":"29"},{"size":9462,"mtime":1624518030236,"results":"34","hashOfConfig":"29"},{"size":1691,"mtime":1622790222538,"results":"35","hashOfConfig":"29"},{"size":402,"mtime":1624417531434,"results":"36","hashOfConfig":"29"},{"size":997,"mtime":1622622650874,"results":"37","hashOfConfig":"29"},{"size":1937,"mtime":1625048958079,"results":"38","hashOfConfig":"29"},{"size":2375,"mtime":1624519255170,"results":"39","hashOfConfig":"29"},{"size":1463,"mtime":1622446140249,"results":"40","hashOfConfig":"29"},{"size":933,"mtime":1622463505649,"results":"41","hashOfConfig":"29"},{"size":1084,"mtime":1625049354203,"results":"42","hashOfConfig":"29"},{"size":11873,"mtime":1624518280046,"results":"43","hashOfConfig":"29"},{"size":662,"mtime":1625048763938,"results":"44","hashOfConfig":"29"},{"size":2267,"mtime":1625043284313,"results":"45","hashOfConfig":"29"},{"size":1795,"mtime":1625041112561,"results":"46","hashOfConfig":"29"},{"size":6298,"mtime":1622881907600,"results":"47","hashOfConfig":"29"},{"size":885,"mtime":1624416300134,"results":"48","hashOfConfig":"29"},{"size":602,"mtime":1624416364191,"results":"49","hashOfConfig":"29"},{"size":156,"mtime":1625120652061,"results":"50","hashOfConfig":"29"},{"size":569,"mtime":1625123589425,"results":"51","hashOfConfig":"29"},{"size":253,"mtime":1625122680907,"results":"52","hashOfConfig":"29"},{"size":338,"mtime":1625124422312,"results":"53","hashOfConfig":"29"},{"size":1306,"mtime":1625128127895,"results":"54","hashOfConfig":"29"},{"size":3624,"mtime":1625105902159,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1lqgpbv",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\index.js",[],["122","123"],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\App.js",["124","125"],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\indoorfarmapi.js",["126"],"import reqMessage from \"./reqMessage\";\r\n\r\nimport Sensordevice from \"./commonjs/sensordevice\";\r\nimport Outputdevice from \"./commonjs/outputdevice\";\r\nimport AutoControl from \"./commonjs/autocontrol\";\r\nimport responseMessage from \"./commonjs/responseMessage\";\r\nimport myGlobalvalues from \"./myGlobal\";\r\nimport KDCommon  from \"./commonjs/kdcommon\";\r\n\r\n\r\nimport firebase from \"./firebase.js\";\r\nlet database = firebase.database();\r\nlet frrequest =database.ref('Sensors/request/message');\r\nlet frresponse =database.ref('Sensors/response/message');\r\n\r\n\r\n\r\nlet resposemsg ;\r\n\r\nconst API = \"/api/\";\r\n\r\nexport default class IndoorFarmAPI {\r\n\r\n\r\n  constructor(islocal) {\r\n  this.islocal= islocal;\r\n  if(this.islocal === false)\r\n  {\r\n     \r\n\r\n    frresponse.on('value', (snapshot) => {\r\n        const data = snapshot.val();\r\n\r\n         resposemsg = JSON.parse(data);\r\n       //  console.log(\"resposemsg ...event...\");\r\n\r\n         //console.log(resposemsg);\r\n\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  }\r\n\r\n   async postData(url = \"\", data = {}) {\r\n\r\n    let response ;\r\n\r\n    if(this.islocal === false)\r\n  {\r\n      resposemsg  =null;\r\n      frrequest.set(JSON.stringify(data));\r\n      //5초 동안 응답기다림.\r\n      for(let i=0;i<50;i++)\r\n      {\r\n        await KDCommon.delay(100);\r\n        if(resposemsg !=null)\r\n        {\r\n      //    console.log(\"resposemsg\");\r\n          return resposemsg;\r\n        }\r\n      }\r\n      \r\n\r\n\r\n\r\n  }\r\n  else\r\n  {\r\n\r\n     response = await fetch(url, {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      body: JSON.stringify(data), // \r\n    });\r\n  }\r\n    \r\n    return response.json(); \r\n  \r\n  }\r\n\r\n   async getsensordatas() {\r\n    const resdata = await this.getRequest(true, false, false, false);\r\n    if (resdata) {\r\n      return resdata.Sensors;\r\n    }\r\n    return null;\r\n  }\r\n\r\n   async getoutputstatus() {\r\n    const resdata = await this.getRequest(false, true, false, false);\r\n    if (resdata) {\r\n      return resdata.Outputs;\r\n    }\r\n    return null;\r\n  }\r\n   async getautocontrols() {\r\n    return await this.getRequest(true, true, true, true);\r\n  }\r\n\r\n  // 서버에 데이터 저장 요청\r\n   async setRequest(mItems, isautocfg, isdevcofig, ismanual) {\r\n    let isok = false;\r\n\r\n    console.log(\" setDeviceconfigsetup rsp : \" + isok);\r\n    try {\r\n      const reqmsg = new reqMessage(\"IF9988\");\r\n      reqmsg.setDeviceconfig = isdevcofig;\r\n      reqmsg.Deviceconfigitem = mItems;\r\n      reqmsg.setAutocontrol = isautocfg;\r\n      reqmsg.Autoconfigitem = mItems;\r\n      reqmsg.setManualControl = ismanual;\r\n      reqmsg.OutputManual.push(mItems);\r\n\r\n      const resdata = await this.postData(API + \"farmrequest\", reqmsg);\r\n      \r\n      console.log(\" setRequest rsp : \" + resdata.IsOK);\r\n      isok = true;\r\n    } catch (error) {\r\n      console.log(\" setRequest error : \" + error);\r\n    } finally {\r\n      console.log(\" setRequest finally  : \" + isok);\r\n      return isok;\r\n    }\r\n  }\r\n\r\n  //서버에 상태및 정보 요청\r\n   async getRequest(isensor, isoutdev, isautostate, isautocontrol) {\r\n    let mrepmsg = new responseMessage();\r\n \r\n\r\n\r\n\r\n    try {\r\n      const reqmsg = new reqMessage(\"IF9987\");\r\n      //자동제어  센서목록, 출력목록 다 가져옴\r\n      reqmsg.getAutoControlstate = isautostate;\r\n      reqmsg.getSensors = isensor;\r\n      reqmsg.getOutputport = isoutdev;\r\n      reqmsg.getAutoControl = isautocontrol;\r\n\r\n      const resdata = await this.postData(API + \"farmrequest\", reqmsg);\r\n      \r\n\r\n      resdata.AutoControls.forEach((element) => {\r\n        mrepmsg.AutoControls.push(AutoControl.Clonbyjsonobj(element));\r\n      });\r\n\r\n      resdata.Sensors.forEach((element) => {\r\n        mrepmsg.Sensors.push(Sensordevice.Clonbyjsonobj(element));\r\n      });\r\n\r\n      resdata.Outputs.forEach((element) => {\r\n        mrepmsg.Outputs.push(Outputdevice.Clonbyjsonobj(element));\r\n      });\r\n    } catch (error) {\r\n      console.log(\" getRequest error : \" + error);\r\n    } finally {\r\n      console.log(\" getRequest finally  : \" + mrepmsg);\r\n      return mrepmsg;\r\n    }\r\n  }\r\n\r\n   async setmanualonoff(moutputport) {\r\n    return await this.setRequest(moutputport, false, false, true);\r\n  }\r\n\r\n   async setAutocontrolsetup(mAutocfg) {\r\n    return await this.setRequest(mAutocfg, true, false, false);\r\n  }\r\n\r\n   async setDeviceconfigsetup(mDevcfg) {\r\n    return await this.setRequest(mDevcfg, false, true, false);\r\n  }\r\n}\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\manualmessage.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\reqMessage.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\sensordevice.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\outputdevice.js",["127"],"const fs = require(\"fs\");\r\n\r\nclass Outputdevice {\r\n  static OPStatus = Object.freeze({\r\n    OPS_Off: \"off\", //꺼짐\r\n    OPS_On: \"on\", //켜짐\r\n    OPS_Local: \"local\", //현장수동제어\r\n    OPS_Idle: \"idle\",\r\n  });\r\n\r\n  static OutDeviceTypeEnum = Object.freeze({\r\n    ODT_RELAY: 0,\r\n    ODT_PUMP: 1, //\r\n    ODT_FAN: 2,\r\n    ODT_VALVE: 3,\r\n    ODT_LED: 4,\r\n    ODT_COOLER: 5,\r\n    ODT_HEATER: 6,\r\n    ODT_POWER: 7,\r\n    ODT_NOZZLE: 8,\r\n    ODT_ETC: 99,\r\n    ODT_DELETE: 9999, //장치삭제\r\n  });\r\n\r\n  static Writefile(filename, mlist) {\r\n    let data = JSON.stringify(mlist);\r\n    fs.writeFileSync(filename, data);\r\n  }\r\n  static Readfile(filename) {\r\n    let rawdata = fs.readFileSync(filename);\r\n    let objlist = JSON.parse(rawdata);\r\n\r\n    let alist = [];\r\n    objlist.forEach((element) => {\r\n\r\n       let mdobj = Object.assign(new Outputdevice(), element);\r\n\r\n       //삭제가 아니면 \r\n       if(mdobj.DevType !=  Outputdevice.OutDeviceTypeEnum.ODT_DELETE)\r\n       {\r\n        alist.push(mdobj);\r\n       }\r\n    });\r\n\r\n    return alist;\r\n  }\r\n\r\n  static Clonbyjsonobj(mobj) {\r\n    return Object.assign(new Outputdevice(), mobj);\r\n  }\r\n\r\n  static CreateDefulatDevice(relaynum) {\r\n    let newdev =new Outputdevice();\r\n    newdev.UniqID=relaynum;\r\n    newdev.Name=\"릴레이-\"+(Number(relaynum)+1);\r\n    newdev.Channel =relaynum;\r\n    newdev.DevType  =Outputdevice.OutDeviceTypeEnum.ODT_RELAY;\r\n    \r\n    return newdev;\r\n  }\r\n\r\n  constructor() {\r\n    this.UniqID = 0; ///고유식별 id 릴레이번호로 입력 0~23\r\n    this.Name = 0;\r\n    this.Channel = 0;\r\n    this.DevType = 0;\r\n    this.Status = 0;\r\n    this.Autocontrolid = 0;\r\n  }\r\n}\r\n\r\nmodule.exports = Outputdevice;\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\responseMessage.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\sensordisplay.js",["128"],"import React from \"react\";\r\n\r\nfunction SensorBox(msensor) {\r\n  let cname = \"sen_con\";\r\n  let svalue;\r\n  let iconsrc = \"./image/sensor_\" + msensor.Sensortype + \".png\";\r\n\r\n  if (msensor.errorcount > 30) {\r\n    cname = \"sen_dis\";\r\n    svalue = (\r\n      <div className=\"sen_result\">\r\n        {\" \"}\r\n        <span className=\"blinking\">연결끊김</span>{\" \"}\r\n      </div>\r\n    );\r\n  } else {\r\n    svalue = (\r\n      <div className=\"sen_value\">\r\n        <label className=\"value\">{msensor.valuestring}</label>\r\n        <label className=\"unit\">{\" \" + msensor.ValueUnit}</label>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cname}>\r\n      <div className=\"sen_name\"> <img src={iconsrc} className=\"icon\" /> {msensor.Name}      </div>\r\n      {svalue}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Sensordisplay(msensorsarray, isonlystatus) {\r\n  return( \r\n  <div className=\"sensor\">\r\n    {msensorsarray.map((localState, index) => SensorBox(localState))}\r\n    </div>);\r\n}\r\n\r\nexport default Sensordisplay;\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\outputdevicedisplay.js",["129","130","131","132","133"],"import React from \"react\";\r\nimport IndoorFarmAPI from \"./indoorfarmapi\";\r\nimport manualMessage from \"./manualmessage\";\r\nimport Outputdevice from \"./commonjs/outputdevice\";\r\nimport myGlobalvalues from \"./myGlobal\";\r\n\r\nfunction manualonoff(channel, onoff) {\r\n  \r\n\r\n  const mdev = new manualMessage();\r\n  mdev.hardwareChannel = channel;\r\n  mdev.isonoff = onoff;\r\n\r\n  myGlobalvalues.farmapi.setmanualonoff(mdev);\r\n  \r\n}\r\n\r\nfunction outputdevbox(mydata, isonlystatus) {\r\n  let ismanual  ;\r\n  let devicon = \"./image/devicon_\" + mydata.DevType + \".png\";\r\n  let onofficon = \"./image/\" + mydata.Status + \".png\";\r\n\r\n  if (mydata.Status === Outputdevice.OPStatus.OPS_Local) {\r\n    \r\n    ismanual = (\r\n      <div className=\"man_result\">\r\n        <span className=\"blinking\">현장제어중</span>\r\n      </div>\r\n    );\r\n\r\n  } else if (mydata.Autocontrolid == 0) {\r\n    if (isonlystatus == true) {\r\n      ismanual = (<div className=\"out_result\">수동제어</div>);\r\n    } else {\r\n      ismanual = (\r\n        <div className=\"out_button\">\r\n          <button className=\"button_on\" onClick={() => manualonoff(mydata.Channel, true)}>수동 On</button> <button className=\"button_off\"  onClick={() => manualonoff(mydata.Channel, false)}>수동 Off</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  else{\r\n    ismanual = (\r\n      <div className=\"out_result\">자동제어중\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"out_con\">\r\n      <div className=\"out_name\"> <img src={devicon} className=\"icon\" />   {mydata.Name}    </div>\r\n      <div className=\"out_value\"> <img src={onofficon} className=\"onoff\" />   </div>\r\n      {ismanual}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Outputdevicedisplay(moutdevarray, isonlystatus) {\r\n  return (\r\n        \r\n       <div className=\"output\">\r\n        {moutdevarray.map((localState, index) => outputdevbox(localState, isonlystatus))}\r\n       </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Outputdevicedisplay;\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrol.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrolconfig.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrolstatus.js",["134"],"//자동제어시 변경되는 상태나 변수를 저장함.\r\nmodule.exports = class AutoControlStatus {\r\n  constructor(uniqid) {\r\n    this.autouniqid=uniqid;\r\n    this.pwmonoffstate = false;\r\n\r\n    this.pwmontime_count = 0;\r\n    this.pwmofftime_count = 0;\r\n\r\n    //처음초기화상태\r\n    this.onoffstate = null;\r\n  }\r\n  ischangestatecheck(newstate) {\r\n    if (newstate != null) {\r\n      //초기화상태이면 on이던 off 상태를 바로 변경함.\r\n      if (this.onoffstate===null)\r\n      {\r\n        this.onoffstate = newstate;\r\n        return true;\r\n      }\r\n\r\n      if (this.onoffstate != newstate) {\r\n        this.onoffstate = newstate;\r\n        return true;\r\n      }\r\n    }\r\n    else{\r\n      //초기화상태이고 조건이 알수없는 조건이면  off로 우선설정\r\n      if (this.onoffstate===null)\r\n      {\r\n        this.onoffstate = false;\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n};\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\dashboard.js",["135","136"],"\r\nimport React, { Component,useState, useEffect } from \"react\";\r\nimport Sensordisplay from \"../sensordisplay\";\r\nimport Outputdevicedisplay from \"../outputdevicedisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\nimport responseMessage from \"../commonjs/responseMessage\"\r\nimport myGlobalvalues from \"../myGlobal\";\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [mresponse, setUpdatedata] = useState(new responseMessage());\r\n\r\n    //const [msensorsarray, setUpdatesensor] = useState([]);\r\n    //const [moutdevarray, setUpdatedevice] = useState([]);\r\n\r\n    useEffect(() => {\r\n      let interval = null;\r\n  \r\n      interval = setInterval(() => {\r\n\r\n        myGlobalvalues.farmapi.getRequest(true,true,false).then((mrsp) => {\r\n            setUpdatedata(mrsp);\r\n\r\n        });\r\n\r\n      }, 1000);\r\n  \r\n      return () => clearInterval(interval);\r\n    }, []);\r\n\r\n\r\n    return(\r\n      <div className=\"display\">\r\n        \r\n            {Sensordisplay(mresponse.Sensors,true)}\r\n            {Outputdevicedisplay(mresponse.Outputs,true)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\autocontrolpage.js",["137","138","139","140"],"import React, {  useState, useEffect } from \"react\";\r\nimport AutoControlconfig from \"../commonjs/autocontrolconfig\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\nimport AutoControl from \"../commonjs/autocontrol.js\";\r\n\r\n\r\nconst Autocontrolpage = () => {\r\n  const [mSensors, setUpdatesensor] = useState([]);\r\n  const [mAutolist, setUpdateauto] = useState([]);\r\n  const [mDevices, setUpdatedevice] = useState([]);\r\n  const [mSelecteditem, setupselected] = useState(null);\r\n\r\n  console.log(\"Autocontrolpage: \");\r\n\r\n  useEffect(() => {\r\n    IndoorFarmAPI.getautocontrols().then((mrsp) => {\r\n      setUpdatesensor(mrsp.Sensors);\r\n      setUpdateauto(mrsp.AutoControls);\r\n      setUpdatedevice(mrsp.Outputs);\r\n    });\r\n  }, []);\r\n\r\n  function secToTime(dayseconds) {\r\n    if (dayseconds >= 24 * 3600) {\r\n      return \"23:59\";\r\n    }\r\n    let hour = Math.floor(dayseconds / 3600);\r\n    let min = Math.floor((dayseconds - hour * 3600) / 60);\r\n    if (hour < 10) hour = \"0\" + hour;\r\n    if (min < 10) min = \"0\" + min;\r\n    console.log(\"secToTime : \" + (hour + \":\" + min));\r\n    return hour + \":\" + min;\r\n  }\r\n\r\n  function timeTosec(timestr) {\r\n    const [hours, minutes] = timestr.split(\":\");\r\n    return Number(hours * 3600 + minutes * 60);\r\n  }\r\n\r\n  function Autocontroleditbox(myeditcfg, msensorlist, mdevlist) {\r\n    //const [misTimershow, selectcontrol] = useState(myeditcfg !=null && myeditcfg.istimer);\r\n    //console.log(\"Autocontroleditbox  misTimershow: \" + misTimershow);\r\n\r\n    if (myeditcfg == null) {\r\n      return <div></div>;\r\n    } else {\r\n      let copycfg = myeditcfg; // AutoControlconfig.deepcopy(mydata.mConfig);\r\n\r\n      console.log(\"Autocontroleditbox  copycfg.istimer: \" + copycfg.istimer);\r\n\r\n      //selectcontrol(copycfg.istimer);\r\n\r\n      //let starttime_sec =/3600)+\":\"+ ((mydata.mConfig.starttime/60)%60);\r\n      //let endtime_sec = (mydata.mConfig.endtime/3600)+\":\"+ ((mydata.mConfig.endtime/60)%60);\r\n\r\n      function setupSave(mcfg) {\r\n        console.log(\"setupSave uid: \" + mcfg.uniqid + \" name : \" + mcfg.name + \" istimer : \" + mcfg.istimer);\r\n\r\n        console.log(\"setupSave uid: \" + \" copycfg istimer : \" + copycfg.istimer);\r\n\r\n        IndoorFarmAPI.setAutocontrolsetup(mcfg).then((ret) => {\r\n          console.log(\"setAutocontrolsetup  uid: \" + ret);\r\n        });\r\n      }\r\n\r\n      function inputonchangeHandler(e) {\r\n        console.log(\"inputonchangeHandler : \" + e.target.name);\r\n\r\n        switch (e.target.name) {\r\n          case \"name\":\r\n            copycfg.name = e.target.value;\r\n            break;\r\n\r\n          case \"onvalue\":\r\n            copycfg.onvalue = Number(e.target.value);\r\n            break;\r\n          case \"offvalue\":\r\n            copycfg.offvalue = Number(e.target.value);\r\n            break;\r\n\r\n          case \"starttime\":\r\n            copycfg.starttime = timeTosec(e.target.value);\r\n            break;\r\n          case \"endtime\":\r\n            copycfg.endtime = timeTosec(e.target.value);\r\n            break;\r\n\r\n          case \"controlsel\":\r\n            if (e.target.checked === true && e.target.id === \"timer\") {\r\n              copycfg.istimer = true;\r\n            } else {\r\n              copycfg.istimer = false;\r\n            }\r\n\r\n            setupselected(AutoControlconfig.deepcopy(copycfg));\r\n            break;\r\n          case \"autoenable\":\r\n            if (e.target.checked === true && e.target.id === \"enable\") {\r\n              copycfg.enabled = true;\r\n            } else {\r\n              copycfg.enabled = false;\r\n            }\r\n\r\n          //  setupselected(AutoControlconfig.deepcopy(copycfg));\r\n        }\r\n\r\n        if (e.target.name === \"devcheck\") {\r\n          let isexist = false;\r\n          for (let i = 0; i < copycfg.devids.length; i++) {\r\n            if (copycfg.devids[i] === Number(e.target.id)) {\r\n              if (e.target.checked === false) {\r\n                copycfg.devids.splice(i, 1);\r\n                return;\r\n              } else {\r\n                isexist = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          //새로추가\r\n          if (isexist === false) {\r\n            copycfg.devids.push(Number(e.target.id));\r\n          }\r\n          //console.log({copycfg});\r\n        }\r\n      }\r\n\r\n      function sensorselectbox(mitem) {\r\n        return (\r\n          <ui>\r\n            <input type=\"radio\" key={copycfg.uniqid} name=\"sensorsel\" defaultChecked={mitem.seleted} id={mitem.uniqkey} />\r\n            {mitem.title}\r\n          </ui>\r\n        );\r\n      }\r\n\r\n      function devicecheckbox(mitem) {\r\n        return (\r\n          <ui>\r\n            <input type=\"checkbox\" key={copycfg.uniqid} name=\"devcheck\" defaultChecked={mitem.seleted} id={mitem.uniqkey} /> {mitem.title}\r\n          </ui>\r\n        );\r\n      }\r\n\r\n      let slist = [];\r\n      for (const ss of msensorlist) {\r\n        let seleted = false;\r\n        if (copycfg.sensorid === ss.UniqID) {\r\n          console.log(\"select sensorid : \" + ss.UniqID);\r\n          seleted = true;\r\n        }\r\n        const title = ss.Name + \"(노드:\" + ss.nodeID + \" , 채널 :\" + ss.channel + \")\";\r\n        const uniqkey = ss.UniqID;\r\n        slist.push({ title: title, seleted: seleted, uniqkey: uniqkey });\r\n      }\r\n\r\n      let dlist = [];\r\n      for (const dev of mdevlist) {\r\n        let seleted = false;\r\n\r\n        for (const di of copycfg.devids) {\r\n          if (di == dev.UniqID) {\r\n            console.log(\"select dev id : \" + dev.UniqID);\r\n            seleted = true;\r\n            break;\r\n          }\r\n        }\r\n        const title = dev.Name + \"( 채널 :\" + dev.Channel + \")\";\r\n        const uniqkey = dev.UniqID;\r\n\r\n        dlist.push({ title: title, seleted: seleted, uniqkey: uniqkey });\r\n      }\r\n\r\n      return (\r\n        <div className=\"auto_control\">\r\n          <div className=\"auto_title\" onChange={inputonchangeHandler}>\r\n            <div className=\"auto_name\">자동제어 운전변경 :</div>\r\n            <div className=\"auto_stop\">\r\n              <input type=\"radio\" key={\"enable\" + copycfg.uniqid} name=\"autoenable\" defaultChecked={copycfg.enabled} id=\"enable\" /> 자동운전\r\n              <input type=\"radio\" key={\"disable\" + copycfg.uniqid} name=\"autoenable\" defaultChecked={copycfg.enabled === false} id=\"disable\" /> 정지(수동제어)\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"autosetupinnerbox\">\r\n            <div className=\"auto_input\">\r\n              <div className=\"aut_in\">\r\n                이름 :\r\n                <input type=\"text\" key={\"name\" + copycfg.uniqid} defaultValue={copycfg.name} name=\"name\" onChange={inputonchangeHandler} />\r\n              </div>\r\n              <div className=\"aut_in\">\r\n                시작시간 :\r\n                <input type=\"time\" key={\"starttime\" + copycfg.uniqid} defaultValue={secToTime(copycfg.starttime)} name=\"starttime\" onChange={inputonchangeHandler} />\r\n              </div>\r\n              <div className=\"aut_in\">\r\n                종료시간 :\r\n                <input type=\"time\" key={\"endtime\" + copycfg.uniqid} defaultValue={secToTime(copycfg.endtime)} name=\"endtime\" onChange={inputonchangeHandler} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"device\" onChange={inputonchangeHandler}>\r\n              <div className=\"dev_name\">출력장치 선택</div>\r\n              <div className=\"dev_select\">{dlist.map((localState, index) => devicecheckbox(localState))}</div>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"two_radio\" onChange={inputonchangeHandler}>\r\n                <input type=\"radio\" key={\"timer\" + copycfg.uniqid} name=\"controlsel\" defaultChecked={copycfg.istimer} id=\"timer\" /> 타임머 제어\r\n                <input type=\"radio\" key={\"sensor\" + copycfg.uniqid} name=\"controlsel\" defaultChecked={copycfg.istimer === false} id=\"sensor\" />\r\n                센서제어\r\n              </div>\r\n\r\n              <div className=\"sensorconditionbox\" style={copycfg.istimer === false ? {} : { display: \"none\" }}>\r\n                <div className=\"con_sen\" onChange={inputonchangeHandler}>\r\n                  <div className=\"cons_name\">센서선택</div>\r\n                  <div className=\"cons_radio\">{slist.map((localState, index) => sensorselectbox(localState))}</div>\r\n                </div>\r\n\r\n                <div className=\"conditionselectbox\" onChange={inputonchangeHandler}>\r\n                  <input type=\"radio\" key={\"up\" + copycfg.uniqid} name=\"conditionsel\" defaultChecked={copycfg.condition === \"up\"} id=\"up\" /> 크면켜짐\r\n                  <input type=\"radio\" key={\"down\" + copycfg.uniqid} name=\"conditionsel\" defaultChecked={copycfg.condition === \"down\"} id=\"down\" />\r\n                  작으면켜짐\r\n                </div>\r\n\r\n                <label>켜짐조건: </label>\r\n                <input type=\"number\" key={\"onvalue\" + copycfg.uniqid} defaultValue={copycfg.onvalue} name=\"onvalue\" onChange={inputonchangeHandler} />\r\n                <label>꺼짐조건: </label>\r\n                <input type=\"number\" key={\"offvalue\" + copycfg.uniqid} defaultValue={copycfg.offvalue} name=\"offvalue\" onChange={inputonchangeHandler} />\r\n              </div>\r\n              <p></p>\r\n              <label>1회구동 최대구동시간: </label>\r\n              <input type=\"number\" key={\"onetime_run\" + copycfg.uniqid} defaultValue={copycfg.onetime_run} name=\"onetime_run\" onChange={inputonchangeHandler} />\r\n\r\n              <label>1회구동후 쉬는시간: </label>\r\n              <input type=\"number\" key={\"onetime_idle\" + copycfg.uniqid} defaultValue={copycfg.onetime_idle} name=\"onetime_idle\" onChange={inputonchangeHandler} />\r\n            </div>\r\n\r\n            <div className=\"control_end\">\r\n              <button className=\"cont_save\" onClick={() => setupSave(copycfg)} id=\"editcheck\">\r\n                저장{\" \"}\r\n              </button>\r\n              <button className=\"cont_reset\" onClick={() => setupselected(null)} id=\"editcheck\">\r\n                취소{\" \"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  function autocontrolbox(mydata) {\r\n    let autostate = <label className=\"auto_result\"> 정지됨</label>;\r\n\r\n    if (mydata.mConfig.enabled === true) {\r\n      let onofficon = \"./image/\" + (mydata.mState.onoffstate ? \"on\" : \"off\") + \".png\";\r\n\r\n      ///<img src={onofficon} className=\"onoff\" />\r\n      autostate = <label className=\"auto_result\"> 작동중</label>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"auto_seln\">\r\n        <label className=\"auto_inname\">{mydata.mConfig.name}</label>\r\n\r\n        {autostate}\r\n        <div className=\"auto_change\">\r\n          <button className=\"change_but\" onClick={() => setupselected(AutoControlconfig.deepcopy(mydata.mConfig))} id=\"editcheck\">\r\n            설정변경\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function onAdd() {\r\n    let newauto = new AutoControl(new AutoControlconfig());\r\n    mAutolist.push(newauto);\r\n    setUpdateauto(mAutolist);\r\n    setupselected(newauto.mConfig);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"auto\">\r\n        <div className=\"select\">\r\n          <div className=\"select_name\">정렬 :</div>\r\n          <div class=\"select_sort\">\r\n            <select name=\"sort\">\r\n              <option value=\"1\">시간순서</option>\r\n              <option value=\"2\">이름순서</option>\r\n              <option value=\"3\">카테고리</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"select_add\">\r\n            <button className=\"add_button\" onClick={() => onAdd()}>\r\n              + 추가\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"autocontroltable\">\r\n        {Autocontroleditbox(mSelecteditem, mSensors, mDevices)}\r\n\r\n        {mAutolist.map((localState, index) => autocontrolbox(localState))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Autocontrolpage;\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\devicepage.js",["141"],"import React, { useState, useEffect } from \"react\";\r\nimport Outputdevicedisplay from \"../outputdevicedisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\nimport myGlobalvalues from \"../myGlobal\";\r\n\r\nconst Devicepage = () => {\r\n  const [moutdevarray, setUpdate] = useState([]);\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    interval = setInterval(() => {\r\n      myGlobalvalues.farmapi.getoutputstatus().then((devices) => {\r\n        setUpdate(devices);\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [moutdevarray]);\r\n\r\n  return( <div>{Outputdevicedisplay(moutdevarray, false)}</div>);\r\n};\r\n\r\nexport default Devicepage;\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\sensorpage.js",["142"],"import React, { useState, useEffect } from \"react\";\r\nimport Sensordisplay from \"../sensordisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\nimport myGlobalvalues from \"../myGlobal\";\r\n\r\n\r\nimport { LineChart, ResponsiveContainer,Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nfunction MyLineRechart()\r\n{\r\n\r\n    const data = [\r\n        {\r\n            \"name\": \"Jan 2019\",\r\n            \"Product A\": 3432,\r\n            \"Procuct B\": 2342\r\n        },\r\n        {\r\n            \"name\": \"Feb 2019\",\r\n            \"Product A\": 2342,\r\n            \"Procuct B\": 3246\r\n        },\r\n        {\r\n            \"name\": \"Mar 2019\",\r\n            \"Product A\": 4565,\r\n            \"Procuct B\": 4556\r\n        },\r\n        {\r\n            \"name\": \"Apr 2019\",\r\n            \"Product A\": 6654,\r\n            \"Procuct B\": 4465\r\n        },\r\n        {\r\n            \"name\": \"May 2019\",\r\n            \"Product A\": 8765,\r\n            \"Procuct B\": 4553\r\n        }\r\n    ];\r\n\r\n    \r\n        return (\r\n          <ResponsiveContainer\r\n        width=\"100%\"\r\n      >\r\n            <LineChart  height={250} data={data}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"Product A\" stroke=\"#0095FF\" />\r\n                <Line type=\"monotone\" dataKey=\"Procuct B\" stroke=\"#FF0000\" />\r\n            </LineChart>\r\n            </ResponsiveContainer>\r\n        );\r\n    \r\n}\r\n\r\n\r\nconst Sensorpage = () => {\r\n\r\n\r\n    const [msensorsarray, setSensors] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      let interval = null;\r\n  \r\n      interval = setInterval(() => {\r\n        myGlobalvalues.farmapi.getsensordatas().then((sensors) => {\r\n          setSensors(sensors);\r\n        });\r\n      }, 1000);\r\n  \r\n      return () => clearInterval(interval);\r\n    }, [msensorsarray]);\r\n\r\n    \r\n    return(\r\n        \r\n            <div>\r\n              {Sensordisplay(msensorsarray,true)}\r\n\r\n              <div className=\"chartcontainer\">\r\n                {MyLineRechart()}\r\n                </div>\r\n              </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Sensorpage;","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\about.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\settingpage.js",["143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React, { useState, useEffect } from \"react\";\r\nimport Outputdevice from \"../commonjs/outputdevice\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\n\r\nconst Settingpage = () => {\r\n  let rlist12 = [];\r\n  let rlist24 = [];\r\n  let devcopycfg;\r\n  const [relaylist12, relayseleted12] = useState([]);\r\n  const [relaylist24, relayseleted24] = useState([]);\r\n  const [mSelecteditem, relayeditselected] = useState(null);\r\n  const [moutdevarray, setUpdatedevice] = useState([]);\r\n\r\n  for (let i = 0; i < 12; i++) {\r\n    rlist12.push(i);\r\n  }\r\n  for (let i = 12; i < 24; i++) {\r\n    rlist24.push(i);\r\n  }\r\n\r\n  function setupSave(mcfg) {\r\n    console.log(\"setupSave uidd: \" + mcfg.UniqID + \" name : \" + mcfg.Name);\r\n    \r\n    IndoorFarmAPI.setDeviceconfigsetup(mcfg).then((ret) => {\r\n      if(ret ==true)\r\n      {\r\n        alert(\"저장되었습니다.\");\r\n        relayeditselected(null);\r\n      }\r\n      else{\r\n        \r\n      }\r\n\r\n\r\n      console.log(\"setDeviceconfigsetup  uid: \" + ret);\r\n    });\r\n  }\r\n  function setupDelete(mcfg) {\r\n    mcfg.DevType = Outputdevice.OutDeviceTypeEnum.ODT_DELETE;\r\n    console.log(\"setupSave uidd: \" + mcfg.UniqID + \" name : \" + mcfg.Name);\r\n    IndoorFarmAPI.setDeviceconfigsetup(mcfg).then((ret) => {\r\n      console.log(\"setDeviceconfigsetup  uid: \" + ret);\r\n    });\r\n  }\r\n\r\n  function inputonchangeHandler(e) {\r\n    console.log(\"inputonchangeHandler : \" + e.target.name);\r\n\r\n    switch (e.target.name) {\r\n      case \"devname\":\r\n        devcopycfg.Name = e.target.value;\r\n        break;\r\n\r\n      case \"relayradio\":\r\n        if (e.target.checked === true) {\r\n          relayeditselected(e.target.id);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"deviceradio\":\r\n        devcopycfg.DevType = e.target.value;\r\n        if (e.target.checked === true) {\r\n          devcopycfg.DevType = Number(e.target.id);\r\n\r\n          console.log(\"devcopycfg.DevType : \" + devcopycfg.DevType);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  function Relayeditbox(myeditrelaynum, devicelist) {\r\n    //const [misTimershow, selectcontrol] = useState(myeditcfg !=null && myeditcfg.istimer);\r\n    //console.log(\"Autocontroleditbox  misTimershow: \" + misTimershow);\r\n\r\n    if (myeditrelaynum === null) {\r\n      return <div></div>;\r\n    } else {\r\n      let devobj = null;\r\n\r\n      for (const dev of devicelist) {\r\n        if (myeditrelaynum == dev.UniqID) {\r\n          devobj = dev;\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      //설정된 object가 없으면 새로생성\r\n      if (devobj === null) {\r\n        devobj = Outputdevice.CreateDefulatDevice(myeditrelaynum);\r\n      }\r\n\r\n      devcopycfg = Outputdevice.Clonbyjsonobj(devobj);\r\n\r\n      let devicon = \"./image/devicon_\" + devcopycfg.DevType + \".png\";\r\n      let onofficon = \"./image/\" + \"on.png\";\r\n\r\n      let devicetypelist = [];\r\n\r\n      for (let item in Outputdevice.OutDeviceTypeEnum) {\r\n        if (Outputdevice.OutDeviceTypeEnum[item] != Outputdevice.OutDeviceTypeEnum.ODT_DELETE) {\r\n          // console.log(Outputdevice.OutDeviceTypeEnum[item]);\r\n          devicetypelist.push(Outputdevice.OutDeviceTypeEnum[item]);\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div className=\"relaygroupbox\">\r\n          <div className=\"out_con\">\r\n            <div className=\"out_name\">\r\n              {\" \"}\r\n              <img src={devicon} className=\"icon\" /> {devcopycfg.Name}{\" \"}\r\n            </div>\r\n            <div className=\"out_value\"> {} </div>\r\n          </div>\r\n          <div className=\"outportsetupbox\">\r\n            <h4>\r\n              출력장치를 설정합니다.\r\n              <button className=\"cont_save2\" id=\"save\" onClick={() => setupSave(devcopycfg)}>\r\n                설정저장{\" \"}\r\n              </button>\r\n              <button className=\"cont_save2\" id=\"delete\" onClick={() => setupDelete(devcopycfg)}>\r\n                설정삭제{\" \"}\r\n              </button>\r\n              <h5>설정변경시 모든자동제어가 다시 시작됩니다.</h5>\r\n            </h4>\r\n\r\n            <label>이름: </label>\r\n            <input type=\"text\" key={devcopycfg.UniqID} defaultValue={devcopycfg.Name} name=\"devname\" onChange={inputonchangeHandler} />\r\n            <h4>장치종류 :</h4>\r\n\r\n            <div className=\"relaygroupbox\" onChange={inputonchangeHandler}>\r\n              {devicetypelist.map((localState, index) => deviceradiobox(localState, devcopycfg.DevType))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function deviceradiobox(devtypeid, selecttype) {\r\n    let devicon = \"./image/devicon_\" + devtypeid + \".png\";\r\n\r\n    return (\r\n      <div className=\"relaybox\">\r\n        <input type=\"radio\" key={devcopycfg.UniqID + devtypeid} name=\"deviceradio\" defaultChecked={selecttype == devtypeid ? true : false} id={devtypeid} />\r\n        <img src={devicon} className=\"icon\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function relayradiobox(relaynum, devicelist) {\r\n    let devname = \"사용안함\";\r\n    for (const dev of devicelist) {\r\n      //=== 쓰지말자\r\n      if (relaynum == dev.UniqID) {\r\n        devname = dev.Name;\r\n        break;\r\n      }\r\n    }\r\n\r\n    let relayname;\r\n    if (relaynum < 10) {\r\n      relayname = \"R-0\" + (relaynum + 1);\r\n    } else {\r\n      relayname = \"R-\" + (relaynum + 1);\r\n    }\r\n\r\n    return (\r\n      <div className=\"relaybox\">\r\n        <input type=\"radio\" key={relayname} name=\"relayradio\" defaultChecked={false} id={relaynum} /> {relayname}\r\n        <img src=\"./image/relay.png\" />\r\n        <div>\r\n          <label>{devname}</label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    IndoorFarmAPI.getoutputstatus().then((devices) => {\r\n      setUpdatedevice(devices);\r\n      relayseleted12(rlist12);\r\n      relayseleted24(rlist24);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"dev_name\">릴레이를 선택하세요.</div>\r\n      <div className=\"relay_select\" onChange={inputonchangeHandler}>\r\n        <div className=\"relaygroupbox\">{relaylist12.map((localState, index) => relayradiobox(localState, moutdevarray))}</div>\r\n        <div className=\"relaygroupbox\">{relaylist24.map((localState, index) => relayradiobox(localState, moutdevarray))}</div>\r\n      </div>\r\n      {Relayeditbox(mSelecteditem, moutdevarray)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settingpage;\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\kdcommon.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\firebase.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\store.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\mainReducer.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\mainAction.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\myGlobal.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\loginpage.js",["156","157"],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\mainpage.js",["158","159","160","161","162","163","164","165","166","167"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nimport Dashboard from \"./dashboard\";\r\nimport Sensorpage from \"./sensorpage\";\r\nimport Devicepage from \"./devicepage\";\r\nimport Autocontrolpage from \"./autocontrolpage\";\r\nimport Settingpage from \"./settingpage\";\r\nimport About from \"./about\";\r\n\r\n\r\nimport myGlobalvalues from \"../myGlobal\";\r\n\r\nconst Mainpage = () => {\r\n  \r\n    let adminmenu;\r\n\r\n  console.log(\"-------------------------main page ---------------------\");\r\n\r\n  \r\n  if (myGlobalvalues.isadmin === false) {\r\n    adminmenu = (\r\n      <Link to=\"/about\" className=\"linkmenu\">\r\n        <div className=\"content\">\r\n          <img src=\"./image/s_set.png\" className=\"con_img\" /> user \r\n        </div>\r\n      </Link>\r\n    );\r\n  } else {\r\n    adminmenu = (\r\n      <Link to=\"/about\" className=\"linkmenu\">\r\n        <div className=\"content\">\r\n          <img src=\"./image/s_set.png\" className=\"con_img\" /> admin \r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return (\r\n        \r\n      <Router>\r\n        <div className=\"indoor\">\r\n          <div className=\"left\">\r\n            <nav>\r\n              <div className=\"name\">\r\n                <img src=\"./image/kdgb.png\" className=\"name_img\" /> SFC-300\r\n              </div>\r\n              <div className=\"menu\">\r\n                <Link to=\"/dashboard\" className=\"linkmenu\">\r\n                  <div className=\"content\">\r\n                    <img src=\"./image/s_dash.png\" className=\"con_img\" /> DASH BOARD\r\n                  </div>\r\n                </Link>\r\n                <Link to=\"/sensor\" className=\"linkmenu\">\r\n                  <div className=\"content\">\r\n                    <img src=\"./image/s_sen.png\" className=\"con_img\" /> SENSOR\r\n                  </div>\r\n                </Link>\r\n                <Link to=\"/devices\" className=\"linkmenu\">\r\n                  <div className=\"content\">\r\n                    <img src=\"./image/s_dev.png\" className=\"con_img\" /> DEVICE\r\n                  </div>\r\n                </Link>\r\n                <Link to=\"/autocontrol\" className=\"linkmenu\">\r\n                  <div className=\"content\">\r\n                    <img src=\"./image/s_aut.png\" className=\"con_img\" /> AUTOCONTROL\r\n                  </div>\r\n                </Link>\r\n                <Link to=\"/setup\" className=\"linkmenu\">\r\n                  <div className=\"content\">\r\n                    <img src=\"./image/s_set.png\" className=\"con_img\" /> SETTING\r\n                  </div>\r\n                </Link>\r\n                {adminmenu}\r\n              </div>\r\n            </nav>\r\n          </div>\r\n\r\n          <div className=\"right\">\r\n            <div className=\"top\">\r\n              <div className=\"top_name\"> NO. 1 &nbsp;&nbsp; SENSOR NODE</div>\r\n              <div className=\"top_log\">\r\n                <div className=\"login\">LOG IN</div>\r\n                <div className=\"join\">JOIN</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"board\">\r\n              <Switch>\r\n                <Route path=\"/dashboard\" component={Dashboard} />\r\n                <Route path=\"/devices\" component={Devicepage} />\r\n                <Route path=\"/about\" component={About} />\r\n                <Route path=\"/sensor\" component={Sensorpage} />\r\n                <Route path=\"/autocontrol\" component={Autocontrolpage} />\r\n                <Route path=\"/setup\" component={Settingpage} />\r\n                <Route path=\"/\" component={Dashboard} exact />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n      \r\n  );\r\n\r\n};\r\n\r\nexport default Mainpage;\r\n",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":3,"column":17,"nodeType":"174","messageId":"175","endLine":3,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":30,"column":37,"nodeType":"178","messageId":"179","endLine":30,"endColumn":39},{"ruleId":"172","severity":1,"message":"180","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":22},{"ruleId":"176","severity":1,"message":"177","line":39,"column":25,"nodeType":"178","messageId":"179","endLine":39,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":27,"column":34,"nodeType":"183","endLine":27,"endColumn":72},{"ruleId":"172","severity":1,"message":"184","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":21},{"ruleId":"176","severity":1,"message":"185","line":31,"column":35,"nodeType":"178","messageId":"179","endLine":31,"endColumn":37},{"ruleId":"176","severity":1,"message":"185","line":32,"column":22,"nodeType":"178","messageId":"179","endLine":32,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":52,"column":34,"nodeType":"183","endLine":52,"endColumn":72},{"ruleId":"181","severity":1,"message":"182","line":53,"column":35,"nodeType":"183","endLine":53,"endColumn":76},{"ruleId":"176","severity":1,"message":"177","line":22,"column":27,"nodeType":"178","messageId":"179","endLine":22,"endColumn":29},{"ruleId":"172","severity":1,"message":"186","line":2,"column":17,"nodeType":"174","messageId":"175","endLine":2,"endColumn":26},{"ruleId":"172","severity":1,"message":"184","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":59,"column":39,"nodeType":"178","messageId":"189","endLine":59,"endColumn":40},{"ruleId":"190","severity":1,"message":"191","line":69,"column":9,"nodeType":"192","messageId":"193","endLine":105,"endColumn":10},{"ruleId":"176","severity":1,"message":"185","line":162,"column":18,"nodeType":"178","messageId":"179","endLine":162,"endColumn":20},{"ruleId":"172","severity":1,"message":"194","line":254,"column":11,"nodeType":"174","messageId":"175","endLine":254,"endColumn":20},{"ruleId":"172","severity":1,"message":"184","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":21},{"ruleId":"172","severity":1,"message":"184","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":21},{"ruleId":"176","severity":1,"message":"185","line":25,"column":14,"nodeType":"178","messageId":"179","endLine":25,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":49,"column":5,"nodeType":"192","messageId":"193","endLine":69,"endColumn":6},{"ruleId":"176","severity":1,"message":"185","line":82,"column":28,"nodeType":"178","messageId":"179","endLine":82,"endColumn":30},{"ruleId":"172","severity":1,"message":"194","line":97,"column":11,"nodeType":"174","messageId":"175","endLine":97,"endColumn":20},{"ruleId":"187","severity":1,"message":"188","line":97,"column":34,"nodeType":"178","messageId":"189","endLine":97,"endColumn":35},{"ruleId":"176","severity":1,"message":"177","line":102,"column":50,"nodeType":"178","messageId":"179","endLine":102,"endColumn":52},{"ruleId":"181","severity":1,"message":"182","line":113,"column":15,"nodeType":"183","endLine":113,"endColumn":53},{"ruleId":"176","severity":1,"message":"185","line":147,"column":111,"nodeType":"178","messageId":"179","endLine":147,"endColumn":113},{"ruleId":"181","severity":1,"message":"182","line":148,"column":9,"nodeType":"183","endLine":148,"endColumn":47},{"ruleId":"176","severity":1,"message":"185","line":157,"column":20,"nodeType":"178","messageId":"179","endLine":157,"endColumn":22},{"ruleId":"181","severity":1,"message":"182","line":173,"column":9,"nodeType":"183","endLine":173,"endColumn":40},{"ruleId":"172","severity":1,"message":"195","line":182,"column":9,"nodeType":"174","messageId":"175","endLine":182,"endColumn":17},{"ruleId":"196","severity":1,"message":"197","line":189,"column":6,"nodeType":"198","endLine":189,"endColumn":8,"suggestions":"199"},{"ruleId":"172","severity":1,"message":"180","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":22},{"ruleId":"172","severity":1,"message":"200","line":10,"column":24,"nodeType":"174","messageId":"175","endLine":10,"endColumn":33},{"ruleId":"172","severity":1,"message":"173","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"201","line":1,"column":27,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"182","line":25,"column":11,"nodeType":"183","endLine":25,"endColumn":62},{"ruleId":"181","severity":1,"message":"182","line":33,"column":11,"nodeType":"183","endLine":33,"endColumn":62},{"ruleId":"181","severity":1,"message":"182","line":46,"column":17,"nodeType":"183","endLine":46,"endColumn":68},{"ruleId":"181","severity":1,"message":"182","line":51,"column":21,"nodeType":"183","endLine":51,"endColumn":73},{"ruleId":"181","severity":1,"message":"182","line":56,"column":21,"nodeType":"183","endLine":56,"endColumn":72},{"ruleId":"181","severity":1,"message":"182","line":61,"column":21,"nodeType":"183","endLine":61,"endColumn":72},{"ruleId":"181","severity":1,"message":"182","line":66,"column":21,"nodeType":"183","endLine":66,"endColumn":72},{"ruleId":"181","severity":1,"message":"182","line":71,"column":21,"nodeType":"183","endLine":71,"endColumn":72},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'myGlobalvalues' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IndoorFarmAPI' is defined but never used.","Expected '===' and instead saw '=='.","'Component' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'onofficon' is assigned a value but never used.","'interval' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'rlist12' and 'rlist24'. Either include them or remove the dependency array.","ArrayExpression",["204"],"'setUpdate' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},"Update the dependencies array to be: [rlist12, rlist24]",{"range":"207","text":"208"},[5616,5618],"[rlist12, rlist24]"]