[{"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\index.js":"1","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\App.js":"2","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\indoorfarmapi.js":"3","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\manualmessage.js":"4","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\reqMessage.js":"5","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\sensordevice.js":"6","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\outputdevice.js":"7","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\responseMessage.js":"8","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\sensordisplay.js":"9","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\outputdevicedisplay.js":"10","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrol.js":"11","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrolconfig.js":"12","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrolstatus.js":"13","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\dashboard.js":"14","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\autocontrolpage.js":"15","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\devicepage.js":"16","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\sensorpage.js":"17","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\about.js":"18","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\settingpage.js":"19"},{"size":434,"mtime":1622166928147,"results":"20","hashOfConfig":"21"},{"size":2944,"mtime":1622716547342,"results":"22","hashOfConfig":"21"},{"size":6271,"mtime":1622855021289,"results":"23","hashOfConfig":"21"},{"size":112,"mtime":1621219545114,"results":"24","hashOfConfig":"21"},{"size":329,"mtime":1622784830582,"results":"25","hashOfConfig":"21"},{"size":9462,"mtime":1622681091433,"results":"26","hashOfConfig":"21"},{"size":1691,"mtime":1622790222538,"results":"27","hashOfConfig":"21"},{"size":296,"mtime":1622192709508,"results":"28","hashOfConfig":"21"},{"size":997,"mtime":1622622650874,"results":"29","hashOfConfig":"21"},{"size":2038,"mtime":1622621980963,"results":"30","hashOfConfig":"21"},{"size":2375,"mtime":1622792205724,"results":"31","hashOfConfig":"21"},{"size":1463,"mtime":1622446140249,"results":"32","hashOfConfig":"21"},{"size":933,"mtime":1622463505649,"results":"33","hashOfConfig":"21"},{"size":1035,"mtime":1622619053819,"results":"34","hashOfConfig":"21"},{"size":11636,"mtime":1622853896254,"results":"35","hashOfConfig":"21"},{"size":610,"mtime":1622621858647,"results":"36","hashOfConfig":"21"},{"size":2260,"mtime":1622621235664,"results":"37","hashOfConfig":"21"},{"size":163,"mtime":1622102406373,"results":"38","hashOfConfig":"21"},{"size":6378,"mtime":1622790872167,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1lqgpbv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\index.js",[],["87","88"],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\App.js",["89","90","91","92","93","94","95","96"],"import \"./App.css\";\n\nimport React, {  useState } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nimport Dashboard from \"./pages/dashboard\";\nimport Sensorpage from \"./pages/sensorpage\";\nimport Devicepage from \"./pages/devicepage\";\nimport Autocontrolpage from \"./pages/autocontrolpage\";\nimport Settingpage from \"./pages/settingpage\";\nimport About from \"./pages/about\";\n\nfunction App() {\n  const [hwchannel, sethwchannel] = useState(0);\n  \n\n  return (\n    <div className=\"App\">\n\n      \n      <Router>\n        <div className=\"indoor\">\n          <div className=\"left\">\n            <nav>\n            <div className=\"name\">\n              <img src=\"./image/kdgb.png\" className=\"name_img\" /> SFC-300\n            </div>\n            <div className=\"menu\">\n              <Link to=\"/dashboard\" className=\"linkmenu\">\n                <div className=\"content\">\n                  <img src=\"./image/s_dash.png\" className=\"con_img\" /> DASH BOARD\n                </div>\n              </Link>\n              <Link to=\"/sensor\" className=\"linkmenu\">\n                <div className=\"content\">\n                  <img src=\"./image/s_sen.png\" className=\"con_img\" /> SENSOR\n                </div>\n              </Link>\n              <Link to=\"/devices\" className=\"linkmenu\">\n                <div className=\"content\">\n                  <img src=\"./image/s_dev.png\" className=\"con_img\" /> DEVICE\n                </div>\n              </Link>\n              <Link to=\"/autocontrol\" className=\"linkmenu\">\n                <div className=\"content\">\n                  <img src=\"./image/s_aut.png\" className=\"con_img\" /> AUTOCONTROL\n                </div>\n              </Link>\n              <Link to=\"/setup\" className=\"linkmenu\">\n                <div className=\"content\">\n                  <img src=\"./image/s_set.png\" className=\"con_img\" /> SETTING\n                </div>\n              </Link>\n            </div>\n            </nav>\n          </div>\n\n          <div className=\"right\">\n            <div className=\"top\">\n              <div className=\"top_name\"> NO. 1 &nbsp;&nbsp; SENSOR NODE</div>\n              <div className=\"top_log\">\n                <div className=\"login\">LOG IN</div>\n                <div className=\"join\">JOIN</div>\n              </div>\n            </div>\n\n            <div className=\"board\">\n              \n              <Switch>\n              \n              <Route path=\"/dashboard\" component={Dashboard} />\n              <Route path=\"/devices\" component={Devicepage} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/sensor\" component={Sensorpage} />\n              <Route path=\"/autocontrol\" component={Autocontrolpage} />\n              <Route path=\"/setup\" component={Settingpage} />\n              <Route path=\"/\" component={Dashboard} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\indoorfarmapi.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\manualmessage.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\reqMessage.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\sensordevice.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\outputdevice.js",["97"],"const fs = require(\"fs\");\r\n\r\nclass Outputdevice {\r\n  static OPStatus = Object.freeze({\r\n    OPS_Off: \"off\", //꺼짐\r\n    OPS_On: \"on\", //켜짐\r\n    OPS_Local: \"local\", //현장수동제어\r\n    OPS_Idle: \"idle\",\r\n  });\r\n\r\n  static OutDeviceTypeEnum = Object.freeze({\r\n    ODT_RELAY: 0,\r\n    ODT_PUMP: 1, //\r\n    ODT_FAN: 2,\r\n    ODT_VALVE: 3,\r\n    ODT_LED: 4,\r\n    ODT_COOLER: 5,\r\n    ODT_HEATER: 6,\r\n    ODT_POWER: 7,\r\n    ODT_NOZZLE: 8,\r\n    ODT_ETC: 99,\r\n    ODT_DELETE: 9999, //장치삭제\r\n  });\r\n\r\n  static Writefile(filename, mlist) {\r\n    let data = JSON.stringify(mlist);\r\n    fs.writeFileSync(filename, data);\r\n  }\r\n  static Readfile(filename) {\r\n    let rawdata = fs.readFileSync(filename);\r\n    let objlist = JSON.parse(rawdata);\r\n\r\n    let alist = [];\r\n    objlist.forEach((element) => {\r\n\r\n       let mdobj = Object.assign(new Outputdevice(), element);\r\n\r\n       //삭제가 아니면 \r\n       if(mdobj.DevType !=  Outputdevice.OutDeviceTypeEnum.ODT_DELETE)\r\n       {\r\n        alist.push(mdobj);\r\n       }\r\n    });\r\n\r\n    return alist;\r\n  }\r\n\r\n  static Clonbyjsonobj(mobj) {\r\n    return Object.assign(new Outputdevice(), mobj);\r\n  }\r\n\r\n  static CreateDefulatDevice(relaynum) {\r\n    let newdev =new Outputdevice();\r\n    newdev.UniqID=relaynum;\r\n    newdev.Name=\"릴레이-\"+(Number(relaynum)+1);\r\n    newdev.Channel =relaynum;\r\n    newdev.DevType  =Outputdevice.OutDeviceTypeEnum.ODT_RELAY;\r\n    \r\n    return newdev;\r\n  }\r\n\r\n  constructor() {\r\n    this.UniqID = 0; ///고유식별 id 릴레이번호로 입력 0~23\r\n    this.Name = 0;\r\n    this.Channel = 0;\r\n    this.DevType = 0;\r\n    this.Status = 0;\r\n    this.Autocontrolid = 0;\r\n  }\r\n}\r\n\r\nmodule.exports = Outputdevice;\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\responseMessage.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\sensordisplay.js",["98"],"import React from \"react\";\r\n\r\nfunction SensorBox(msensor) {\r\n  let cname = \"sen_con\";\r\n  let svalue;\r\n  let iconsrc = \"./image/sensor_\" + msensor.Sensortype + \".png\";\r\n\r\n  if (msensor.errorcount > 30) {\r\n    cname = \"sen_dis\";\r\n    svalue = (\r\n      <div className=\"sen_result\">\r\n        {\" \"}\r\n        <span className=\"blinking\">연결끊김</span>{\" \"}\r\n      </div>\r\n    );\r\n  } else {\r\n    svalue = (\r\n      <div className=\"sen_value\">\r\n        <label className=\"value\">{msensor.valuestring}</label>\r\n        <label className=\"unit\">{\" \" + msensor.ValueUnit}</label>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cname}>\r\n      <div className=\"sen_name\"> <img src={iconsrc} className=\"icon\" /> {msensor.Name}      </div>\r\n      {svalue}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Sensordisplay(msensorsarray, isonlystatus) {\r\n  return( \r\n  <div className=\"sensor\">\r\n    {msensorsarray.map((localState, index) => SensorBox(localState))}\r\n    </div>);\r\n}\r\n\r\nexport default Sensordisplay;\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\outputdevicedisplay.js",["99","100","101","102","103"],"import React from \"react\";\r\nimport IndoorFarmAPI from \"./indoorfarmapi\";\r\nimport manualMessage from \"./manualmessage\";\r\nimport Outputdevice from \"./commonjs/outputdevice\";\r\n\r\nfunction manualonoff(channel, onoff) {\r\n  if (onoff == true) {\r\n    console.log(\" manualonoff  on channel : \" + channel);\r\n  } else {\r\n    console.log(\" manualonoff  off channel : \" + channel);\r\n  }\r\n\r\n  const mdev = new manualMessage();\r\n  mdev.hardwareChannel = channel;\r\n  mdev.isonoff = onoff;\r\n\r\n  IndoorFarmAPI.setmanualonoff(mdev);\r\n}\r\n\r\nfunction outputdevbox(mydata, isonlystatus) {\r\n  let ismanual  ;\r\n  let devicon = \"./image/devicon_\" + mydata.DevType + \".png\";\r\n  let onofficon = \"./image/\" + mydata.Status + \".png\";\r\n\r\n  if (mydata.Status === Outputdevice.OPStatus.OPS_Local) {\r\n    \r\n    ismanual = (\r\n      <div className=\"man_result\">\r\n        <span className=\"blinking\">현장제어중</span>\r\n      </div>\r\n    );\r\n\r\n  } else if (mydata.Autocontrolid == 0) {\r\n    if (isonlystatus == true) {\r\n      ismanual = (<div className=\"out_result\">수동제어</div>);\r\n    } else {\r\n      ismanual = (\r\n        <div className=\"out_button\">\r\n          <button className=\"button_on\" onClick={() => manualonoff(mydata.Channel, true)}>수동 On</button> <button className=\"button_off\"  onClick={() => manualonoff(mydata.Channel, false)}>수동 Off</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  else{\r\n    ismanual = (\r\n      <div className=\"out_result\">자동제어중\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"out_con\">\r\n      <div className=\"out_name\"> <img src={devicon} className=\"icon\" />   {mydata.Name}    </div>\r\n      <div className=\"out_value\"> <img src={onofficon} className=\"onoff\" />   </div>\r\n      {ismanual}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Outputdevicedisplay(moutdevarray, isonlystatus) {\r\n  return (\r\n        \r\n       <div className=\"output\">\r\n        {moutdevarray.map((localState, index) => outputdevbox(localState, isonlystatus))}\r\n       </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Outputdevicedisplay;\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrol.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrolconfig.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\commonjs\\autocontrolstatus.js",["104"],"//자동제어시 변경되는 상태나 변수를 저장함.\r\nmodule.exports = class AutoControlStatus {\r\n  constructor(uniqid) {\r\n    this.autouniqid=uniqid;\r\n    this.pwmonoffstate = false;\r\n\r\n    this.pwmontime_count = 0;\r\n    this.pwmofftime_count = 0;\r\n\r\n    //처음초기화상태\r\n    this.onoffstate = null;\r\n  }\r\n  ischangestatecheck(newstate) {\r\n    if (newstate != null) {\r\n      //초기화상태이면 on이던 off 상태를 바로 변경함.\r\n      if (this.onoffstate===null)\r\n      {\r\n        this.onoffstate = newstate;\r\n        return true;\r\n      }\r\n\r\n      if (this.onoffstate != newstate) {\r\n        this.onoffstate = newstate;\r\n        return true;\r\n      }\r\n    }\r\n    else{\r\n      //초기화상태이고 조건이 알수없는 조건이면  off로 우선설정\r\n      if (this.onoffstate===null)\r\n      {\r\n        this.onoffstate = false;\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n};\r\n","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\dashboard.js",["105"],"\r\nimport React, { Component,useState, useEffect } from \"react\";\r\nimport Sensordisplay from \"../sensordisplay\";\r\nimport Outputdevicedisplay from \"../outputdevicedisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\nimport responseMessage from \"../commonjs/responseMessage\"\r\n\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [mresponse, setUpdatedata] = useState(new responseMessage());\r\n\r\n    //const [msensorsarray, setUpdatesensor] = useState([]);\r\n    //const [moutdevarray, setUpdatedevice] = useState([]);\r\n\r\n    useEffect(() => {\r\n      let interval = null;\r\n  \r\n      interval = setInterval(() => {\r\n\r\n        IndoorFarmAPI.getmultiple(true,true,false).then((mrsp) => {\r\n            setUpdatedata(mrsp);\r\n\r\n        });\r\n\r\n      }, 1000);\r\n  \r\n      return () => clearInterval(interval);\r\n    }, []);\r\n\r\n\r\n    return(\r\n      <div className=\"display\">\r\n        \r\n            {Sensordisplay(mresponse.Sensors,true)}\r\n            {Outputdevicedisplay(mresponse.Outputs,true)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\autocontrolpage.js",["106","107","108","109","110"],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\devicepage.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\sensorpage.js",["111"],"import React, { useState, useEffect } from \"react\";\r\nimport Sensordisplay from \"../sensordisplay\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\nimport { ResponsiveBump } from '@nivo/bump'\r\n\r\n\r\nimport { LineChart, ResponsiveContainer,Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nfunction MyLineRechart()\r\n{\r\n\r\n    const data = [\r\n        {\r\n            \"name\": \"Jan 2019\",\r\n            \"Product A\": 3432,\r\n            \"Procuct B\": 2342\r\n        },\r\n        {\r\n            \"name\": \"Feb 2019\",\r\n            \"Product A\": 2342,\r\n            \"Procuct B\": 3246\r\n        },\r\n        {\r\n            \"name\": \"Mar 2019\",\r\n            \"Product A\": 4565,\r\n            \"Procuct B\": 4556\r\n        },\r\n        {\r\n            \"name\": \"Apr 2019\",\r\n            \"Product A\": 6654,\r\n            \"Procuct B\": 4465\r\n        },\r\n        {\r\n            \"name\": \"May 2019\",\r\n            \"Product A\": 8765,\r\n            \"Procuct B\": 4553\r\n        }\r\n    ];\r\n\r\n    \r\n        return (\r\n          <ResponsiveContainer\r\n        width=\"100%\"\r\n      >\r\n            <LineChart  height={250} data={data}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"Product A\" stroke=\"#0095FF\" />\r\n                <Line type=\"monotone\" dataKey=\"Procuct B\" stroke=\"#FF0000\" />\r\n            </LineChart>\r\n            </ResponsiveContainer>\r\n        );\r\n    \r\n}\r\n\r\n\r\nconst Sensorpage = () => {\r\n\r\n\r\n    const [msensorsarray, setSensors] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      let interval = null;\r\n  \r\n      interval = setInterval(() => {\r\n        IndoorFarmAPI.getsensordatas().then((sensors) => {\r\n          setSensors(sensors);\r\n        });\r\n      }, 1000);\r\n  \r\n      return () => clearInterval(interval);\r\n    }, [msensorsarray]);\r\n\r\n    \r\n    return(\r\n        \r\n            <div>\r\n              {Sensordisplay(msensorsarray,true)}\r\n\r\n              <div className=\"chartcontainer\">\r\n                {MyLineRechart()}\r\n                </div>\r\n              </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Sensorpage;","H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\about.js",[],"H:\\KBM_WORK\\indoorfarm_work\\sfu3300\\KDIndoorFarm\\frontend\\farmapp\\src\\pages\\settingpage.js",["112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { useState, useEffect } from \"react\";\r\nimport Outputdevice from \"../commonjs/outputdevice\";\r\nimport IndoorFarmAPI from \"../indoorfarmapi\";\r\n\r\nconst Settingpage = () => {\r\n  let rlist12 = [];\r\n  let rlist24 = [];\r\n  let devcopycfg;\r\n  const [relaylist12, relayseleted12] = useState([]);\r\n  const [relaylist24, relayseleted24] = useState([]);\r\n  const [mSelecteditem, relayeditselected] = useState(null);\r\n  const [moutdevarray, setUpdatedevice] = useState([]);\r\n\r\n  for (let i = 0; i < 12; i++) {\r\n    rlist12.push(i);\r\n  }\r\n  for (let i = 12; i < 24; i++) {\r\n    rlist24.push(i);\r\n  }\r\n\r\n  /*\r\n  for (let i = 1; i <= 12; i++) {\r\n      if(i<10)\r\n      {\r\n    rlist12.push(\"R-0\" +i);\r\n      }\r\n      else{\r\n        rlist12.push(\"R-\" + i);\r\n      }\r\n  }\r\n  for (let i = 13; i <= 24; i++) {\r\n    rlist24.push(\"R-\" + i);\r\n  }\r\n*/\r\n  function setupSave(mcfg) {\r\n    console.log(\"setupSave uidd: \" + mcfg.UniqID + \" name : \" + mcfg.Name);\r\n    IndoorFarmAPI.setDeviceconfigsetup(mcfg).then((ret) => {\r\n      console.log(\"setDeviceconfigsetup  uid: \" + ret);\r\n    });\r\n  }\r\n  function setupDelete(mcfg) {\r\n    mcfg.DevType = Outputdevice.OutDeviceTypeEnum.ODT_DELETE;\r\n    console.log(\"setupSave uidd: \" + mcfg.UniqID + \" name : \" + mcfg.Name);\r\n    IndoorFarmAPI.setDeviceconfigsetup(mcfg).then((ret) => {\r\n      console.log(\"setDeviceconfigsetup  uid: \" + ret);\r\n    });\r\n  }\r\n\r\n  function inputonchangeHandler(e) {\r\n    console.log(\"inputonchangeHandler : \" + e.target.name);\r\n\r\n    switch (e.target.name) {\r\n      case \"devname\":\r\n        devcopycfg.Name = e.target.value;\r\n        break;\r\n\r\n      case \"relayradio\":\r\n        if (e.target.checked === true) {\r\n          relayeditselected(e.target.id);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"deviceradio\":\r\n        devcopycfg.DevType = e.target.value;\r\n        if (e.target.checked === true) {\r\n          devcopycfg.DevType = Number(e.target.id);\r\n\r\n          console.log(\"devcopycfg.DevType : \" + devcopycfg.DevType);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  function Relayeditbox(myeditrelaynum, devicelist) {\r\n    //const [misTimershow, selectcontrol] = useState(myeditcfg !=null && myeditcfg.istimer);\r\n    //console.log(\"Autocontroleditbox  misTimershow: \" + misTimershow);\r\n\r\n    if (myeditrelaynum === null) {\r\n      return <div></div>;\r\n    } else {\r\n      let devobj = null;\r\n\r\n      for (const dev of devicelist) {\r\n        if (myeditrelaynum == dev.UniqID) {\r\n          devobj = dev;\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      //설정된 object가 없으면 새로생성\r\n      if (devobj === null) {\r\n        devobj = Outputdevice.CreateDefulatDevice(myeditrelaynum);\r\n      }\r\n\r\n      devcopycfg = Outputdevice.Clonbyjsonobj(devobj);\r\n\r\n      let devicon = \"./image/devicon_\" + devcopycfg.DevType + \".png\";\r\n      let onofficon = \"./image/\" + \"on.png\";\r\n\r\n      let devicetypelist = [];\r\n\r\n      for (let item in Outputdevice.OutDeviceTypeEnum) {\r\n        if (Outputdevice.OutDeviceTypeEnum[item] != Outputdevice.OutDeviceTypeEnum.ODT_DELETE) {\r\n          // console.log(Outputdevice.OutDeviceTypeEnum[item]);\r\n          devicetypelist.push(Outputdevice.OutDeviceTypeEnum[item]);\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div className=\"relaygroupbox\">\r\n          <div className=\"out_con\">\r\n            <div className=\"out_name\">\r\n              {\" \"}\r\n              <img src={devicon} className=\"icon\" /> {devcopycfg.Name}{\" \"}\r\n            </div>\r\n            <div className=\"out_value\"> {} </div>\r\n          </div>\r\n          <div className=\"outportsetupbox\">\r\n            <h4>\r\n              출력장치를 설정합니다.\r\n              <button className=\"cont_save2\" id=\"save\" onClick={() => setupSave(devcopycfg)}>\r\n                설정저장{\" \"}\r\n              </button>\r\n              <button className=\"cont_save2\" id=\"delete\" onClick={() => setupDelete(devcopycfg)}>\r\n                설정삭제{\" \"}\r\n              </button>\r\n              <h5>설정변경시 모든자동제어가 다시 시작됩니다.</h5>\r\n            </h4>\r\n\r\n            <label>이름: </label>\r\n            <input type=\"text\" key={devcopycfg.UniqID} defaultValue={devcopycfg.Name} name=\"devname\" onChange={inputonchangeHandler} />\r\n            <h4>장치종류 :</h4>\r\n\r\n            <div className=\"relaygroupbox\" onChange={inputonchangeHandler}>\r\n              {devicetypelist.map((localState, index) => deviceradiobox(localState, devcopycfg.DevType))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function deviceradiobox(devtypeid, selecttype) {\r\n    let devicon = \"./image/devicon_\" + devtypeid + \".png\";\r\n\r\n    return (\r\n      <div className=\"relaybox\">\r\n        <input type=\"radio\" key={devcopycfg.UniqID + devtypeid} name=\"deviceradio\" defaultChecked={selecttype == devtypeid ? true : false} id={devtypeid} />\r\n        <img src={devicon} className=\"icon\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function relayradiobox(relaynum, devicelist) {\r\n    let devname = \"사용안함\";\r\n    for (const dev of devicelist) {\r\n      //=== 쓰지말자\r\n      if (relaynum == dev.UniqID) {\r\n        devname = dev.Name;\r\n        break;\r\n      }\r\n    }\r\n\r\n    let relayname;\r\n    if (relaynum < 10) {\r\n      relayname = \"R-0\" + (relaynum + 1);\r\n    } else {\r\n      relayname = \"R-\" + (relaynum + 1);\r\n    }\r\n\r\n    return (\r\n      <div className=\"relaybox\">\r\n        <input type=\"radio\" key={relayname} name=\"relayradio\" defaultChecked={false} id={relaynum} /> {relayname}\r\n        <img src=\"./image/relay.png\" />\r\n        <div>\r\n          <label>{devname}</label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    IndoorFarmAPI.getoutputstatus().then((devices) => {\r\n      setUpdatedevice(devices);\r\n      relayseleted12(rlist12);\r\n      relayseleted24(rlist24);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"dev_name\">릴레이를 선택하세요.</div>\r\n      <div className=\"relay_select\" onChange={inputonchangeHandler}>\r\n        <div className=\"relaygroupbox\">{relaylist12.map((localState, index) => relayradiobox(localState, moutdevarray))}</div>\r\n        <div className=\"relaygroupbox\">{relaylist24.map((localState, index) => relayradiobox(localState, moutdevarray))}</div>\r\n      </div>\r\n      {Relayeditbox(mSelecteditem, moutdevarray)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settingpage;\r\n",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":14,"column":10,"nodeType":"130","messageId":"131","endLine":14,"endColumn":19},{"ruleId":"128","severity":1,"message":"132","line":14,"column":21,"nodeType":"130","messageId":"131","endLine":14,"endColumn":33},{"ruleId":"133","severity":1,"message":"134","line":26,"column":15,"nodeType":"135","endLine":26,"endColumn":66},{"ruleId":"133","severity":1,"message":"134","line":31,"column":19,"nodeType":"135","endLine":31,"endColumn":71},{"ruleId":"133","severity":1,"message":"134","line":36,"column":19,"nodeType":"135","endLine":36,"endColumn":70},{"ruleId":"133","severity":1,"message":"134","line":41,"column":19,"nodeType":"135","endLine":41,"endColumn":70},{"ruleId":"133","severity":1,"message":"134","line":46,"column":19,"nodeType":"135","endLine":46,"endColumn":70},{"ruleId":"133","severity":1,"message":"134","line":51,"column":19,"nodeType":"135","endLine":51,"endColumn":70},{"ruleId":"136","severity":1,"message":"137","line":39,"column":25,"nodeType":"138","messageId":"139","endLine":39,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":27,"column":34,"nodeType":"135","endLine":27,"endColumn":72},{"ruleId":"136","severity":1,"message":"140","line":7,"column":13,"nodeType":"138","messageId":"139","endLine":7,"endColumn":15},{"ruleId":"136","severity":1,"message":"140","line":33,"column":35,"nodeType":"138","messageId":"139","endLine":33,"endColumn":37},{"ruleId":"136","severity":1,"message":"140","line":34,"column":22,"nodeType":"138","messageId":"139","endLine":34,"endColumn":24},{"ruleId":"133","severity":1,"message":"134","line":54,"column":34,"nodeType":"135","endLine":54,"endColumn":72},{"ruleId":"133","severity":1,"message":"134","line":55,"column":35,"nodeType":"135","endLine":55,"endColumn":76},{"ruleId":"136","severity":1,"message":"137","line":22,"column":27,"nodeType":"138","messageId":"139","endLine":22,"endColumn":29},{"ruleId":"128","severity":1,"message":"141","line":2,"column":17,"nodeType":"130","messageId":"131","endLine":2,"endColumn":26},{"ruleId":"128","severity":1,"message":"141","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":58,"column":39,"nodeType":"138","messageId":"144","endLine":58,"endColumn":40},{"ruleId":"145","severity":1,"message":"146","line":68,"column":9,"nodeType":"147","messageId":"148","endLine":104,"endColumn":10},{"ruleId":"136","severity":1,"message":"140","line":163,"column":18,"nodeType":"138","messageId":"139","endLine":163,"endColumn":20},{"ruleId":"136","severity":1,"message":"140","line":262,"column":64,"nodeType":"138","messageId":"139","endLine":262,"endColumn":66},{"ruleId":"128","severity":1,"message":"149","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":52,"column":5,"nodeType":"147","messageId":"148","endLine":72,"endColumn":6},{"ruleId":"136","severity":1,"message":"140","line":85,"column":28,"nodeType":"138","messageId":"139","endLine":85,"endColumn":30},{"ruleId":"128","severity":1,"message":"150","line":100,"column":11,"nodeType":"130","messageId":"131","endLine":100,"endColumn":20},{"ruleId":"142","severity":1,"message":"143","line":100,"column":34,"nodeType":"138","messageId":"144","endLine":100,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":105,"column":50,"nodeType":"138","messageId":"139","endLine":105,"endColumn":52},{"ruleId":"133","severity":1,"message":"134","line":116,"column":15,"nodeType":"135","endLine":116,"endColumn":53},{"ruleId":"136","severity":1,"message":"140","line":150,"column":111,"nodeType":"138","messageId":"139","endLine":150,"endColumn":113},{"ruleId":"133","severity":1,"message":"134","line":151,"column":9,"nodeType":"135","endLine":151,"endColumn":47},{"ruleId":"136","severity":1,"message":"140","line":160,"column":20,"nodeType":"138","messageId":"139","endLine":160,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":176,"column":9,"nodeType":"135","endLine":176,"endColumn":40},{"ruleId":"128","severity":1,"message":"151","line":185,"column":9,"nodeType":"130","messageId":"131","endLine":185,"endColumn":17},{"ruleId":"152","severity":1,"message":"153","line":192,"column":6,"nodeType":"154","endLine":192,"endColumn":8,"suggestions":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'hwchannel' is assigned a value but never used.","Identifier","unusedVar","'sethwchannel' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Component' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'ResponsiveBump' is defined but never used.","'onofficon' is assigned a value but never used.","'interval' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'rlist12' and 'rlist24'. Either include them or remove the dependency array.","ArrayExpression",["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},"Update the dependencies array to be: [rlist12, rlist24]",{"range":"161","text":"162"},[5710,5712],"[rlist12, rlist24]"]